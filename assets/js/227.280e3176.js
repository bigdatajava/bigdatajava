(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{570:function(n,s,a){"use strict";a.r(s);var t=a(1),e=Object(t.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("U2FsdGVkX1/w2wvaQG20leLU+5JQjzj+dyi3ypmUDMTk4IcK2hibpPeNUp7Ra5XY\nsG9OwPoQZwJxB3HCL2NzYNaEuXUQVaaRAMM20mO13HirvhNjwt+kjvijO5Wbxh7o\nVQ==\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("h2",{attrs:{id:"_1、springboot的自动配置原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、springboot的自动配置原理"}},[n._v("#")]),n._v(" 1、SpringBoot的自动配置原理")]),n._v(" "),s("h3",{attrs:{id:"一、简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[n._v("#")]),n._v(" 一、简介")]),n._v(" "),s("p",[n._v("不知道大家第一次搭SpringBoot环境的时候，有没有觉得非常简单。无须各种的配置文件，无须各种繁杂的pom坐标，一个main方法，就能run起来了。与其他框架整合也贼方便，使用EnableXXXXX注解就可以搞起来了！")]),n._v(" "),s("p",[n._v("所以今天来讲讲SpringBoot是如何实现自动配置的~")]),n._v(" "),s("h3",{attrs:{id:"二、原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、原理"}},[n._v("#")]),n._v(" 二、原理")]),n._v(" "),s("p",[s("strong",[n._v("自动配置流程图")])]),n._v(" "),s("p",[n._v("https://www.processon.com/view/link/5fc0abf67d9c082f447ce49b")]),n._v(" "),s("p",[n._v("https://www.processon.com/view/link/605b4b9de401fd4c03961a84")]),n._v(" "),s("p",[s("strong",[n._v("源码的话就先从启动类开始入手：")])]),n._v(" "),s("p",[n._v(".@SpringBootApplication: Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot")]),n._v(" "),s("p",[n._v("需要运行这个类的main方法来启动SpringBoot应用；")]),n._v(" "),s("ul",[s("li",[s("ul",[s("li",[s("strong",[n._v("SpringBootApplication")])])])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = {\n      @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n      @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("注解说明：")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("@Target(ElementType."),s("em",[n._v("TYPE")]),n._v(")")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("设置当前注解可以标记在哪")])])]),n._v(" "),s("li",[s("p",[n._v("@Retention(RetentionPolicy."),s("em",[n._v("RUNTIME")]),n._v(")")])]),n._v(" "),s("li",[s("ul",[s("li",[s("p",[n._v("当注解标注的类编译以什么方式保留")])]),n._v(" "),s("li",[s("ul",[s("li",[s("ul",[s("li",[s("p",[n._v("RetentionPolicy."),s("em",[n._v("RUNTIME")])])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("会被jvm加载")])])])])])])])])]),n._v(" "),s("li",[s("p",[n._v("@Documented")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("java doc 会生成注解信息")])])]),n._v(" "),s("li",[s("p",[n._v("@Inherited")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("是否会被继承")])])]),n._v(" "),s("li",[s("p",[n._v("@SpringBootConﬁguration**:Spring Boot的配置类；**")])]),n._v(" "),s("li",[s("ul",[s("li",[s("strong",[n._v("标注在某个类上，表示这是一个Spring Boot的配置类；")])])])]),n._v(" "),s("li",[s("p",[n._v("@Conﬁguration:"),s("strong",[n._v("配置类上来标注这个注解；")])])]),n._v(" "),s("li",[s("ul",[s("li",[s("strong",[n._v("配置类 ----- 配置文件；配置类也是容器中的一个组件；@Component")])])])]),n._v(" "),s("li",[s("p",[n._v("@EnableAutoConﬁguration**：开启自动配置功能；**")])]),n._v(" "),s("li",[s("ul",[s("li",[s("strong",[n._v("以前我们需要配置的东西，Spring Boot帮我们自动配置；@EnableAutoConﬁguration告诉SpringBoot开启自动配置，会帮我们自动去加载 自动配置类")])])])]),n._v(" "),s("li",[s("p",[n._v("@ComponentScan ： 扫描包")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("相当于在spring.xml 配置中    但是并没有指定basepackage，如果没有指定spring底层会自动扫描当前配置类所有在的包")])])]),n._v(" "),s("li",[s("p",[n._v("TypeExcludeFilter")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("springboot对外提供的扩展类， 可以供我们去按照我们的方式进行排除")])])]),n._v(" "),s("li",[s("p",[n._v("AutoConfigurationExcludeFilter")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("排除所有配置类并且是自动配置类中里面的其中一个")])])])]),n._v(" "),s("h3",{attrs:{id:"enableautoconfiguration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enableautoconfiguration"}},[n._v("#")]),n._v(" @EnableAutoConfiguration")]),n._v(" "),s("p",[n._v("这个注解里面，最主要的就是@EnableAutoConfiguration，这么直白的名字，一看就知道它要开启自动配置，SpringBoot要开始骚了，于是默默进去@EnableAutoConfiguration的源码。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@AutoConfigurationPackage\n@Import(AutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n    // 略\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("@AutoConfigurationPackage")]),n._v(" "),s("p",[n._v("将当前配置类所在包保存在BasePackages的Bean中。供Spring内部使用")]),n._v(" "),s("p",[s("strong",[n._v("@AutoConfigurationPackage")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Import(AutoConfigurationPackages.Registrar.class)  // 保存扫描路径， 提供给spring-data-jpa 需要扫描 @Entity\npublic @interface AutoConfigurationPackage {\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("ul",[s("li",[n._v("就是注册了一个保存当前配置类所在包的一个Bean")])]),n._v(" "),s("p",[s("strong",[n._v("@Import(AutoConfigurationImportSelector.class)  关键点！")])]),n._v(" "),s("p",[n._v("可以看到，在@EnableAutoConfiguration注解内使用到了@import注解来完成导入配置的功能，而AutoConfigurationImportSelector实现了DeferredImportSelectorSpring内部在解析@Import注解时会调用getAutoConfigurationEntry方法，这块属于Spring的源码，有点复杂，我们先不管它是怎么调用的。 下面是2.3.5.RELEASE实现源码：")]),n._v(" "),s("p",[n._v("getAutoConfigurationEntry方法进行扫描具有META-INF/spring.factories文件的jar包。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("protected AutoConfigurationEntry getAutoConfigurationEntry(AnnotationMetadata annotationMetadata) {\n   if (!isEnabled(annotationMetadata)) {\n      return EMPTY_ENTRY;\n   }\n   AnnotationAttributes attributes = getAttributes(annotationMetadata);\n   // 从META-INF/spring.factories中获得候选的自动配置类\n   List<String> configurations = getCandidateConfigurations(annotationMetadata, attributes);\n   // 排重\n   configurations = removeDuplicates(configurations);\n   //根据EnableAutoConfiguration注解中属性，获取不需要自动装配的类名单\n   Set<String> exclusions = getExclusions(annotationMetadata, attributes); \n   // 根据:@EnableAutoConfiguration.exclude\n   // @EnableAutoConfiguration.excludeName\n   // spring.autoconfigure.exclude  进行排除\n   checkExcludedClasses(configurations, exclusions);\n   // exclusions 也排除\n   configurations.removeAll(exclusions);\n   // 通过读取spring.factories 中的OnBeanCondition\\OnClassCondition\\OnWebApplicationCondition进行过滤\n   configurations = getConfigurationClassFilter().filter(configurations);\n   // 这个方法是调用实现了AutoConfigurationImportListener  的bean..  分别把候选的配置名单，和排除的配置名单传进去做扩展\n   fireAutoConfigurationImportEvents(configurations, exclusions);\n   return new AutoConfigurationEntry(configurations, exclusions);\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("任何一个springboot应用，都会引入spring-boot-autoconfigure，而spring.factories文件就在该包下面。spring.factories文件是Key=Value形式，多个Value时使用,隔开，该文件中定义了关于初始化，监听器等信息，而真正使自动配置生效的key是org.springframework.boot.autoconfigure.EnableAutoConfiguration，如下所示：")]),n._v(" "),s("p",[n._v("等同于")]),n._v(" "),s("p",[s("strong",[n._v("@Import({")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("# Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\n...省略\norg.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[s("strong",[n._v("})")])]),n._v(" "),s("p",[n._v("每一个这样的 xxxAutoConfiguration类都是容器中的一个组件，都加入到容器中；用他们来做自动配置；")]),n._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-auto-configuration-classes.html#auto-configuration-classes",target:"_blank",rel:"noopener noreferrer"}},[n._v("所有自动配置类表"),s("OutboundLink")],1)]),n._v(" "),s("ul",[s("li",[n._v("每一个自动配置类进行自动配置功能；")])]),n._v(" "),s("p",[n._v("后续： @EnableAutoConfiguration注解通过@SpringBootApplication被间接的标记在了Spring Boot的启动类上。在SpringApplication.run(...)的内部就会执行selectImports()方法，找到所有JavaConfig自动配置类的全限定名对应的class，然后将所有自动配置类加载到Spring容器中")]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("以HttpEncodingAutoConfiguration（Http编码自动配置）为例解释自动配置原理；")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('@Configuration(proxyBeanMethods = false)\n@EnableConfigurationProperties(ServerProperties.class)\n@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET)\n@ConditionalOnClass(CharacterEncodingFilter.class)\n@ConditionalOnProperty(prefix = "server.servlet.encoding", value = "enabled", matchIfMissing = true)\npublic class HttpEncodingAutoConfiguration {\n\n   private final Encoding properties;\n\n   public HttpEncodingAutoConfiguration(ServerProperties properties) {\n      this.properties = properties.getServlet().getEncoding();\n   }\n\n   @Bean\n   @ConditionalOnMissingBean\n   public CharacterEncodingFilter characterEncodingFilter() {\n      CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter();\n      filter.setEncoding(this.properties.getCharset().name());\n      filter.setForceRequestEncoding(this.properties.shouldForce(Encoding.Type.REQUEST));\n      filter.setForceResponseEncoding(this.properties.shouldForce(Encoding.Type.RESPONSE));\n      return filter;\n   }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("@Configuration(proxyBeanMethods = false)")]),n._v(" "),s("ul",[s("li",[n._v("标记了@Configuration Spring底层会给配置创建cglib动态代理。 作用：就是防止每次调用本类的Bean方法而重新创建对象，Bean是默认单例的")])]),n._v(" "),s("p",[n._v("@EnableConfigurationProperties(ServerProperties.class)")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("启用可以在配置类设置的属性 对应的类")])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("@xxxConditional")]),n._v("根据当前不同的条件判断，决定这个配置类是否生效？")])])]),n._v(" "),s("p",[n._v("@Conditional"),s("strong",[n._v("派生注解（Spring注解版原生的@Conditional作用）")])]),n._v(" "),s("p",[n._v("作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；")]),n._v(" "),s("table",[s("thead",[s("tr",[s("th",[n._v("@Conditional扩展注解作用")]),n._v(" "),s("th",[n._v("（判断是否满足当前指定条件）")])])]),n._v(" "),s("tbody",[s("tr",[s("td",[n._v("@ConditionalOnJava")]),n._v(" "),s("td",[n._v("系统的java版本是否符合要求")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnBean")]),n._v(" "),s("td",[n._v("容器中存在指定Bean；")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnMissingBean")]),n._v(" "),s("td",[n._v("容器中不存在指定Bean；")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnExpression")]),n._v(" "),s("td",[n._v("满足SpEL表达式指定")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnClass")]),n._v(" "),s("td",[n._v("系统中有指定的类")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnMissingClass")]),n._v(" "),s("td",[n._v("系统中没有指定的类")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnSingleCandidate")]),n._v(" "),s("td",[n._v("容器中只有一个指定的Bean，或者这个Bean是首选Bean")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnProperty")]),n._v(" "),s("td",[n._v("系统中指定的属性是否有指定的值")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnResource")]),n._v(" "),s("td",[n._v("类路径下是否存在指定资源文件")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnWebApplication")]),n._v(" "),s("td",[n._v("当前是web环境")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnNotWebApplication")]),n._v(" "),s("td",[n._v("当前不是web环境")])]),n._v(" "),s("tr",[s("td",[n._v("@ConditionalOnJndi")]),n._v(" "),s("td",[n._v("JNDI存在指定项")])])])]),n._v(" "),s("p",[n._v("我们怎么知道哪些自动配置类生效；")]),n._v(" "),s("p",[n._v("我们可以通过设置配置文件中：启用 debug=true属性；来让控制台打印自动配置报告，这样我们就可以很方便的知道哪些自动配置类生效；")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:---**表示自动配置类启用的**\n-----------------\n...省略...\n\nNegative matches:---**没有匹配成功的自动配置类**\n-----------------\n...省略...\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br")])]),s("p",[n._v("下面我么就以**HttpEncodingAutoConfiguration（Http编码自动配置）**为例说明自动配置原理；")]),n._v(" "),s("p",[n._v("该注解如下：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/spring/image-20220621132336524.png",alt:"image-20220621132336524"}})]),n._v(" "),s("ul",[s("li",[n._v("@Configuration：表示这是一个配置类，以前编写的配置文件一样，也可以给容器中添加组件。")]),n._v(" "),s("li",[n._v("@ConditionalOnWebApplication：Spring底层@Conditional注解（Spring注解版），根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效； 判断当前应用是否是web应用，如果是，当前配置类生效。")]),n._v(" "),s("li",[n._v("@ConditionalOnClass：判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器。")]),n._v(" "),s("li",[n._v("@ConditionalOnProperty：判断配置文件中是否存在某个配置 spring.http.encoding.enabled；如果不存在，判断也是成立的")])]),n._v(" "),s("p",[n._v("即使我们配置文件中不配置pring.http.encoding.enabled=true，也是默认生效的。")]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("@EnableConfigurationProperties({ServerProperties.class})：将配置文件中对应的值和 ServerProperties绑定起来；并把 ServerProperties加入到 IOC 容器中。并注册")]),n._v("ConfigurationPropertiesBindingPostProcessor用于将@ConfigurationProperties的类和配置进行绑定")])]),n._v(" "),s("p",[s("strong",[n._v("ServerProperties")])]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621132607577.png",alt:"image-20220621132607577"}})]),n._v(" "),s("p",[n._v("ServerProperties通过 @ConfigurationProperties 注解将配置文件与自身属性绑定。")]),n._v(" "),s("p",[n._v("对于@ConfigurationProperties注解小伙伴们应该知道吧，我们如何获取全局配置文件的属性中用到，它的作用就是把全局配置文件中的值绑定到实体类JavaBean上面（将配置文件中的值与ServerProperites绑定起来），而@EnableConfigurationProperties主要是把以绑定值JavaBean加入到spring容器中。")]),n._v(" "),s("p",[n._v("到这里，小伙伴们应该明白，")]),n._v(" "),s("p",[n._v("我们在application.properties 声明spring.application.name 是通过@ConfigurationProperties注解，绑定到对应的XxxxProperties配置实体类上，然后再通过@EnableConfigurationProperties注解导入到Spring容器中.")]),n._v(" "),s("p",[s("strong",[n._v("所以只有知道了自动配置的原理及源码 才能灵活的配置SpringBoot")])]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621132637163.png",alt:"image-20220621132637163"}})]),n._v(" "),s("h2",{attrs:{id:"_2、自定义starter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、自定义starter"}},[n._v("#")]),n._v(" 2、自定义starter")]),n._v(" "),s("h3",{attrs:{id:"一、简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、简介-2"}},[n._v("#")]),n._v(" 一、简介")]),n._v(" "),s("p",[n._v("SpringBoot 最强大的功能就是把我们常用的场景抽取成了一个个starter（场景启动器），我们通过引入springboot 为我提供的这些场景启动器，我们再进行少量的配置就能使用相应的功能。即使是这样，springboot也不能囊括我们所有的使用场景，往往我们需要自定义starter，来简化我们对springboot的使用。")]),n._v(" "),s("h3",{attrs:{id:"二、如何自定义starter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、如何自定义starter"}},[n._v("#")]),n._v(" 二、如何自定义starter")]),n._v(" "),s("p",[n._v("1.实例")]),n._v(" "),s("p",[n._v("如何编写自动配置 ？")]),n._v(" "),s("p",[n._v("我们参照@WebMvcAutoConfiguration为例，我们看看们需要准备哪些东西，下面是WebMvcAutoConfiguration的部分代码：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Configuration\n@ConditionalOnWebApplication\n@ConditionalOnClass({Servlet.class, DispatcherServlet.class, WebMvcConfigurerAdapter.class})\n@ConditionalOnMissingBean({WebMvcConfigurationSupport.class})\n@AutoConfigureOrder(-2147483638)\n@AutoConfigureAfter({DispatcherServletAutoConfiguration.class, ValidationAutoConfiguration.class})\npublic class WebMvcAutoConfiguration {\n\n    @Import({WebMvcAutoConfiguration.EnableWebMvcConfiguration.class})\n    @EnableConfigurationProperties({WebMvcProperties.class, ResourceProperties.class})\n    public static class WebMvcAutoConfigurationAdapter extends WebMvcConfigurerAdapter {\n\n        @Bean\n        @ConditionalOnBean({View.class})\n        @ConditionalOnMissingBean\n        public BeanNameViewResolver beanNameViewResolver() {\n            BeanNameViewResolver resolver = new BeanNameViewResolver();\n            resolver.setOrder(2147483637);\n            return resolver;\n        }\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("p",[n._v("我们可以抽取到我们自定义starter时同样需要的一些配置。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Configuration  //指定这个类是一个配置类\n@ConditionalOnXXX  //指定条件成立的情况下自动配置类生效\n@AutoConfigureOrder  //指定自动配置类的顺序\n@Bean  //向容器中添加组件\n@ConfigurationProperties  //结合相关xxxProperties来绑定相关的配置\n@EnableConfigurationProperties  //让xxxProperties生效加入到容器中\n\n自动配置类要能加载需要将自动配置类，配置在META-INF/spring.factories中\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br")])]),s("p",[n._v("模式")]),n._v(" "),s("p",[n._v("我们参照 spring-boot-starter 我们发现其中没有代码：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621132831805.png",alt:"image-20220621132831805"}})]),n._v(" "),s("p",[n._v("我们在看它的pom中的依赖中有个 springboot-starter")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter</artifactId>\n</dependency>\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("我们再看看 spring-boot-starter 有个 spring-boot-autoconfigure")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-autoconfigure</artifactId>\n</dependency>\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("关于web的一些自动配置都写在了这里 ，所以我们有总结：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621132918073.png",alt:"image-20220621132918073"}})]),n._v(" "),s("ul",[s("li",[n._v("启动器（starter）是一个空的jar文件，仅仅提供辅助性依赖管理，这些依赖可能用于自动装配或其他类库。")]),n._v(" "),s("li",[n._v("需要专门写一个类似spring-boot-autoconfigure的配置模块")]),n._v(" "),s("li",[n._v("用的时候只需要引入启动器starter，就可以使用自动配置了")])]),n._v(" "),s("p",[n._v("命名规范")]),n._v(" "),s("p",[n._v("官方命名空间")]),n._v(" "),s("ul",[s("li",[n._v("前缀：spring-boot-starter-")]),n._v(" "),s("li",[n._v("模式：spring-boot-starter-模块名")]),n._v(" "),s("li",[n._v("举例：spring-boot-starter-web、spring-boot-starter-jdbc")])]),n._v(" "),s("p",[n._v("自定义命名空间")]),n._v(" "),s("ul",[s("li",[n._v("后缀：-spring-boot-starter")]),n._v(" "),s("li",[n._v("模式：模块-spring-boot-starter")]),n._v(" "),s("li",[n._v("举例：mybatis-spring-boot-starter")])]),n._v(" "),s("h3",{attrs:{id:"三、自定义starter实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、自定义starter实例"}},[n._v("#")]),n._v(" 三、自定义starter实例")]),n._v(" "),s("p",[n._v("我们需要先创建一个父maven项目:springboot_custome_starter")]),n._v(" "),s("p",[n._v("两个Module: tulingxueyuan-spring-boot-starter 和 tulingxueyuan-spring-boot-starter-autoconfigurer")]),n._v(" "),s("p",[n._v("springboot_custome_starter")]),n._v(" "),s("p",[n._v("pom.xml")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <modules>\n        <module>tulingxueyuan-spring-boot-starter</module>\n        <module>tulingxueyuan-spring-boot-autoconfigure</module>\n    </modules>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.6.RELEASE</version>\n        <relativePath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n    <packaging>pom</packaging>\n    <groupId>com.tulingxueyuan.springboot</groupId>\n    <artifactId>springboot_custome_starter</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springboot_custome_starter</name>\n    <description>SpringBoot自定义starter</description>\n\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n    </dependencies>\n\n</project>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br")])]),s("p",[n._v("\\1. tulingxueyuan-spring-boot-starter")]),n._v(" "),s("p",[n._v("1.pom.xml")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <parent>\n        <artifactId>springboot_custome_starter</artifactId>\n        <groupId>com.tulingxueyuan.springboot</groupId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n    <description>\n        启动器（starter）是一个空的jar文件，\n        仅仅提供辅助性依赖管理，\n        这些依赖需要自动装配或其他类库。\n    </description>\n\n    <artifactId>tulingxueyuan-spring-boot-starter</artifactId>\n\n    <dependencies>\n        \x3c!--引入autoconfigure--\x3e\n        <dependency>\n            <groupId>com.tulingxueyuan.springboot</groupId>\n            <artifactId>tulingxueyuan-spring-boot-autoconfigure</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n\n        \x3c!--如果当前starter 还需要其他的类库就在这里引用--\x3e\n    </dependencies>\n\n</project>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])]),s("p",[n._v("如果使用spring Initializr创建的需要删除 启动类、resources下的文件，test文件。")]),n._v(" "),s("p",[n._v("\\2. tulingxueyuan-spring-boot-starter-autoconfigurer")]),n._v(" "),s("p",[n._v("\\1. pom.xml")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <parent>\n        <artifactId>springboot_custome_starter</artifactId>\n        <groupId>com.tulingxueyuan.springboot</groupId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>tulingxueyuan-spring-boot-autoconfigure</artifactId>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        \x3c!--‐导入配置文件处理器，配置文件进行绑定就会有提示--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n    </dependencies>\n\n\n</project>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("p",[n._v("\\2. HelloProperties")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('@ConfigurationProperties("tuling.hello")\npublic class HelloProperties {\n    private String name;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("\\3. IndexController")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('package com.starter.tulingxueyuan;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n/***\n * @Author 徐庶   QQ:1092002729\n * @Slogan 致敬大师，致敬未来的你\n */\n@RestController\npublic class IndexController {\n\n    HelloProperties helloProperties;\n\n    public IndexController(HelloProperties helloProperties) {\n        this.helloProperties=helloProperties;\n    }\n\n    @RequestMapping("/")\n    public String index(){\n        return helloProperties.getName()+"欢迎您";\n    }\n\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("\\4. HelloAutoConfitguration")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('package com.starter.tulingxueyuan;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/***\n * @Author 徐庶   QQ:1092002729\n * @Slogan 致敬大师，致敬未来的你\n *\n * 给web应用自动添加一个首页\n */\n@Configuration\n@ConditionalOnProperty(value = "tuling.hello.name")\n@EnableConfigurationProperties(HelloProperties.class)\npublic class HelloAutoConfitguration {\n\n    @Autowired\n    HelloProperties helloProperties;\n\n    @Bean\n    public IndexController indexController(){\n        return new IndexController(helloProperties);\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("\\5. spring.factories")]),n._v(" "),s("p",[n._v("在 resources 下创建文件夹 META-INF 并在 META-INF 下创建文件 spring.factories ，内容如下：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621133106851.png",alt:"image-20220621133106851"}})]),n._v(" "),s("p",[n._v("​                 org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\  com.starter.tulingxueyuan.HelloAutoConfitguration")]),n._v(" "),s("p",[n._v("到这儿，我们的配置自定义的starter就写完了 ，我们hello-spring-boot-starter-autoconfigurer、hello-spring-boot-starter 安装成本地jar包。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621133125702.png",alt:"image-20220621133125702"}})]),n._v(" "),s("p",[n._v("三、测试自定义starter")]),n._v(" "),s("p",[n._v("我们创建个Module: 12_springboot_starter，来测试系我们写的stater。")]),n._v(" "),s("p",[n._v("\\1. pom.xml")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<dependency>\n    <groupId>com.tulingxueyuan.springboot</groupId>\n    <artifactId>tulingxueyuan-spring-boot-starter</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n</dependency>\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[n._v("​")]),n._v(" "),s("p",[n._v("2.浏览")]),n._v(" "),s("p",[n._v("http://localhost:8080/")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220621133155462.png",alt:"image-20220621133155462"}})]),n._v(" "),s("p",[n._v("由于在自动配置上设置了")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('@ConditionalOnProperty(value = "tuling.hello.name")\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("但我们还没有配置。so......")]),n._v(" "),s("p",[n._v("\\3. application.properties")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('tuling.hello.name="图灵学院"              \n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("再次访问：http://localhost:8080/")])])}),[],!1,null,null,null);s.default=e.exports}}]);