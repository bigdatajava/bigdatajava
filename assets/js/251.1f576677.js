(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{595:function(s,n,e){"use strict";e.r(n);var t=e(1),a=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("U2FsdGVkX19cxEg8x/jEOHtJMA+qyrwf405lRspuTbsDjfxqAisL0Wae4smk/A8t\nSuyyvX5lNYucNsgGTMGd3MbTJcjak4WGgy7948EQSHyHxoX+Qg==\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("1. JWT")])]),s._v(" "),n("p",[n("strong",[s._v("1.1 什么是JWT")])]),s._v(" "),n("p",[s._v("JSON Web Token（JWT）是一个开放的行业标准（RFC 7519），它定义了一种简介的、自包含的协议格式，用于在通信双方传递json对象，传递的信息经过数字签名可以被验证和信任。JWT可以使用HMAC算法或使用RSA的公钥/私钥对来签名，防止被篡改。 官网： https://jwt.io/ 标准： https://tools.ietf.org/html/rfc7519")]),s._v(" "),n("p",[s._v("JWT令牌的优点：")]),s._v(" "),n("ol",[n("li",[s._v("jwt基于json，非常方便解析。")]),s._v(" "),n("li",[s._v("可以在令牌中自定义丰富的内容，易扩展。")]),s._v(" "),n("li",[s._v("通过非对称加密算法及数字签名技术，JWT防止篡改，安全性高。")]),s._v(" "),n("li",[s._v("资源服务使用JWT可不依赖授权服务即可完成授权。")])]),s._v(" "),n("p",[s._v("缺点：")]),s._v(" "),n("p",[s._v("​\tJWT令牌较长，占存储空间比较大。")]),s._v(" "),n("p",[n("strong",[s._v("1.2 JWT组成")])]),s._v(" "),n("p",[s._v("一个JWT实际上就是一个字符串，它由三部分组成，头部（header）、载荷（payload）与签名（signature）。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170103269.png",alt:"image-20220623170103269"}})]),s._v(" "),n("p",[n("strong",[s._v("头部（header）")])]),s._v(" "),n("p",[s._v("头部用于描述关于该JWT的最基本的信息：类型（即JWT）以及签名所用的算法（如HMACSHA256或RSA）等。")]),s._v(" "),n("p",[s._v("这也可以被表示成一个JSON对象：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n  "alg": "HS256",\n  "typ": "JWT"\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("然后将头部进行base64加密（该加密是可以对称解密的),构成了第一部分:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("载荷（payload）")])]),s._v(" "),n("p",[s._v("第二部分是载荷，就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分：")]),s._v(" "),n("ul",[n("li",[s._v("标准中注册的声明（建议但不强制使用）")])]),s._v(" "),n("p",[n("strong",[s._v("iss")]),s._v(": jwt签发者")]),s._v(" "),n("p",[n("strong",[s._v("sub")]),s._v(": jwt所面向的用户")]),s._v(" "),n("p",[n("strong",[s._v("aud")]),s._v(": 接收jwt的一方")]),s._v(" "),n("p",[n("strong",[s._v("exp")]),s._v(": jwt的过期时间，这个过期时间必须要大于签发时间")]),s._v(" "),n("p",[n("strong",[s._v("nbf")]),s._v(": 定义在什么时间之前，该jwt都是不可用的.")]),s._v(" "),n("p",[n("strong",[s._v("iat")]),s._v(": jwt的签发时间")]),s._v(" "),n("p",[n("strong",[s._v("jti")]),s._v(": jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。")]),s._v(" "),n("ul",[n("li",[s._v("公共的声明 公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.")]),s._v(" "),n("li",[s._v("私有的声明 私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。")])]),s._v(" "),n("p",[s._v("定义一个payload：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n  "sub": "1234567890",\n  "name": "John Doe",\n  "iat": 1516239022\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("然后将其进行base64加密，得到Jwt的第二部分:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("签名（signature）")])]),s._v(" "),n("p",[s._v("jwt的第三部分是一个签证信息，这个签证信息由三部分组成：")]),s._v(" "),n("ul",[n("li",[s._v("header (base64后的)")]),s._v(" "),n("li",[s._v("payload (base64后的)")]),s._v(" "),n("li",[s._v("secret(盐，一定要保密）")])]),s._v(" "),n("p",[s._v("这个部分需要base64加密后的header和base64加密后的payload使用.连接组成的字符串，然后通过header中声明的加密方式进行加盐secret组合加密，然后就构成了jwt的第三部分:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var encodedString = base64UrlEncode(header) + '.' + base64UrlEncode(payload);\n\nvar signature = HMACSHA256(encodedString, 'fox'); // khA7TNYc7_0iELcDyTc7gHBZ_xfIcgbfpzUNWwQtzME\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("将这三部分用.连接成一个完整的字符串,构成了最终的jwt:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.khA7TNYc7_0iELcDyTc7gHBZ_xfIcgbfpzUNWwQtzME\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。")]),s._v(" "),n("p",[n("strong",[s._v("如何应用")])]),s._v(" "),n("p",[s._v("一般是在请求头里加入Authorization，并加上Bearer标注：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("fetch('api/user/1', {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("服务端会验证token，如果验证通过就会返回相应的资源。整个流程就是这样的:")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170133011.png",alt:"image-20220623170133011"}})]),s._v(" "),n("p",[n("strong",[s._v("1.3 JJWT")])]),s._v(" "),n("p",[s._v("JJWT是一个提供端到端的JWT创建和验证的Java库，永远免费和开源(Apache License，版本2.0)。JJW很容易使用和理解。它被设计成一个以建筑为中心的流畅界面，隐藏了它的大部分复杂性。")]),s._v(" "),n("p",[n("strong",[s._v("快速开始")])]),s._v(" "),n("p",[s._v("引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--JWT依赖--\x3e\n<dependency>\n    <groupId>io.jsonwebtoken</groupId>\n    <artifactId>jjwt</artifactId>\n    <version>0.9.1</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("创建token")])]),s._v(" "),n("p",[s._v("创建测试类，生成token")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Test\npublic void test() {\n    //创建一个JwtBuilder对象\n    JwtBuilder jwtBuilder = Jwts.builder()\n        //声明的标识{"jti":"666"}\n        .setId("666")\n        //主体，用户{"sub":"Fox"}\n        .setSubject("Fox")\n        //创建日期{"ita":"xxxxxx"}\n        .setIssuedAt(new Date())\n        //签名手段，参数1：算法，参数2：盐\n        .signWith(SignatureAlgorithm.HS256, "123123");\n    //获取token\n    String token = jwtBuilder.compact();\n    System.out.println(token);\n\n    //三部分的base64解密\n    System.out.println("=========");\n    String[] split = token.split("\\\\.");\n    System.out.println(Base64Codec.BASE64.decodeToString(split[0]));\n    System.out.println(Base64Codec.BASE64.decodeToString(split[1]));\n    //无法解密\n    System.out.println(Base64Codec.BASE64.decodeToString(split[2]));\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("运行结果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170149780.png",alt:"image-20220623170149780"}})]),s._v(" "),n("p",[n("strong",[s._v("token的验证解析")])]),s._v(" "),n("p",[s._v("在web应用中由服务端创建了token然后发给客户端，客户端在下次向服务端发送请求时需要携带这个token（这就好像是拿着一张门票一样），那服务端接到这个token应该解析出token中的信息（例如用户id）,根据这些信息查询数据库返回相应的结果。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Test\npublic void testParseToken(){\n    //token\n    String token ="eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2NjYiLCJzdWIiOiJGb3giLCJpYXQiOjE2MDgyNzI1NDh9" +\n        ".Hz7tk6pJaest_jxFrJ4BWiMg3HQxjwY9cGmJ4GQwfuU";\n    //解析token获取载荷中的声明对象\n    Claims claims = Jwts.parser()\n        .setSigningKey("123123")\n        .parseClaimsJws(token)\n        .getBody();\n\n    System.out.println("id:"+claims.getId());\n    System.out.println("subject:"+claims.getSubject());\n    System.out.println("issuedAt:"+claims.getIssuedAt());\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170159699.png",alt:"image-20220623170159699"}})]),s._v(" "),n("p",[s._v("试着将token或签名秘钥篡改一下，会发现运行时就会报错，所以解析token也就是验证token")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170213393.png",alt:"image-20220623170213393"}})]),s._v(" "),n("p",[n("strong",[s._v("token过期校验")])]),s._v(" "),n("p",[s._v("有很多时候，我们并不希望签发的token是永久生效的，所以我们可以为token添加一个过期时间。原因：从服务器发出的token，服务器自己并不做记录，就存在一个弊端：服务端无法主动控制某个token的立刻失效。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170222465.png",alt:"image-20220623170222465"}})]),s._v(" "),n("p",[s._v("当未过期时可以正常读取，当过期时会引发io.jsonwebtoken.ExpiredJwtException异常。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170235669.png",alt:"image-20220623170235669"}})]),s._v(" "),n("p",[n("strong",[s._v("自定义claims")])]),s._v(" "),n("p",[s._v("我们刚才的例子只是存储了id和subject两个信息，如果你想存储更多的信息（例如角色）可以自定义claims。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Test\npublic void test() {\n    //创建一个JwtBuilder对象\n    JwtBuilder jwtBuilder = Jwts.builder()\n        //声明的标识{"jti":"666"}\n        .setId("666")\n        //主体，用户{"sub":"Fox"}\n        .setSubject("Fox")\n        //创建日期{"ita":"xxxxxx"}\n        .setIssuedAt(new Date())\n        //设置过期时间   1分钟\n        .setExpiration(new Date(System.currentTimeMillis()+60*1000))\n        //直接传入map\n        // .addClaims(map)\n        .claim("roles","admin")\n        .claim("logo","xxx.jpg")\n        //签名手段，参数1：算法，参数2：盐\n        .signWith(SignatureAlgorithm.HS256, "123123");\n    //获取token\n    String token = jwtBuilder.compact();\n    System.out.println(token);\n\n    //三部分的base64解密\n    System.out.println("=========");\n    String[] split = token.split("\\\\.");\n    System.out.println(Base64Codec.BASE64.decodeToString(split[0]));\n    System.out.println(Base64Codec.BASE64.decodeToString(split[1]));\n    //无法解密\n    System.out.println(Base64Codec.BASE64.decodeToString(split[2]));\n}\n\n@Test\npublic void testParseToken(){\n    //token\n    String token ="eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2NjYiLCJzdWIiOiJGb3giLCJpYXQiOjE2MDgyNzYzMTUsImV4cCI6MTYwODI3NjM3NSwicm9sZXMiOiJhZG1pbiIsImxvZ28iOiJ4eHguanBnIn0.Geg2tmkmJ9iWCWdvZNE3jRSfRaXaR4P3kiPDG3Lb0z4";\n    //解析token获取载荷中的声明对象\n    Claims claims = Jwts.parser()\n        .setSigningKey("123123")\n        .parseClaimsJws(token)\n        .getBody();\n\n    System.out.println("id:"+claims.getId());\n    System.out.println("subject:"+claims.getSubject());\n    System.out.println("issuedAt:"+claims.getIssuedAt());\n\n    DateFormat sf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");\n    System.out.println("签发时间:"+sf.format(claims.getIssuedAt()));\n    System.out.println("过期时间:"+sf.format(claims.getExpiration()));\n    System.out.println("当前时间:"+sf.format(new Date()));\n\n    System.out.println("roles:"+claims.get("roles"));\n    System.out.println("logo:"+claims.get("logo"));\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br")])]),n("p",[s._v("结果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170243683.png",alt:"image-20220623170243683"}})]),s._v(" "),n("p",[n("strong",[s._v("1.4 Spring Security Oauth2整合JWT")])]),s._v(" "),n("p",[n("strong",[s._v("整合JWT")])]),s._v(" "),n("p",[s._v("在之前的spring security Oauth2的代码基础上修改")]),s._v(" "),n("p",[s._v("引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-jwt</artifactId>\n    <version>1.0.9.RELEASE</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("添加配置文件JwtTokenStoreConfig.java")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\npublic class JwtTokenStoreConfig {\n\n    @Bean\n    public TokenStore jwtTokenStore(){\n        return new JwtTokenStore(jwtAccessTokenConverter());\n    }\n\n    @Bean\n    public JwtAccessTokenConverter jwtAccessTokenConverter(){\n        JwtAccessTokenConverter accessTokenConverter = new\n                JwtAccessTokenConverter();\n        //配置JWT使用的秘钥\n        accessTokenConverter.setSigningKey("123123");\n        return accessTokenConverter;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("在授权服务器配置中指定令牌的存储策略为JWT")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170258160.png",alt:"image-20220623170258160"}})]),s._v(" "),n("p",[s._v("用密码模式测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170322427.png",alt:"image-20220623170322427"}})]),s._v(" "),n("p",[s._v("发现获取到的令牌已经变成了JWT令牌，将access_token拿到https://jwt.io/ 网站上去解析下可以获得其中内容。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170330813.png",alt:"image-20220623170330813"}})]),s._v(" "),n("p",[n("strong",[s._v("扩展JWT中的存储内容")])]),s._v(" "),n("p",[s._v("有时候我们需要扩展JWT中存储的内容，这里我们在JWT中扩展一个 key为enhance，value为enhance info 的数据。 继承TokenEnhancer实现一个JWT内容增强器")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('public class JwtTokenEnhancer implements TokenEnhancer {\n\n    @Override\n    public OAuth2AccessToken enhance(OAuth2AccessToken accessToken,\n                                     OAuth2Authentication authentication) {\n        Map<String, Object> info = new HashMap<>();\n        info.put("enhance", "enhance info");\n        ((DefaultOAuth2AccessToken) accessToken).setAdditionalInformation(info);\n        return accessToken;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("创建一个JwtTokenEnhancer实例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Bean\npublic JwtTokenEnhancer jwtTokenEnhancer() {\nreturn new JwtTokenEnhancer();\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("在授权服务器配置中配置JWT的内容增强器")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Autowired\nprivate JwtTokenEnhancer jwtTokenEnhancer;\n\n@Override\npublic void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n    //配置JWT的内容增强器\n    TokenEnhancerChain enhancerChain = new TokenEnhancerChain();\n    List<TokenEnhancer> delegates = new ArrayList<>();\n    delegates.add(jwtTokenEnhancer);\n    delegates.add(jwtAccessTokenConverter);\n    enhancerChain.setTokenEnhancers(delegates);\n    endpoints.authenticationManager(authenticationManagerBean) //使用密码模式需要配置\n        .tokenStore(tokenStore)  //配置存储令牌策略\n        .accessTokenConverter(jwtAccessTokenConverter)\n        .tokenEnhancer(enhancerChain) //配置tokenEnhancer\n        .reuseRefreshTokens(false)  //refresh_token是否重复使用\n        .userDetailsService(userService) //刷新令牌授权包含对用户信息的检查\n        .allowedTokenEndpointRequestMethods(HttpMethod.GET,HttpMethod.POST); //支持GET,POST请求\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("运行项目后使用密码模式来获取令牌，之后对令牌进行解析，发现已经包含扩展的内容。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170342700.png",alt:"image-20220623170342700"}})]),s._v(" "),n("p",[n("strong",[s._v("解析JWT")])]),s._v(" "),n("p",[s._v("添加依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--JWT依赖--\x3e\n<dependency>\n    <groupId>io.jsonwebtoken</groupId>\n    <artifactId>jjwt</artifactId>\n    <version>0.9.1</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("修改UserController类，使用jjwt工具类来解析Authorization头中存储的JWT内容")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@GetMapping("/getCurrentUser")\npublic Object getCurrentUser(Authentication authentication,\n                             HttpServletRequest request) {\n    String header = request.getHeader("Authorization");\n    String token = null;\n    if(header!=null){\n        token = header.substring(header.indexOf("bearer") + 7);\n    }else {\n        token = request.getParameter("access_token");\n    }\n    return Jwts.parser()\n        .setSigningKey("123123".getBytes(StandardCharsets.UTF_8))\n        .parseClaimsJws(token)\n        .getBody();\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("将令牌放入Authorization头中，访问如下地址获取信息： http://localhost:8080/user/getCurrentUser")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170351416.png",alt:"image-20220623170351416"}})]),s._v(" "),n("p",[n("strong",[s._v("刷新令牌")])]),s._v(" "),n("p",[s._v("http://localhost:8080/oauth/token?grant_type=refresh_token&client_id=client&client_secret=123123&refresh_token=[refresh_token值]")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170415597.png",alt:"image-20220623170415597"}})]),s._v(" "),n("p",[n("strong",[s._v("2. Spring Secuirty Oauth2实现SSO")])]),s._v(" "),n("p",[s._v("创建客户端：oauth2-sso-client-demo")]),s._v(" "),n("p",[s._v("引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-oauth2</artifactId>\n    </dependency>\n\n    \x3c!--JWT依赖--\x3e\n    <dependency>\n        <groupId>io.jsonwebtoken</groupId>\n        <artifactId>jjwt</artifactId>\n        <version>0.9.1</version>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n    </dependency>\n\n</dependencies>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("修改application.properties")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("server.port=8081\n#防止Cookie冲突，冲突会导致登录验证不通过\nserver.servlet.session.cookie.name=OAUTH2-CLIENT-SESSIONID01\n#授权服务器地址\noauth2-server-url: http://localhost:8080\n#与授权服务器对应的配置\nsecurity.oauth2.client.client-id=client\nsecurity.oauth2.client.client-secret=123123\nsecurity.oauth2.client.user-authorization-uri=${oauth2-serverurl}/oauth/authorize\nsecurity.oauth2.client.access-token-uri=${oauth2-server-url}/oauth/token\nsecurity.oauth2.resource.jwt.key-uri=${oauth2-server-url}/oauth/token_key\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("在启动类上添加@EnableOAuth2Sso注解来启用单点登录功能")]),s._v(" "),n("blockquote",[n("p",[s._v("@EnableOAuth2Sso单点登录的原理简单来说就是：标注有@EnableOAuth2Sso的OAuth2 Client应用在通过某种OAuth2授权流程获取访问令牌后（一般是授权码流程），通过访问令牌访问userDetails用户明细这个受保护资源服务，获取用户信息后，将用户信息转换为Spring Security上下文中的认证后凭证Authentication，从而完成标注有@EnableOAuth2Sso的OAuth2 Client应用自身的登录认证的过程。整个过程是基于OAuth2的SSO单点登录")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@SpringBootApplication\n@EnableOAuth2Sso  \npublic class Oauth2SsoClientDemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Oauth2SsoClientDemoApplication.class, args);\n    }\n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("添加接口用于获取当前登录用户信息")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RestController\n@RequestMapping("/user")\npublic class UserController {\n\n    @RequestMapping("/getCurrentUser")\n    public Object getCurrentUser(Authentication authentication) {\n        return authentication;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("授权服务器：oauth2-jwt-demo")]),s._v(" "),n("p",[s._v("修改授权服务器中的AuthorizationServerConfig类，将绑定的跳转路径为http://localhost:8081/login，并添加获取秘钥时的身份认证")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170436241.png",alt:"image-20220623170436241"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Override\npublic void configure(AuthorizationServerSecurityConfigurer security) throws Exception {\n    //允许表单认证\n    security.allowFormAuthenticationForClients()\n        // 获取密钥需要身份认证，使用单点登录时必须配置\n        .tokenKeyAccess("isAuthenticated()");\n}\n\n@Override\npublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n    clients.inMemory()\n        //配置client_id\n        .withClient("client")\n        //配置client-secret\n        .secret(passwordEncoder.encode("123123"))\n        //配置访问token的有效期\n        .accessTokenValiditySeconds(3600)\n        //配置刷新token的有效期\n        .refreshTokenValiditySeconds(864000)\n        //配置redirect_uri，用于授权成功后跳转\n        .redirectUris("http://localhost:8081/login")\n        //自动授权配置\n\t\t.autoApprove(true)\n        //配置申请的权限范围\n        .scopes("all")\n        /**\n                 * 配置grant_type，表示授权类型\n                 * authorization_code: 授权码\n                 * password： 密码\n                 * client_credentials: 客户端\n                 * refresh_token: 更新令牌\n                 */\n        .authorizedGrantTypes("authorization_code","password","refresh_token");\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("测试 启动授权服务和客户端服务； 访问客户端需要授权的接口http://localhost:8081/user/getCurrentUser 会跳转到授权服务的登录界面；")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170457162.png",alt:"image-20220623170457162"}})]),s._v(" "),n("p",[s._v("授权后会跳转到原来需要权限的接口地址，展示登录用户信息")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170529247.png",alt:"image-20220623170529247"}})]),s._v(" "),n("p",[s._v("模拟两个客户端8081，8082")]),s._v(" "),n("p",[s._v("修改application.properties配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("server.port=8082\n#防止Cookie冲突，冲突会导致登录验证不通过\nserver.servlet.session.cookie.name=OAUTH2-CLIENT-SESSIONID${server.port}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("修改授权服务器配置，配置多个跳转路径")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//配置redirect_uri，用于授权成功后跳转\n.redirectUris("http://localhost:8081/login",\n              "http://localhost:8082/login")\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("8081登录成功之后，8082无需再次登录就可以访问http://localhost:8082/user/getCurrentUser")]),s._v(" "),n("p",[n("strong",[s._v("3. Spring Cloud中如何实现SSO")])]),s._v(" "),n("p",[s._v("网关整合 OAuth2.0 有两种思路，一种是授权服务器生成令牌, 所有请求统一在网关层验证，判断权限等操作；另一种是由各资源服务处理，网关只做请求转发。  比较常用的是第一种，把API网关作为OAuth2.0的资源服务器角色，实现接入客户端权限拦截、令牌解析并转发当前登录用户信息给微服务，这样下游微服务就不需要关心令牌格式解析以及OAuth2.0相关机制了。")]),s._v(" "),n("p",[s._v("网关在认证授权体系里主要负责两件事： （1）作为OAuth2.0的资源服务器角色，实现接入方权限拦截。 （2）令牌解析并转发当前登录用户信息（明文token）给微服务 微服务拿到明文token(明文token中包含登录用户的身份和权限信息)后也需要做两件事： （1）用户授权拦截（看当前用户是否有权访问该资源） （2）将用户信息存储进当前线程上下文（有利于后续业务逻辑随时获取当前用户信息）")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623170538525.png",alt:"image-20220623170538525"}})]),s._v(" "),n("p",[s._v("核心代码，网关自定义全局过滤器进行身份认证")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Component\n@Order(0)\npublic class AuthenticationFilter implements GlobalFilter, InitializingBean {\n\n    @Autowired\n    private RestTemplate restTemplate;\n\n    private static Set<String> shouldSkipUrl = new LinkedHashSet<>();\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        // 不拦截认证的请求\n        shouldSkipUrl.add("/oauth/token");\n        shouldSkipUrl.add("/oauth/check_token");\n        shouldSkipUrl.add("/user/getCurrentUser");\n    }\n\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n\n        String requestPath = exchange.getRequest().getURI().getPath();\n        \n        //不需要认证的url\n        if(shouldSkip(requestPath)) {\n            return chain.filter(exchange);\n        }\n\n        //获取请求头\n        String authHeader = exchange.getRequest().getHeaders().getFirst("Authorization");\n\n        //请求头为空\n        if(StringUtils.isEmpty(authHeader)) {\n            throw new RuntimeException("请求头为空");\n        }\n\n        TokenInfo tokenInfo=null;\n        try {\n            //获取token信息\n            tokenInfo = getTokenInfo(authHeader);\n        }catch (Exception e) {\n            throw new RuntimeException("校验令牌异常");\n        }\n        exchange.getAttributes().put("tokenInfo",tokenInfo);\n        return chain.filter(exchange);\n    }\n\n    private boolean shouldSkip(String reqPath) {\n\n        for(String skipPath:shouldSkipUrl) {\n            if(reqPath.contains(skipPath)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private TokenInfo getTokenInfo(String authHeader) {\n        // 获取token的值\n        String token = StringUtils.substringAfter(authHeader, "bearer ");\n\n        HttpHeaders headers = new HttpHeaders();\n        headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);\n        headers.setBasicAuth(MDA.clientId, MDA.clientSecret);\n\n        MultiValueMap<String, String> params = new LinkedMultiValueMap<>();\n        params.add("token", token);\n\n        HttpEntity<MultiValueMap<String, String>> entity = new HttpEntity<>(params, headers);\n\n        ResponseEntity<TokenInfo> response = restTemplate.exchange(MDA.checkTokenUrl, HttpMethod.POST, entity, TokenInfo.class);\n\n        return response.getBody();\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);