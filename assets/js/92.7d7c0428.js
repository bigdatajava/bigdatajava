(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{460:function(t,a,s){"use strict";s.r(a);var i=s(5),_=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-网络分层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络分层原理"}},[t._v("#")]),t._v(" 1.网络分层原理")]),t._v(" "),a("p",[t._v("网络传输会遇到如下问题：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131211527545.png",alt:"image-20240131211527545"}}),t._v("为了简化网络的复杂度，网络通信的不同方面被分解为多层次结构，每一层只与紧挨着  的上层或者下层进行交互，将网络分层，这样就可以修改，甚至替换某一层的软件，只要层与层之间的接口保持不变，就不会影响到其他层。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-网络协议-osi-tcp-ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-网络协议-osi-tcp-ip"}},[t._v("#")]),t._v(" 1.1 网络协议：OSI，TCP/IP")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("OSI( Open System Interconnection Reference Model): 开放系统互联参考模")]),t._v(" "),a("p",[t._v("型")])]),t._v(" "),a("li",[a("p",[t._v("TCP/IP 协议族")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131211719194.png",alt:"image-20240131211719194"}})]),t._v(" "),a("h3",{attrs:{id:"_1-2-一个http请求的分层解析流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-一个http请求的分层解析流程"}},[t._v("#")]),t._v(" 1.2 一个HTTP请求的分层解析流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131211955059.png",alt:"image-20240131211955059"}})]),t._v(" "),a("h2",{attrs:{id:"_2-http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-http协议"}},[t._v("#")]),t._v(" 2.HTTP协议")]),t._v(" "),a("p",[t._v("超文本传输协议(HyperText Transfer Protocol，HTTP)：  一种无状态的，以请求/应答方式运行的协议，它使用可扩展的语义和自描述消息格式，与  基于网络的超文本信息系统灵活的互动。")]),t._v(" "),a("h3",{attrs:{id:"http报文格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http报文格式"}},[t._v("#")]),t._v(" HTTP报文格式")]),t._v(" "),a("p",[t._v("HTTP 协议的请求报文和响应报文的结构基本相同，由三大部分组成：")]),t._v(" "),a("ul",[a("li",[t._v("起始行（start line）：描述请求或响应的基本信息")]),t._v(" "),a("li",[t._v("头部字段集合（header）：使用 key-value 形式更详细地说明报文")]),t._v(" "),a("li",[t._v("消息正文（entity）：实际传输的数据，它不一定是纯文本，可以是图片、视频  等二进制数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131212558867.png",alt:"image-20240131212558867"}})]),t._v(" "),a("h3",{attrs:{id:"请求行报文格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求行报文格式"}},[t._v("#")]),t._v(" 请求行报文格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131212646131.png",alt:"image-20240131212646131"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("请求方法：如 GET/HEAD/PUT/POST，表示对资源的操作；")])]),t._v(" "),a("li",[a("p",[t._v("请求目标：通常是一个 URI，标记了请求方法要操作的资源；")])]),t._v(" "),a("li",[a("p",[t._v("版本号：表示报文使用的 HTTP 协议版本。")]),t._v(" "),a("h3",{attrs:{id:"响应行报文格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应行报文格式"}},[t._v("#")]),t._v(" 响应行报文格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131212758611.png",alt:"image-20240131212758611"}})])]),t._v(" "),a("li",[a("p",[t._v("版本号：表示报文使用的 HTTP 协议版本；")])]),t._v(" "),a("li",[a("p",[t._v("状态码：一个三位数，用代码的形式表示处理的结果，比如 200 是成功，500")]),t._v(" "),a("p",[t._v("是服务器错误；")])]),t._v(" "),a("li",[a("p",[t._v("原因：作为数字状态码补充，是更详细的解释文字，帮助人理解原因")])])]),t._v(" "),a("h3",{attrs:{id:"http-头字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-头字段"}},[t._v("#")]),t._v(" HTTP 头字段")]),t._v(" "),a("p",[t._v("头部字段是 key-value 的形式，key 和 value 之间用“:”分隔，最后用 CRLF 换行表示字  段结束。比如前后分离时经常遇到的要与后端协商传输数据的类型“Content-type:  application/json”，这里 key 就是“Content-type”，value 就  是“application/json”。HTTP 头字段非常灵活，不仅可以使用标准里的 Host、  Connection 等已有头，也可以任意添加自定义头，这就给 HTTP 协议带来了无限的扩展可  能。")]),t._v(" "),a("p",[t._v("头字段注意事项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字段名不区分大小写，字段名里不允许出现空格，可以使用连字符“-”，但不  能使用下划线“"),a("em",[t._v("”（有的服务器不会解析带“")]),t._v("”的头字段）。字段名后面必须紧接  着“:”，不能有空格，而“:”后的字段值前可以有多个空格；")])]),t._v(" "),a("li",[a("p",[t._v("字段的顺序是没有意义的，可以任意排列不影响语义；")])]),t._v(" "),a("li",[a("p",[t._v("字段原则上不能重复，除非这个字段本身的语义允许，例如 Set-Cookie。")])])]),t._v(" "),a("h3",{attrs:{id:"常用头字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用头字段"}},[t._v("#")]),t._v(" 常用头字段")]),t._v(" "),a("p",[t._v("HTTP 协议中有非常多的头字段，但基本上可以分为四大类：")]),t._v(" "),a("ul",[a("li",[t._v("请求字段：请求头中的头字段；如Host，Referer。")]),t._v(" "),a("li",[t._v("响应字段：响应头中的头字段，如：Server；")]),t._v(" "),a("li",[t._v("通用字段：在请求头和响应头里都可以出现，如 Content-type，  Connection ；")])]),t._v(" "),a("h2",{attrs:{id:"_3-http请求的完整过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http请求的完整过程"}},[t._v("#")]),t._v(" 3.HTTP请求的完整过程")]),t._v(" "),a("p",[t._v("当用户在浏览器输入网址回车之后， 网络协议都做了哪些工作呢？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("首先干活的是 浏览器应用程序 ，他要解析出 URL中的域名")])]),t._v(" "),a("li",[a("p",[t._v("根据域名获取对应的ip地址 ，首先从浏览器缓存中查看 ，如下可以查看浏览器中域名对应 ip的解析")]),t._v(" "),a("blockquote",[a("p",[t._v("chrome://net-internals/#events")])]),t._v(" "),a("p",[t._v("如果没有则从本机域名解析文件hosts（/etc/hosts） 中查看 ，还没有则从LDNS（ Localdnsserver）、 Rootserver域名服务器、国际顶级域名服务商的DNS 的层层 解析")])]),t._v(" "),a("li",[a("p",[t._v("拿到IP地址后 ，浏览器就可以发起 与服务器的三次握手")])]),t._v(" "),a("li",[a("p",[t._v("握手建立之后 ，就开始组装http请求报文 ，发送报文")])]),t._v(" "),a("li",[a("p",[t._v("服务器收到请求报文之后开始 ，请求报文解析 ，生成响应数据 ，发送响应数据")])]),t._v(" "),a("li",[a("p",[t._v("浏览器收到响应之后 ，开始渲染页面")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131213709618.png",alt:"image-20240131213709618"}})]),t._v(" "),a("h2",{attrs:{id:"_4-tcp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-tcp协议"}},[t._v("#")]),t._v(" 4.TCP协议")]),t._v(" "),a("h3",{attrs:{id:"tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),a("p",[t._v("TCP（Transmission Control Protocol）：  面向连接的，可靠的，基于字节流的传输层通信协议")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基于连接的：数据传输之前需要建立连接")])]),t._v(" "),a("li",[a("p",[t._v("全双工的：双向传输")])]),t._v(" "),a("li",[a("p",[t._v("字节流：不限制数据大小，打包成报文段，保证有序接收，重复报文自动丢弃")])]),t._v(" "),a("li",[a("p",[t._v("流量缓冲：解决双方处理能力的不匹配")])]),t._v(" "),a("li",[a("p",[t._v("可靠的传输服务：保证可达，丢包时通过重发机制实现可靠性")])]),t._v(" "),a("li",[a("p",[t._v("拥塞控制：防止网络出现恶性拥塞")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131213848125.png",alt:"image-20240131213848125"}})]),t._v(" "),a("h3",{attrs:{id:"tcp连接管理-三次握手-四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp连接管理-三次握手-四次挥手"}},[t._v("#")]),t._v(" TCP连接管理：三次握手，四次挥手")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("TCP连接：四元组[ 源地址， 源端口， 目的地址， 目的端口 ]")])]),t._v(" "),a("li",[a("p",[t._v("确立连接：TCP三次握手")]),t._v(" "),a("ol",[a("li",[t._v("同步通信双方初始序列号( ISN, initial sequence number )")]),t._v(" "),a("li",[t._v("协商TCP通信参数（MSS, 窗口信息，指定校验和算法）")])])])]),t._v(" "),a("p",[t._v("TCP：三次握手：")]),t._v(" "),a("p",[t._v("![img](file:///C:/Users/14478/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)连接状态查看:")]),t._v(" "),a("blockquote",[a("p",[t._v("netstat ‐ntp ‐c 1")])]),t._v(" "),a("p",[t._v("TCP：四次挥手")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214325577.png",alt:"image-20240131214325577"}}),t._v("A：发送FIN数据包，代表A不在发送数据")]),t._v(" "),a("p",[t._v("B：收到请求，开始应答 ，避免了A重新发送FIN重试（应答机制)")]),t._v(" "),a("p",[t._v("B：处理完数据之后关闭，关闭连接,及发送FIN请求")]),t._v(" "),a("p",[t._v("A：收到请求后发送ACK应答，B服务可以释放连接")]),t._v(" "),a("p",[t._v("等待 2MSL后释放连接")]),t._v(" "),a("ol",[a("li",[t._v("防止报文丢失，导致B重复发送FIN")]),t._v(" "),a("li",[t._v("防止滞留在网络中的报文，对新建立的连接造成数据扰乱")])]),t._v(" "),a("h3",{attrs:{id:"字节流的协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节流的协议"}},[t._v("#")]),t._v(" 字节流的协议")]),t._v(" "),a("p",[t._v("TCP把应用交付的数据仅仅看成时一连串的无结构的字节流，TCP并不  知道字节流的含义，TCP并不关心应用程序一次将多大的报文发送到  TCP的缓存中，而是根据对方给出的窗口值和当前网络拥堵的程度来决")]),t._v(" "),a("p",[t._v("定一个报文段应该包含多少个字节。")]),t._v(" "),a("p",[t._v("MSS: Max Segment Size, 默认 536byte 实际数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214601158.png",alt:"image-20240131214601158"}})]),t._v(" "),a("h3",{attrs:{id:"数据可靠性传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据可靠性传输"}},[t._v("#")]),t._v(" 数据可靠性传输")]),t._v(" "),a("h4",{attrs:{id:"停止等待协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停止等待协议"}},[t._v("#")]),t._v(" 停止等待协议")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214706449.png",alt:"image-20240131214706449"}})]),t._v(" "),a("h4",{attrs:{id:"重传机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重传机制"}},[t._v("#")]),t._v(" 重传机制")]),t._v(" "),a("ol",[a("li",[t._v("ack 报文丢失")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214724981.png",alt:"image-20240131214724981"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("请求报文丢失")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214852440.png",alt:"image-20240131214852440"}})]),t._v(" "),a("p",[t._v("滑动窗口协议与累计确认（延时ack）")]),t._v(" "),a("p",[t._v("滑动窗口大小同通过 tcp三次握手和对端协商，且受网络状况影响")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131214932187.png",alt:"image-20240131214932187"}})]),t._v(" "),a("h2",{attrs:{id:"_5-https协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-https协议"}},[t._v("#")]),t._v(" 5.HTTPS协议")]),t._v(" "),a("h3",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),a("p",[t._v("由于 HTTP 天生“明文”的特点，整个传输过程完全透明，任何人都能  够在链路中截获、修改或者伪造请求 / 响应报文，数据不具有可信性。  因此就诞生了为安全而生的HTTPS协议。")]),t._v(" "),a("p",[t._v("使用HTTPS时，所有的HTTP请求和响应在发送到网络之前，都要进行  加密。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215403536.png",alt:"image-20240131215403536"}})]),t._v(" "),a("h3",{attrs:{id:"ssl-tls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls"}},[t._v("#")]),t._v(" SSL/TLS")]),t._v(" "),a("p",[t._v("SSL 即安全套接层（Secure Sockets Layer），由网景公司于 1994 年  发明，IETF 在 1999 年把它改名为 TLS（传输层安全，Transport  Layer Security），正式标准化，到今天 TLS 已经发展出了主流的三个  版本，分别是 2006 年的 1.1、2008 年的 1.2 ，2018的 1.3，每个新  版本都紧跟密码学的发展和互联网的现状，持续强化安全和性能，已经  成为了信息安全领域中的权威标准。")]),t._v(" "),a("h4",{attrs:{id:"摘要算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法"}},[t._v("#")]),t._v(" 摘要算法")]),t._v(" "),a("p",[t._v("摘要算法能够把任意长度的数据“压缩”成固定长度、而且独一无二  的“摘要”字符串，就好像是给这段数据生成了一个数字“指纹”。任  意微小的数据差异，都可以生成完全不同的摘要。所以可以通过把明文  信息的摘要和明文一起加密进行传输，数据传输到对方之后再进行解  密，重新对数据进行摘要，再比对就能发现数据有没有被篡改。这样就  保证了数据的完整性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215510059.png",alt:"image-20240131215510059"}})]),t._v(" "),a("h4",{attrs:{id:"加密算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加密算法"}},[t._v("#")]),t._v(" 加密算法")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("对称密钥加密算法")]),t._v("：编、解码使用相同密钥的算法，如（AES，")]),t._v(" "),a("p",[t._v("RC4,ChaCha20 ）。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("非对称密钥加密算法")]),t._v("：它有两个密钥，一个叫“公钥”，一个叫“私  钥”。两个密钥是不同的，公钥可以公开给任何人使用，而私钥必须严  格保密。非对称加密可以解决“密钥交换”的问题。网站秘密保管私  钥，在网上任意分发公钥，你想要登录网站只要用公钥加密就行了，密  文只能由私钥持有者才能解密。而黑客因为没有私钥，所以就无法破解  密文。非对称密钥加密系统通常需要大量的数学运算，比较慢。如  （DH、DSA、RSA、ECC ）")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215640219.png",alt:"image-20240131215640219"}})]),t._v(" "),a("p",[t._v("TLS 里使用的混合加密方式，即把对称加密和非对称加密结合起来呢，两者互相取长补短，即能高效地加密解密，又能安全地密钥交换。大致流程如下：")]),t._v(" "),a("ol",[a("li",[t._v("通信开始的时候使用非对称算法如 RSA,ECDHE先解决密钥交换的问  题")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215735762.png",alt:"image-20240131215735762"}}),t._v('2. 用随机数产生对称算法使用的"会话密钥"，再用公钥加密。会话密钥  很短，所以即便使用非对称加密算法也可以很快完成加解密。')]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215926258.png",alt:"image-20240131215926258"}})]),t._v(" "),a("p",[t._v("3.对方拿到密文后用私钥解密，取出会话密钥。完成对称密钥的安全交  换，后续就使用对称算法发完成数据交换")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131215949696.png",alt:"image-20240131215949696"}})]),t._v(" "),a("h4",{attrs:{id:"身份验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份验证"}},[t._v("#")]),t._v(" 身份验证")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数字证书组成：  CA信息，公钥用户信息，公钥，权威机构的签名，有效期")])]),t._v(" "),a("li",[a("p",[t._v("数字证书作用：")])])]),t._v(" "),a("ol",[a("li",[t._v("通过数字证书向浏览器证明身份")]),t._v(" "),a("li",[t._v("数字证书里面包含了公钥")])]),t._v(" "),a("ul",[a("li",[t._v("数字证书的申请和验证")])]),t._v(" "),a("ol",[a("li",[t._v("生成自己的公钥和私钥，服务器自己保留私钥")]),t._v(" "),a("li",[t._v("向CA机构提交公钥，公司，域名信息等待认证")]),t._v(" "),a("li",[t._v("CA机构通过线上，线下多种途径验证你提交信息的真实性，合法性")]),t._v(" "),a("li",[t._v("信息审核通过，CA机构则会向你签发认证的数字证书，包含了公  钥，组织信息，CA信息，有效时间，证书序列号，同时生成一个签  名；")])]),t._v(" "),a("p",[t._v("签名步骤: hash( 你用于申请证书所提交的明文信息 )=信息摘要；CA  再使用私钥对 信息摘要进行加密，密文就是证书的数字签名")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器如何验证呢？")]),t._v(" "),a("p",[t._v("有了CA签名过的数字证书，当浏览器访问服务器时，服务器会返回数  字证书给浏览器。浏览器收到证书后会对数字证书进行验证。  首先浏览器读取证书中相关的明文信息，采用CA签名时相同的hash函  数计算得到信息摘要A，再利用对应的CA公钥解密数字签名数据得到信  息摘要B，如果摘要A和摘要B一致，则可以确认证书时合法的")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/network0131/image-20240131220227267.png",alt:"image-20240131220227267"}})]),t._v(" "),a("p",[t._v("知名的 CA 全世界就那么几家，比如 DigiCert、VeriSign、Entrust、  Let’s Encrypt 等，它们签发的证书分域名验证（domain  validated,DV）证书、组织验证（organization validated,OV）证  书、扩展验证（extended validation,EV）证书三种，区别在于可信程  度。")]),t._v(" "),a("p",[t._v("DV可信级别是最低的，只是域名级别的可信，背后是谁不知道。")]),t._v(" "),a("p",[t._v("OV证书可信级别比DV高，会验证申请证书时填写的组织，企业信息是  否是正确的，申请往往需要几天时间，")]),t._v(" "),a("p",[t._v("EV 是最高的，经过了法律和审计的严格核查，可以证明网站拥有者的 身份。")])])}),[],!1,null,null,null);a.default=_.exports}}]);