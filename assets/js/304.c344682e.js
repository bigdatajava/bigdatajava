(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{649:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"正则表达式速查表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式速查表"}},[t._v("#")]),t._v(" 正则表达式速查表")]),t._v(" "),s("table",{staticClass:"wikitable"},[s("tbody",[s("tr",[s("th",{staticStyle:{"font-size":"18px"},attrs:{width:"8%"}},[t._v("字符")]),t._v(" "),s("th",{staticStyle:{"font-size":"18px"},attrs:{width:"92%"}},[t._v("描述")])]),t._v(" "),s("tr",[s("th",[t._v("\\")]),t._v(" "),s("td",[t._v("将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“"),s("code",[t._v("n")]),t._v("”匹配字符“"),s("code",[t._v("n")]),t._v("”。“"),s("code",[t._v("\\n")]),t._v("”匹配一个换行符。串行“"),s("code",[t._v("\\\\")]),t._v("”匹配“"),s("code",[t._v("\\")]),t._v("”而“"),s("code",[t._v("\\(")]),t._v("”则匹配“"),s("code",[t._v("(")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("^")]),t._v(" "),s("td",[t._v("匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“"),s("code",[t._v("\\n")]),t._v("”或“"),s("code",[t._v("\\r")]),t._v("”之后的位置。")])]),t._v(" "),s("tr",[s("th",[t._v("$")]),t._v(" "),s("td",[t._v("匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“"),s("code",[t._v("\\n")]),t._v("”或“"),s("code",[t._v("\\r")]),t._v("”之前的位置。")])]),t._v(" "),s("tr",[s("th",[t._v("*")]),t._v(" "),s("td",[t._v("匹配前面的子表达式零次或多次。例如，zo*能匹配“"),s("code",[t._v("z")]),t._v("”以及“"),s("code",[t._v("zoo")]),t._v("”。*等价于{0,}。")])]),t._v(" "),s("tr",[s("th",[t._v("+")]),t._v(" "),s("td",[t._v("匹配前面的子表达式一次或多次。例如，“"),s("code",[t._v("zo+")]),t._v("”能匹配“"),s("code",[t._v("zo")]),t._v("”以及“"),s("code",[t._v("zoo")]),t._v("”，但不能匹配“"),s("code",[t._v("z")]),t._v("”。+等价于{1,}。")])]),t._v(" "),s("tr",[s("th",[t._v("?")]),t._v(" "),s("td",[t._v("匹配前面的子表达式零次或一次。例如，“"),s("code",[t._v("do(es)?")]),t._v("”可以匹配“"),s("code",[t._v("does")]),t._v("”或“"),s("code",[t._v("does")]),t._v("”中的“"),s("code",[t._v("do")]),t._v("”。?等价于{0,1}。")])]),t._v(" "),s("tr",[s("th",[t._v("{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("}")]),t._v(" "),s("td",[s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("是一个非负整数。匹配确定的"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("次。例如，“"),s("code",[t._v("o{2}")]),t._v("”不能匹配“"),s("code",[t._v("Bob")]),t._v("”中的“"),s("code",[t._v("o")]),t._v("”，但是能匹配“"),s("code",[t._v("food")]),t._v("”中的两个o。")])]),t._v(" "),s("tr",[s("th",[t._v("{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v(",}")]),t._v(" "),s("td",[s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("是一个非负整数。至少匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("次。例如，“"),s("code",[t._v("o{2,}")]),t._v("”不能匹配“"),s("code",[t._v("Bob")]),t._v("”中的“"),s("code",[t._v("o")]),t._v("”，但能匹配“"),s("code",[t._v("foooood")]),t._v("”中的所有o。“"),s("code",[t._v("o{1,}")]),t._v("”等价于“"),s("code",[t._v("o+")]),t._v("”。“"),s("code",[t._v("o{0,}")]),t._v("”则等价于“"),s("code",[t._v("o*")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v(","),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("}")]),t._v(" "),s("td",[s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("和"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("均为非负整数，其中"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("<="),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("。最少匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("次且最多匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("次。例如，“"),s("code",[t._v("o{1,3}")]),t._v("”将匹配“"),s("code",[t._v("fooooood")]),t._v("”中的前三个o。“"),s("code",[t._v("o{0,1}")]),t._v("”等价于“"),s("code",[t._v("o?")]),t._v("”。请注意在逗号和两个数之间不能有空格。")])]),t._v(" "),s("tr",[s("th",[t._v("?")]),t._v(" "),s("td",[t._v("当该字符紧跟在任何一个其他限制符（*,+,?，{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("}，{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v(",}，{"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v(","),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“"),s("code",[t._v("oooo")]),t._v("”，“"),s("code",[t._v("o+?")]),t._v("”将匹配单个“"),s("code",[t._v("o")]),t._v("”，而“"),s("code",[t._v("o+")]),t._v("”将匹配所有“"),s("code",[t._v("o")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v(".")]),t._v(" "),s("td",[t._v("匹配除“"),s("code",[t._v("\\")]),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[s("code",[t._v("n")])]),t._v("”之外的任何单个字符。要匹配包括“"),s("code",[t._v("\\")]),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[s("code",[t._v("n")])]),t._v("”在内的任何字符，请使用像“"),s("code",[t._v("(.|\\n)")]),t._v("”的模式。")])]),t._v(" "),s("tr",[s("th",[t._v("(pattern)")]),t._v(" "),s("td",[t._v("匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“"),s("code",[t._v("\\(")]),t._v("”或“"),s("code",[t._v("\\)")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("(?:pattern)")]),t._v(" "),s("td",[t._v("匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“"),s("code",[t._v("(|)")]),t._v("”来组合一个模式的各个部分是很有用。例如“"),s("code",[t._v("industr(?:y|ies)")]),t._v("”就是一个比“"),s("code",[t._v("industry|industries")]),t._v("”更简略的表达式。")])]),t._v(" "),s("tr",[s("th",[t._v("(?=pattern)")]),t._v(" "),s("td",[t._v("正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“"),s("code",[t._v("Windows(?=95|98|NT|2000)")]),t._v("”能匹配“"),s("code",[t._v("Windows2000")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”，但不能匹配“"),s("code",[t._v("Windows3.1")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。")])]),t._v(" "),s("tr",[s("th",[t._v("(?!pattern)")]),t._v(" "),s("td",[t._v("正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“"),s("code",[t._v("Windows(?!95|98|NT|2000)")]),t._v("”能匹配“"),s("code",[t._v("Windows3.1")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”，但不能匹配“"),s("code",[t._v("Windows2000")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始")])]),t._v(" "),s("tr",[s("th",[t._v("(?<=pattern)")]),t._v(" "),s("td",[t._v("反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“"),s("code",[t._v("(?<=95|98|NT|2000)Windows")]),t._v("”能匹配“"),s("code",[t._v("2000Windows")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”，但不能匹配“"),s("code",[t._v("3.1Windows")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("(?<!pattern)")]),t._v(" "),s("td",[t._v("反向否定预查，与正向否定预查类拟，只是方向相反。例如“"),s("code",[t._v("(?<!95|98|NT|2000)Windows")]),t._v("”能匹配“"),s("code",[t._v("3.1Windows")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”，但不能匹配“"),s("code",[t._v("2000Windows")]),t._v("”中的“"),s("code",[t._v("Windows")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("x|y")]),t._v(" "),s("td",[t._v("匹配x或y。例如，“"),s("code",[t._v("z|food")]),t._v("”能匹配“"),s("code",[t._v("z")]),t._v("”或“"),s("code",[t._v("food")]),t._v("”。“"),s("code",[t._v("(z|f)ood")]),t._v("”则匹配“"),s("code",[t._v("zood")]),t._v("”或“"),s("code",[t._v("food")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("[xyz]")]),t._v(" "),s("td",[t._v("字符集合。匹配所包含的任意一个字符。例如，“"),s("code",[t._v("[abc]")]),t._v("”可以匹配“"),s("code",[t._v("plain")]),t._v("”中的“"),s("code",[t._v("a")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("[^xyz]")]),t._v(" "),s("td",[t._v("负值字符集合。匹配未包含的任意字符。例如，“"),s("code",[t._v("[^abc]")]),t._v("”可以匹配“"),s("code",[t._v("plain")]),t._v("”中的“"),s("code",[t._v("p")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("[a-z]")]),t._v(" "),s("td",[t._v("字符范围。匹配指定范围内的任意字符。例如，“"),s("code",[t._v("[a-z]")]),t._v("”可以匹配“"),s("code",[t._v("a")]),t._v("”到“"),s("code",[t._v("z")]),t._v("”范围内的任意小写字母字符。")])]),t._v(" "),s("tr",[s("th",[t._v("[^a-z]")]),t._v(" "),s("td",[t._v("负值字符范围。匹配任何不在指定范围内的任意字符。例如，“"),s("code",[t._v("[^a-z]")]),t._v("”可以匹配任何不在“"),s("code",[t._v("a")]),t._v("”到“"),s("code",[t._v("z")]),t._v("”范围内的任意字符。")])]),t._v(" "),s("tr",[s("th",[t._v("\\b")]),t._v(" "),s("td",[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如，“"),s("code",[t._v("er\\b")]),t._v("”可以匹配“"),s("code",[t._v("never")]),t._v("”中的“"),s("code",[t._v("er")]),t._v("”，但不能匹配“"),s("code",[t._v("verb")]),t._v("”中的“"),s("code",[t._v("er")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("\\B")]),t._v(" "),s("td",[t._v("匹配非单词边界。“"),s("code",[t._v("er\\B")]),t._v("”能匹配“"),s("code",[t._v("verb")]),t._v("”中的“"),s("code",[t._v("er")]),t._v("”，但不能匹配“"),s("code",[t._v("never")]),t._v("”中的“"),s("code",[t._v("er")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("\\cx")]),t._v(" "),s("td",[t._v("匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“"),s("code",[t._v("c")]),t._v("”字符。")])]),t._v(" "),s("tr",[s("th",[t._v("\\d")]),t._v(" "),s("td",[t._v("匹配一个数字字符。等价于[0-9]。")])]),t._v(" "),s("tr",[s("th",[t._v("\\D")]),t._v(" "),s("td",[t._v("匹配一个非数字字符。等价于[^0-9]。")])]),t._v(" "),s("tr",[s("th",[t._v("\\f")]),t._v(" "),s("td",[t._v("匹配一个换页符。等价于\\x0c和\\cL。")])]),t._v(" "),s("tr",[s("th",[t._v("\\n")]),t._v(" "),s("td",[t._v("匹配一个换行符。等价于\\x0a和\\cJ。")])]),t._v(" "),s("tr",[s("th",[t._v("\\r")]),t._v(" "),s("td",[t._v("匹配一个回车符。等价于\\x0d和\\cM。")])]),t._v(" "),s("tr",[s("th",[t._v("\\s")]),t._v(" "),s("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。")])]),t._v(" "),s("tr",[s("th",[t._v("\\S")]),t._v(" "),s("td",[t._v("匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。")])]),t._v(" "),s("tr",[s("th",[t._v("\\t")]),t._v(" "),s("td",[t._v("匹配一个制表符。等价于\\x09和\\cI。")])]),t._v(" "),s("tr",[s("th",[t._v("\\v")]),t._v(" "),s("td",[t._v("匹配一个垂直制表符。等价于\\x0b和\\cK。")])]),t._v(" "),s("tr",[s("th",[t._v("\\w")]),t._v(" "),s("td",[t._v("匹配包括下划线的任何单词字符。等价于“"),s("code",[t._v("[A-Za-z0-9_]")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("\\W")]),t._v(" "),s("td",[t._v("匹配任何非单词字符。等价于“"),s("code",[t._v("[^A-Za-z0-9_]")]),t._v("”。")])]),t._v(" "),s("tr",[s("th",[t._v("\\x"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")])]),t._v(" "),s("td",[t._v("匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("，其中"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“"),s("code",[t._v("\\x41")]),t._v("”匹配“"),s("code",[t._v("A")]),t._v("”。“"),s("code",[t._v("\\x041")]),t._v("”则等价于“"),s("code",[t._v("\\x04&1")]),t._v("”。正则表达式中可以使用ASCII编码。.")])]),t._v(" "),s("tr",[s("th",[t._v("\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("num")])]),t._v(" "),s("td",[t._v("匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("num")]),t._v("，其中"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("num")]),t._v("是一个正整数。对所获取的匹配的引用。例如，“"),s("code",[t._v("(.)\\1")]),t._v("”匹配两个连续的相同字符。")])]),t._v(" "),s("tr",[s("th",[t._v("\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")])]),t._v(" "),s("td",[t._v("标识一个八进制转义值或一个向后引用。如果\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("之前至少"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("个获取的子表达式，则"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为向后引用。否则，如果"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为八进制数字（0-7），则"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为一个八进制转义值。")])]),t._v(" "),s("tr",[s("th",[t._v("\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")])]),t._v(" "),s("td",[t._v("标识一个八进制转义值或一个向后引用。如果\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("之前至少有"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("个获得子表达式，则"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("为向后引用。如果\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("之前至少有"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("个获取，则"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为一个后跟文字"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("的向后引用。如果前面的条件都不满足，若"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("和"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m")]),t._v("均为八进制数字（0-7），则\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("将匹配八进制转义值"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("。")])]),t._v(" "),s("tr",[s("th",[t._v("\\"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nml")])]),t._v(" "),s("td",[t._v("如果"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("为八进制数字（0-3），且"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("m和l")]),t._v("均为八进制数字（0-7），则匹配八进制转义值"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("nm")]),t._v("l。")])]),t._v(" "),s("tr",[s("th",[t._v("\\u"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")])]),t._v(" "),s("td",[t._v("匹配"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("，其中"),s("span",{staticStyle:{"font-family":"Times New Roman","font-style":"italic"}},[t._v("n")]),t._v("是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）。")])])])]),t._v(" "),s("h2",{attrs:{id:"常用正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用正则表达式"}},[t._v("#")]),t._v(" 常用正则表达式")]),t._v(" "),s("table",{staticClass:"wikitable",attrs:{width:"100%"}},[s("tbody",[s("tr",[s("th",{attrs:{width:"8%"}},[t._v("用户名")]),t._v(" "),s("td",{attrs:{width:"92%"}},[t._v("/^[a-z0-9_-]{3,16}$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("密码")]),t._v(" "),s("td",[t._v("/^[a-z0-9_-]{6,18}$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("十六进制值")]),t._v(" "),s("td",[t._v("/^#?([a-f0-9]{6}|[a-f0-9]{3})$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("电子邮箱")]),t._v(" "),s("td",[t._v("/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/"),s("br"),t._v("\n  /^[a-z\\d]+(\\.[a-z\\d]+)*@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("URL")]),t._v(" "),s("td",[t._v("/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("IP 地址")]),t._v(" "),s("td",[t._v("/((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)/"),s("br"),t._v("/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("HTML 标签")]),t._v(" "),s("td",[t._v("/^<([a-z]+)([^<]+)*(?:>(.*)<\\/\\1>|\\s+\\/>)$/")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("删除代码\\\\注释")]),t._v(" "),s("td",[t._v("(?<!http:|\\S)//.*$")])]),t._v(" "),s("tr",[s("th",{attrs:{scope:"row"}},[t._v("Unicode编码中的汉字范围")]),t._v(" "),s("td",[t._v("/^[\\u2E80-\\u9FFF]+$/")])])])]),t._v(" "),s("h2",{attrs:{id:"问题-正则匹配去掉空段落p标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题-正则匹配去掉空段落p标签"}},[t._v("#")]),t._v(" 问题：正则匹配去掉空段落P标签")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin: 22px 0px 0px; padding: 0px; font-size: 16px; line-height: 24px; color: rgb&amp; #40;51, 51, 51&amp; #41;; text-align: justify;text-decoration-style: initial; text-decoration-color: initial;"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bjh-p"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("对"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin: 22px 0px 0px; padding: 0px; font-size: 16px; line-height: 24px; color: rgb&amp; #40;51, 51, 51&amp; #41;; text-align: justify;text-decoration-style: initial; text-decoration-color: initial;"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bjh-p"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"margin: 22px 0px 0px; padding: 0px; font-size: 16px; line-height: 24px; color: rgb&amp; #40;51, 51, 51&amp; #41;; text-align: justify;text-decoration-style: initial; text-decoration-color: initial;"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bjh-p"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("正在"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("里面有三个P标签，但是第二个P标签内只有html标签没有其他内容，要求是去掉这个没有内容的P标签\n先使用"),s("code",[t._v("/<p[^>]*>(?:(?!<\\/p>)[\\s\\S])*<\\/p>/gi")]),t._v(" 匹配整个P标签的内容，不管是否有内容都能匹配到\n"),s("code",[t._v("/<p(.*)<\\/p>/g")]),t._v(" 只能匹配到P标签内有内容的，只有html标签的不会匹配到\njs方法")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p_Html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("<p[^>]*>(?:(?!<\\/p>)[\\s\\S])*<\\/p>")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("gi")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配整个P标签的内容")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pp_Html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("<p(.*)<\\/p>")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配P标签有内容，只有html标签的没有其他内容的不会匹配到")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" p_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\ts_Html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p_Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"获取特定字符之间的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取特定字符之间的数据"}},[t._v("#")]),t._v(" 获取特定字符之间的数据")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('    public static void main(String[] args) {\n        String str = "子订单委托数量计算D011400316134--\x3eVolumeInLine=======D011400316134 ,begin=======( (0.1*0.86456*9532780.0-819500.0)/(1-0.1*0.86456) )" +\n                "-0.0,calcOrderQty=5107,pricePosition=6,key=value";\n        String flag = "子订单委托数量计算D011400316134--\x3e([\\\\s\\\\S])+pricePosition=[0-9],";\n        String[] split = str.split(flag);\n        System.out.println(split);\n\n\n        // 匹配规则\n        String reg = "(?=\\\\*).*?(?=-)";\n        String temp = "子订单委托数量计算D011800199664--\x3eVolumeInLine=======D011800199664 ,begin=======( (0.1*0.8063*94962.0-9145.0)/(1-0.1*0.8063) )-303.0,calcOrderQty=-1618.7323275721415,";\n        Pattern pattern = Pattern.compile(reg);\n        Matcher matcher = pattern.matcher(temp);\n        if (matcher.find()) {\n            System.out.println(matcher.group());\n        }\n    }\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('2.8 符号 ()\n\n"(pattern)" 小括号单纯的包含了子表达式，表示此分组可以被捕获。捕获的意思就是此分组的内容会被保存下来，后续可以从匹配的集合中获取到。\n\n"(?:pattern)" 小括号中增加了 ?: 前缀，表示此分组不可以被捕获。后续匹配的集合中就不会包含此分组信息。\n\n"(?=pattern)" 小括号中增加了 ?= 前缀，表示的是匹配此分组，但是此分组里的内容不需要被获取。\n\n"(?!pattern)" 小括号中增加了 ?! 前缀，表示的是匹配此分组之外的内容，但是此分组里的内容不需要被获取。\n\n举个栗子： 正则表达式 "Windows(?=95|98|NT|2000)" 可以匹配字符串 "Windows2000" 中的 "Windows"，但是不能匹配 "Windows3.1" 中的 Windowds。 正则表达式 "Windows(?!95|98|NT|2000)" 可以匹配字符串 "Windows3.1" 中的 "Windows"，但是不能匹配 "Windows2000" 中的 Windowds。\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);