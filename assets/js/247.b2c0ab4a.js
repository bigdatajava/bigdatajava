(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{590:function(s,n,e){"use strict";e.r(n);var a=e(1),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("U2FsdGVkX18/YXFv7OCfCrCcZLC/B2+DMP8aClOKNWlNLgea8jsnaaDmuK0L8hA7\nhr1HpnG3rJn8Bp3RqRcCHIch3ysWV+BVrvZrVfjHcUUwoiQTKg==\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("1. 什么是Spring Cloud Gateway")])]),s._v(" "),n("p",[s._v("网关作为流量的入口，常用的功能包括路由转发，权限校验，限流等。")]),s._v(" "),n("p",[s._v("Spring Cloud Gateway 是Spring Cloud官方推出的第二代网关框架，定位于取代 Netflix Zuul。相比 Zuul 来说，Spring Cloud Gateway 提供更优秀的性能，更强大的有功能。")]),s._v(" "),n("p",[s._v("Spring Cloud Gateway 是由 WebFlux + Netty + Reactor 实现的响应式的 API 网关。"),n("strong",[s._v("它不能在传统的 servlet 容器中工作，也不能构建成 war 包")]),s._v("**。**")]),s._v(" "),n("p",[s._v("Spring Cloud Gateway 旨在为微服务架构提供一种简单且有效的 API 路由的管理方式，并基于 Filter 的方式提供网关的基本功能，例如说安全认证、监控、限流等等。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153943115.png",alt:"image-20220623153943115"}})]),s._v(" "),n("p",[s._v("官网文档：https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories")]),s._v(" "),n("p",[n("strong",[s._v("1.1 核心概念")])]),s._v(" "),n("ul",[n("li",[s._v("路由（route)")])]),s._v(" "),n("p",[s._v("路由是网关中最基础的部分，路由信息包括一个ID、一个目的URI、一组断言工厂、一组Filter组成。如果断言为真，则说明请求的URL和配置的路由匹配。")]),s._v(" "),n("ul",[n("li",[s._v("断言(predicates)")])]),s._v(" "),n("p",[s._v("Java8中的断言函数，SpringCloud Gateway中的断言函数类型是Spring5.0框架中的ServerWebExchange。断言函数允许开发者去定义匹配Http request中的任何信息，比如请求头和参数等。")]),s._v(" "),n("ul",[n("li",[s._v("过滤器（Filter)")])]),s._v(" "),n("p",[s._v("SpringCloud Gateway中的filter分为Gateway FilIer和Global Filter。Filter可以对请求和响应进行处理。")]),s._v(" "),n("p",[n("strong",[s._v("1.2 工作原理")])]),s._v(" "),n("p",[s._v("Spring Cloud Gateway 的工作原理跟 Zuul 的差不多，最大的区别就是 Gateway 的 Filter 只有 pre 和 post 两种。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153220353.png",alt:"image-20220623153220353"}})]),s._v(" "),n("p",[s._v("客户端向 Spring Cloud Gateway 发出请求，如果请求与网关程序定义的路由匹配，则该请求就会被发送到网关 Web 处理程序，此时处理程序运行特定的请求过滤器链。")]),s._v(" "),n("p",[s._v("过滤器之间用虚线分开的原因是过滤器可能会在发送代理请求的前后执行逻辑。所有 pre 过滤器逻辑先执行，然后执行代理请求；代理请求完成后，执行 post 过滤器逻辑。")]),s._v(" "),n("p",[n("strong",[s._v("2. Spring Cloud Gateway快速开始")])]),s._v(" "),n("p",[n("strong",[s._v("2.1  环境搭建")])]),s._v(" "),n("p",[n("strong",[s._v("1) 引入依赖")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!-- gateway网关 --\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-gateway</artifactId>\n</dependency>\n\n\x3c!-- nacos服务注册与发现 --\x3e\n<dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("注意：会和spring-webmvc的依赖冲突，需要排除spring-webmvc")]),s._v(" "),n("p",[n("strong",[s._v("2) 编写yml配置文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("server:\n  port: 8888\nspring:\n  application:\n    name: mall-gateway\n  #配置nacos注册中心地址\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 127.0.0.1:8848\n\n    gateway:\n      discovery:\n        locator:\n          # 默认为false，设为true开启通过微服务创建路由的功能，即可以通过微服务名访问服务\n          # http://localhost:8888/mall-order/order/findOrderByUserId/1\n          enabled: true\n      # 是否开启网关    \n      enabled: true \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[n("strong",[s._v("3）测试")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153230149.png",alt:"image-20220623153230149"}})]),s._v(" "),n("p",[n("strong",[s._v("2.2 路由断言工厂（"),n("strong",[n("strong",[s._v("Route Predicate Factories")])]),s._v("）配置")])]),s._v(" "),n("p",[s._v("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories")]),s._v(" "),n("p",[s._v("网关启动日志：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153237328.png",alt:"image-20220623153237328"}})]),s._v(" "),n("p",[n("strong",[s._v("2.2.1 时间匹配")])]),s._v(" "),n("p",[s._v("可以用在限时抢购的一些场景中。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153244175.png",alt:"image-20220623153244175"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        predicates:\n         # 测试：http://localhost:8888/order/findOrderByUserId/1\n        # 匹配在指定的日期时间之后发生的请求  入参是ZonedDateTime类型\n        - After=2021-01-31T22:22:07.783+08:00[Asia/Shanghai]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("获取ZonedDateTime类型的指定日期时间")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('ZonedDateTime zonedDateTime = ZonedDateTime.now();//默认时区\n// 用指定时区获取当前时间\nZonedDateTime zonedDateTime2 = ZonedDateTime.now(ZoneId.of("Asia/Shanghai"));\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("设置时间之前发起请求：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153250679.png",alt:"image-20220623153250679"}})]),s._v(" "),n("p",[s._v("超过设置时间之后再次请求：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153258122.png",alt:"image-20220623153258122"}})]),s._v(" "),n("p",[n("strong",[s._v("2.2.2 Cookie匹配")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        predicates:\n         # Cookie匹配\n        - Cookie=username, fox\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("postman测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153304968.png",alt:"image-20220623153304968"}})]),s._v(" "),n("p",[s._v("curl测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153312815.png",alt:"image-20220623153312815"}})]),s._v(" "),n("p",[n("strong",[s._v("2.2.3 Header匹配")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        predicates:\n         # Header匹配  请求中带有请求头名为 x-request-id，其值与 \\d+ 正则表达式匹配\n        #- Header=X-Request-Id, \\d+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("测试")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153522929.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("2.2.4")]),s._v(" "),n("strong",[s._v("路径匹配")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        predicates:\n         # 测试：http://localhost:8888/order/findOrderByUserId/1\n        - Path=/order/**   #Path路径匹配\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("2.2.5 自定义路由断言工厂")])]),s._v(" "),n("p",[s._v("自定义路由断言工厂需要继承 AbstractRoutePredicateFactory 类，重写 apply 方法的逻辑。在 apply 方法中可以通过 exchange.getRequest() 拿到 ServerHttpRequest 对象，从而可以获取到请求的参数、请求方式、请求头等信息。")]),s._v(" "),n("p",[s._v("注意： 命名需要以 RoutePredicateFactory 结尾")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Component\n@Slf4j\npublic class CheckAuthRoutePredicateFactory extends AbstractRoutePredicateFactory<CheckAuthRoutePredicateFactory.Config> {\n\n    public CheckAuthRoutePredicateFactory() {\n        super(Config.class);\n    }\n\n    @Override\n    public Predicate<ServerWebExchange> apply(Config config) {\n        return new GatewayPredicate() {\n\n            @Override\n            public boolean test(ServerWebExchange serverWebExchange) {\n                log.info("调用CheckAuthRoutePredicateFactory" + config.getName());\n                if(config.getName().equals("fox")){\n                    return true;\n                }\n                return false;\n            }\n        };\n    }\n\n    /**\n     * 快捷配置\n     * @return\n     */\n    @Override\n    public List<String> shortcutFieldOrder() {\n        return Collections.singletonList("name");\n    }\n\n    public static class Config {\n\n        private String name;\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br")])]),n("p",[s._v("yml中配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        predicates:\n         # 测试：http://localhost:8888/order/findOrderByUserId/1\n        - Path=/order/**   #Path路径匹配\n        #自定义CheckAuth断言工厂\n#        - name: CheckAuth\n#          args:\n#            name: fox\n        - CheckAuth=fox  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("2.3 过滤器工厂（ GatewayFilter Factories）配置")])]),s._v(" "),n("p",[s._v("SpringCloudGateway 内置了很多的过滤器工厂，我们通过一些过滤器工厂可以进行一些业务逻辑处理器，比如添加剔除响应头，添加去除参数等")]),s._v(" "),n("p",[s._v("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories")]),s._v(" "),n("p",[n("strong",[s._v("2.3.1 添加请求头")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        #配置过滤器工厂\n        filters:\n        - AddRequestHeader=X-Request-color, red  #添加请求头\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("测试"),n("a",{attrs:{href:"http://localhost:8888/order/testgateway2",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:8888/order/testgateway"),n("OutboundLink")],1)]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@GetMapping("/testgateway")\npublic String testGateway(HttpServletRequest request) throws Exception {\n    log.info("gateWay获取请求头X-Request-color："\n            +request.getHeader("X-Request-color"));\n    return "success";\n}\n@GetMapping("/testgateway2")\npublic String testGateway(@RequestHeader("X-Request-color") String color) throws Exception {\n    log.info("gateWay获取请求头X-Request-color："+color);\n    return "success";\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153641465.png",alt:"image-20220623153641465"}})]),s._v(" "),n("p",[n("strong",[s._v("2.3.2 添加请求参数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        #配置过滤器工厂\n        filters:\n        - AddRequestParameter=color, blue  # 添加请求参数\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("测试"),n("a",{attrs:{href:"http://localhost:8888/order/testgateway2",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:8888/order/testgateway"),n("OutboundLink")],1),s._v("3")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@GetMapping("/testgateway3")\npublic String testGateway3(@RequestParam("color") String color) throws Exception {\n    log.info("gateWay获取请求参数color:"+color);\n    return "success";\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153651421.png",alt:"image-20220623153651421"}})]),s._v(" "),n("p",[n("strong",[s._v("2.3.3 为匹配的路由统一添加前缀")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        #配置过滤器工厂\n        filters:\n        - PrefixPath=/mall-order  # 添加前缀 对应微服务需要配置context-path\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("mall-order中需要配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("server:\n  servlet:\n    context-path: /mall-order\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("测试：http://localhost:8888/order/findOrderByUserId/1  ====》 http://localhost:8020/mall-order/order/findOrderByUserId/1")]),s._v(" "),n("p",[n("strong",[s._v("2.3.4")]),s._v(" "),n("strong",[s._v("重定向操作")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        #配置过滤器工厂\n        filters:\n        - RedirectTo=302, https://www.baidu.com/  #重定向到百度\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("测试：http://localhost:8888/order/findOrderByUserId/1")]),s._v(" "),n("p",[n("strong",[s._v("2.3.5 自定义过滤器工厂")])]),s._v(" "),n("p",[s._v("继承AbstractNameValueGatewayFilterFactory且我们的自定义名称必须要以GatewayFilterFactory结尾并交给spring管理。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Component\n@Slf4j\npublic class CheckAuthGatewayFilterFactory extends AbstractNameValueGatewayFilterFactory {\n\n    @Override\n    public GatewayFilter apply(NameValueConfig config) {\n        return (exchange, chain) -> {\n            log.info("调用CheckAuthGatewayFilterFactory==="\n                    + config.getName() + ":" + config.getValue());\n            return chain.filter(exchange);\n        };\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("配置自定义的过滤器工厂")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      #设置路由：路由id、路由到微服务的uri、断言\n      routes:\n      - id: order_route  #路由ID，全局唯一\n        uri: http://localhost:8020  #目标微服务的请求地址和端口\n        #配置过滤器工厂\n        filters:\n        - CheckAuth=fox,男\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153721366.png",alt:"image-20220623153721366"}})]),s._v(" "),n("p",[n("strong",[s._v("2.4 全局过滤器（"),n("strong",[n("strong",[s._v("Global Filters")])]),s._v("）配置")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153734668.png",alt:"image-20220623153734668"}})]),s._v(" "),n("p",[s._v("GlobalFilter 接口和 GatewayFilter 有一样的接口定义，只不过， GlobalFilter 会作用于所有路由。")]),s._v(" "),n("p",[s._v("官方声明：GlobalFilter的接口定义以及用法在未来的版本可能会发生变化。")]),s._v(" "),n("p",[n("strong",[s._v("2.4.1")]),s._v(" "),n("strong",[s._v("LoadBalancerClientFilter")])]),s._v(" "),n("p",[s._v("LoadBalancerClientFilter 会查看exchange的属性 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR 的值（一个URI），如果该值的scheme是 lb，比如：lb://myservice ，它将会使用Spring Cloud的LoadBalancerClient 来将 myservice 解析成实际的host和port，并替换掉 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR 的内容。")]),s._v(" "),n("p",[s._v("其实就是用来整合负载均衡器Ribbon的")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n      routes:\n      - id: order_route\n        uri: lb://mall-order\n        predicates:\n        - Path=/order/**\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("2.4.2 自定义全局过滤器")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Component\n@Order(-1)\n@Slf4j\npublic class CheckAuthFilter implements GlobalFilter {\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        //校验请求头中的token\n        List<String> token = exchange.getRequest().getHeaders().get("token");\n        log.info("token:"+ token);\n        if (token.isEmpty()){\n            return null;\n        }\n        return chain.filter(exchange);\n    }\n}\n\n@Component\npublic class CheckIPFilter implements GlobalFilter, Ordered {\n\n    @Override\n    public int getOrder() {\n        return 0;\n    }\n\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        HttpHeaders headers = exchange.getRequest().getHeaders();\n        //模拟对 IP 的访问限制，即不在 IP 白名单中就不能调用的需求\n        if (getIp(headers).equals("127.0.0.1")) {\n            return null;\n        }\n        return chain.filter(exchange);\n    }\n\n    private String getIp(HttpHeaders headers) {\n        return headers.getHost().getHostName();\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("2.5 Gateway跨域配置（"),n("strong",[n("strong",[s._v("CORS Configuration")])]),s._v("）")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153800626.png",alt:"image-20220623153800626"}})]),s._v(" "),n("p",[s._v("通过yml配置的方式")]),s._v(" "),n("p",[s._v("https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#cors-configuration")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  cloud:\n    gateway:\n        globalcors:\n          cors-configurations:\n            '[/**]':\n              allowedOrigins: \"*\"\n              allowedMethods:\n              - GET\n              - POST\n              - DELETE\n              - PUT\n              - OPTION\n       \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("通过java配置的方式")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153812720.png",alt:"image-20220623153812720"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\npublic class CorsConfig {\n    @Bean\n    public CorsWebFilter corsFilter() {\n        CorsConfiguration config = new CorsConfiguration();\n        config.addAllowedMethod("*");\n        config.addAllowedOrigin("*");\n        config.addAllowedHeader("*");\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource(new PathPatternParser());\n        source.registerCorsConfiguration("/**", config);\n\n        return new CorsWebFilter(source);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153821371.png",alt:"image-20220623153821371"}})]),s._v(" "),n("p",[n("strong",[s._v("2.6 gateway整合sentinel限流")])]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("从 1.6.0 版本开始，Sentinel 提供了 Spring Cloud Gateway 的适配模块，可以提供两种资源维度的限流：")]),s._v(" "),n("ul",[n("li",[s._v("route 维度：即在 Spring 配置文件中配置的路由条目，资源名为对应的 routeId")]),s._v(" "),n("li",[s._v("自定义 API 维度：用户可以利用 Sentinel 提供的 API 来自定义一些 API 分组")])]),s._v(" "),n("p",[n("strong",[s._v("2.6.1")]),s._v(" "),n("strong",[s._v("快速开始")])]),s._v(" "),n("p",[s._v("使用时需引入依赖：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>com.alibaba.csp</groupId>\n    <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>\n    <version>x.y.z</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("接入sentinel dashboard，添加yml配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  application:\n    name: mall-gateway-sentinel-demo\n  #配置nacos注册中心地址\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 127.0.0.1:8848\n\n    sentinel:\n      transport:\n        # 添加sentinel的控制台地址\n        dashboard: 127.0.0.1:8080\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("使用时只需注入对应的 SentinelGatewayFilter 实例以及 SentinelGatewayBlockExceptionHandler 实例即可")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Configuration\npublic class GatewayConfiguration {\n\n    private final List<ViewResolver> viewResolvers;\n    private final ServerCodecConfigurer serverCodecConfigurer;\n\n    public GatewayConfiguration(ObjectProvider<List<ViewResolver>> viewResolversProvider,\n                                ServerCodecConfigurer serverCodecConfigurer) {\n        this.viewResolvers = viewResolversProvider.getIfAvailable(Collections::emptyList);\n        this.serverCodecConfigurer = serverCodecConfigurer;\n    }\n\n    /**\n     * 限流异常处理器\n     * @return\n     */\n    @Bean\n    @Order(Ordered.HIGHEST_PRECEDENCE)\n    public SentinelGatewayBlockExceptionHandler sentinelGatewayBlockExceptionHandler() {\n        // Register the block exception handler for Spring Cloud Gateway.\n        return new SentinelGatewayBlockExceptionHandler(viewResolvers, serverCodecConfigurer);\n    }\n\n    /**\n     * 限流过滤器\n     * @return\n     */\n    @Bean\n    @Order(Ordered.HIGHEST_PRECEDENCE)\n    public GlobalFilter sentinelGatewayFilter() {\n        return new SentinelGatewayFilter();\n    }\n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("用户可以通过")]),s._v(" "),n("strong",[s._v("GatewayRuleManager.loadRules(rules)")]),s._v(" "),n("strong",[s._v("手动加载网关规则")])]),s._v(" "),n("p",[s._v("GatewayConfiguration中添加")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@PostConstruct\n    public void doInit() {\n        //初始化自定义的API\n        initCustomizedApis();\n        //初始化网关限流规则\n        initGatewayRules();\n        //自定义限流异常处理器\n        initBlockRequestHandler();\n    }\n\n    private void initCustomizedApis() {\n        Set<ApiDefinition> definitions = new HashSet<>();\n        ApiDefinition api = new ApiDefinition("user_service_api")\n                .setPredicateItems(new HashSet<ApiPredicateItem>() {{\n                    add(new ApiPathPredicateItem().setPattern("/user/**")\n                            .setMatchStrategy(SentinelGatewayConstants.URL_MATCH_STRATEGY_PREFIX));\n                }});\n        definitions.add(api);\n        GatewayApiDefinitionManager.loadApiDefinitions(definitions);\n    }\n\n    private void initGatewayRules() {\n        Set<GatewayFlowRule> rules = new HashSet<>();\n        //resource：资源名称，可以是网关中的 route 名称或者用户自定义的 API 分组名称。\n        //count：限流阈值\n        //intervalSec：统计时间窗口，单位是秒，默认是 1 秒。\n        rules.add(new GatewayFlowRule("order_route")\n                .setCount(2)\n                .setIntervalSec(1)\n        );\n        rules.add(new GatewayFlowRule("user_service_api")\n                .setCount(2)\n                .setIntervalSec(1)\n        );\n\n        // 加载网关规则\n        GatewayRuleManager.loadRules(rules);\n    }\n\n    private void initBlockRequestHandler() {\n        BlockRequestHandler blockRequestHandler = new BlockRequestHandler() {\n            @Override\n            public Mono<ServerResponse> handleRequest(ServerWebExchange exchange, Throwable t) {\n                HashMap<String, String> result = new HashMap<>();\n                result.put("code",String.valueOf(HttpStatus.TOO_MANY_REQUESTS.value()));\n                result.put("msg", HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase());\n\n                return ServerResponse.status(HttpStatus.TOO_MANY_REQUESTS)\n                        .contentType(MediaType.APPLICATION_JSON)\n                        .body(BodyInserters.fromValue(result));\n            }\n        };\n        //设置自定义异常处理器\n        GatewayCallbackManager.setBlockHandler(blockRequestHandler);\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[n("strong",[s._v("2.6.2 网关流控控制台")])]),s._v(" "),n("p",[s._v("Sentinel 1.6.3 引入了网关流控控制台的支持，用户可以直接在 Sentinel 控制台上查看 API Gateway 实时的 route 和自定义 API 分组监控，管理网关规则和 API 分组配置。")]),s._v(" "),n("p",[s._v("在 API Gateway 端，用户只需要在原有启动参数的基础上添加如下启动参数即可标记应用为 API Gateway 类型：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 注：通过 Spring Cloud Alibaba Sentinel 自动接入的 API Gateway 整合则无需此参数\n-Dcsp.sentinel.app.type=1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("2.6.3")]),s._v(" "),n("strong",[s._v("网关流控实现原理")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153834751.png",alt:"image-20220623153834751"}})]),s._v(" "),n("p",[n("strong",[s._v("2.7 网关高可用")])]),s._v(" "),n("p",[s._v("为了保证 Gateway 的高可用性，可以同时启动多个 Gateway 实例进行负载，在 Gateway 的上游使用 Nginx 或者 F5 进行负载转发以达到高可用。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623153846609.png",alt:"image-20220623153846609"}})]),s._v(" "),n("h2",{attrs:{id:"图片附录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图片附录"}},[s._v("#")]),s._v(" 图片附录")]),s._v(" "),n("h3",{attrs:{id:"gateway源码分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gateway源码分析"}},[s._v("#")]),s._v(" Gateway源码分析")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/Gateway%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.jpg",alt:"Gateway源码分析"}})])])}),[],!1,null,null,null);n.default=t.exports}}]);