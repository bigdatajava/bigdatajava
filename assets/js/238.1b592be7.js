(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{604:function(s,n,t){"use strict";t.r(n);var e=t(5),a=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("U2FsdGVkX1+ymJb3saNdM+RQE3biiSfgvNY424Z3WbId1id/haOfSY4J2a++8zGX\nSWSIfxiY4NlmQenir7u1I2BRF0zJk2HPWLTAO5criSWbiwKj/Q==\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"sentinel控制台介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sentinel控制台介绍"}},[s._v("#")]),s._v(" Sentinel控制台介绍")]),s._v(" "),n("p",[s._v("Sentinel 提供一个轻量级的开源控制台，它提供机器发现以及健康情况管理、监控（单机和集群），规则管理和推送的功能。")]),s._v(" "),n("p",[s._v("Sentinel 控制台包含如下功能:")]),s._v(" "),n("ul",[n("li",[s._v("查看机器列表以及健康情况：收集 Sentinel 客户端发送的心跳包，用于判断机器是否在线。")]),s._v(" "),n("li",[s._v("监控 (单机和集群聚合)：通过 Sentinel 客户端暴露的监控 API，定期拉取并且聚合应用监控信息，最终可以实现秒级的实时监控。")]),s._v(" "),n("li",[s._v("规则管理和推送：统一管理推送规则。")]),s._v(" "),n("li",[s._v("鉴权：生产环境中鉴权非常重要。这里每个开发者需要根据自己的实际情况进行定制。")])]),s._v(" "),n("p",[s._v("阿里云提供了 企业级的 Sentinel 控制台，应用高可用服务 AHAS")]),s._v(" "),n("h2",{attrs:{id:"实时监控"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实时监控"}},[s._v("#")]),s._v(" 实时监控")]),s._v(" "),n("p",[s._v("监控接口的通过的QPS和拒绝的QPS")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/64.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"簇点链路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#簇点链路"}},[s._v("#")]),s._v(" 簇点链路")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("用来显示微服务的所监控的API  \n")])])]),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/65.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"流控规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流控规则"}},[s._v("#")]),s._v(" 流控规则")]),s._v(" "),n("p",[s._v("流量控制（flow control），其原理是监控应用流量的 QPS 或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。   ====  FlowRuleRT(响应时间)   1/0.2s  =5")]),s._v(" "),n("p",[s._v("同一个资源可以创建多条限流规则。FlowSlot 会对该资源的所有限流规则依次遍历，直到有规则触发限流或者所有规则遍历完毕。一条限流规则主要由下面几个因素组成，我们可以组合这些元素来实现不同的限流效果。")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("Field")]),s._v(" "),n("th",[s._v("说明")]),s._v(" "),n("th",[s._v("默认值")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("resource")]),s._v(" "),n("td",[s._v("资源名，资源名是限流规则的作用对象")]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[s._v("count")]),s._v(" "),n("td",[s._v("限流阈值")]),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[s._v("grade")]),s._v(" "),n("td",[s._v("限流阈值类型，QPS 模式（1）或并发线程数模式（0）")]),s._v(" "),n("td",[s._v("QPS 模式")])]),s._v(" "),n("tr",[n("td",[s._v("limitApp")]),s._v(" "),n("td",[s._v("流控针对的调用来源")]),s._v(" "),n("td",[s._v("default，代表不区分调用来源")])]),s._v(" "),n("tr",[n("td",[s._v("strategy")]),s._v(" "),n("td",[s._v("调用关系限流策略：直接、链路、关联")]),s._v(" "),n("td",[s._v("根据资源本身（直接）")])]),s._v(" "),n("tr",[n("td",[s._v("controlBehavior")]),s._v(" "),n("td",[s._v("流控效果（直接拒绝/WarmUp/匀速+排队等待），不支持按调用关系限流")]),s._v(" "),n("td",[s._v("直接拒绝")])]),s._v(" "),n("tr",[n("td",[s._v("clusterMode")]),s._v(" "),n("td",[s._v("是否集群限流")]),s._v(" "),n("td",[s._v("否")])])])]),s._v(" "),n("p",[s._v("参考文档： "),n("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/alibaba/Sentinel/wiki/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("strong",[s._v("限流阈值类型")])]),s._v(" "),n("blockquote",[n("p",[s._v("QPS（Query Per Second）：每秒请求数，就是说服务器在一秒的时间内处理了多少个请求。")])]),s._v(" "),n("p",[s._v("流量控制主要有两种统计类型，一种是统计并发线程数，另外一种则是统计 QPS。")]),s._v(" "),n("p",[s._v("类型由 FlowRule 的 grade 字段来定义。其中，0 代表根据并发数量来限流，1 代表根据 QPS 来进行流量控制。")]),s._v(" "),n("p",[s._v("进入簇点链路选择具体的访问的API，然后点击流控按钮")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/66.png",alt:""}})]),s._v(" "),n("p",[s._v("测试：http://localhost:8800/user/findOrderByUserId/1")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/67.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"blockexception异常统一处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blockexception异常统一处理"}},[s._v("#")]),s._v(" BlockException异常统一处理")]),s._v(" "),n("p",[s._v("springweb mvc接口资源限流入口在HandlerInterceptor的实现类AbstractSentinelInterceptor的preHandle方法中，对异常的处理是BlockExceptionHandler的实现类")]),s._v(" "),n("p",[s._v("sentinel 1.7.1 引入了sentinel-spring-webmvc-adapter.jar")]),s._v(" "),n("p",[s._v("自定义BlockExceptionHandler 的实现类统一处理BlockException")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Slf4j\n@Component\npublic class MyBlockExceptionHandler implements BlockExceptionHandler {\n    @Override\n    public void handle(HttpServletRequest request, HttpServletResponse response, BlockException e) throws Exception {\n        log.info("BlockExceptionHandler BlockException================"+e.getRule());\n\n        R r = null;\n\n        if (e instanceof FlowException) {\n            r = R.error(100,"接口限流了");\n\n        } else if (e instanceof DegradeException) {\n            r = R.error(101,"服务降级了");\n\n        } else if (e instanceof ParamFlowException) {\n            r = R.error(102,"热点参数限流了");\n\n        } else if (e instanceof SystemBlockException) {\n            r = R.error(103,"触发系统保护规则了");\n\n        } else if (e instanceof AuthorityException) {\n            r = R.error(104,"授权规则不通过");\n        }\n\n        //返回json数据\n        response.setStatus(500);\n        response.setCharacterEncoding("utf-8");\n        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n        new ObjectMapper().writeValue(response.getWriter(), r);\n\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("测试：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/68.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"并发线程数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发线程数"}},[s._v("#")]),s._v(" 并发线程数")]),s._v(" "),n("p",[s._v("并发数控制用于保护业务线程池不被慢调用耗尽。例如，当应用所依赖的下游应用由于某种原因导致服务不稳定、响应延迟增加，对于调用者来说，意味着吞吐量下降和更多的线程数占用，极端情况下甚至导致线程池耗尽。为应对太多线程占用的情况，业内有使用隔离的方案，比如通过不同业务逻辑使用不同线程池来隔离业务自身之间的资源争抢（线程池隔离）。这种隔离方案虽然隔离性比较好，但是代价就是线程数目太多，线程上下文切换的 overhead 比较大，特别是对低延时的调用有比较大的影响。Sentinel 并发控制不负责创建和管理线程池，而是简单统计当前请求上下文的线程数目（正在执行的调用数目），如果超出阈值，新的请求会被立即拒绝，效果类似于信号量隔离。并发数控制通常在调用端进行配置。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/69.png",alt:""}})]),s._v(" "),n("p",[s._v("可以利用jmeter测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/70.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"流控模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流控模式"}},[s._v("#")]),s._v(" 流控模式")]),s._v(" "),n("p",[s._v("基于调用关系的流量控制。调用关系包括调用方、被调用方；一个方法可能会调用其它方法，形成一个调用链路的层次关系。")]),s._v(" "),n("p",[n("strong",[s._v("直接")]),s._v("：资源调用达到设置的阈值后直接被流控抛出异常")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/71.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("关联")]),s._v("：当两个资源之间具有资源争抢或者依赖关系的时候，这两个资源便具有了关联。比如对数据库同一个字段的读操作和写操作存在争抢，读的速度过高会影响写得速度，写的速度过高会影响读的速度。如果放任读写操作争抢资源，则争抢本身带来的开销会降低整体的吞吐量。可使用关联限流来避免具有关联关系的资源之间过度的争抢，举例来说，read_db 和 write_db 这两个资源分别代表数据库读写，我们可以给 read_db 设置限流规则来达到写优先的目的：设置 strategy 为 RuleConstant.STRATEGY_RELATE 同时设置 refResource 为 write_db。这样当写库操作过于频繁时，读数据的请求会被限流。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/72.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("链路")]),s._v("：根据调用链路入口限流。")]),s._v(" "),n("p",[s._v("NodeSelectorSlot 中记录了资源之间的调用链路，这些资源通过调用关系，相互之间构成一棵调用树。这棵树的根节点是一个名字为 machine-root 的虚拟节点，调用链的入口都是这个虚节点的子节点。")]),s._v(" "),n("p",[s._v("一棵典型的调用树如下图所示：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("     \t          machine-root\n                    /       \\\n                   /         \\\n             Entrance1     Entrance2\n                /             \\\n               /               \\\n    DefaultNode(nodeA)DefaultNode(nodeA)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("上图中来自入口 Entrance1 和 Entrance2 的请求都调用到了资源 NodeA，Sentinel 允许只根据某个入口的统计信息对资源限流。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/73.png",alt:""}})]),s._v(" "),n("p",[s._v("测试会发现链路规则不生效")]),s._v(" "),n("p",[s._v("注意，高版本此功能直接使用不生效，如何解决？")]),s._v(" "),n("p",[s._v("从1.6.3版本开始，Sentinel Web filter默认收敛所有URL的入口context，导致链路限流不生效。")]),s._v(" "),n("p",[s._v("从1.7.0版本开始，官方在CommonFilter引入了WEB_CONTEXT_UNIFY参数，用于控制是否收敛context，将其配置为false即可根据不同的URL进行链路限流。")]),s._v(" "),n("p",[s._v("1.8.0 需要引入sentinel-web-servlet依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--- 解决流控链路不生效的问题--\x3e\n<dependency>\n    <groupId>com.alibaba.csp</groupId>\n    <artifactId>sentinel-web-servlet</artifactId>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("添加配置类，配置CommonFilter过滤器，指定WEB_CONTEXT_UNIFY=false，禁止收敛URL的入口context")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\npublic class SentinelConfig {\n    @Bean\n    public FilterRegistrationBean sentinelFilterRegistration() {\n        FilterRegistrationBean registration = new FilterRegistrationBean();\n        registration.setFilter(new CommonFilter());\n        registration.addUrlPatterns("/*");\n        // 入口资源关闭聚合   解决流控链路不生效的问题\n        registration.addInitParameter(CommonFilter.WEB_CONTEXT_UNIFY, "false");\n        registration.setName("sentinelFilter");\n        registration.setOrder(1);\n        return registration;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("再次测试链路规则，链路规则生效，但是出现异常")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/74.png",alt:""}})]),s._v(" "),n("p",[s._v("控制台打印FlowException异常")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/75.png",alt:""}})]),s._v(" "),n("p",[s._v("原因分析：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("Sentinel流控规则的处理核心是 FlowSlot, 对getUser资源进行了限流保护，当请求QPS超过阈值2的时候，就会触发流控规则抛出FlowException异常")])]),s._v(" "),n("li",[n("p",[s._v("对getUser资源保护的方式是@SentinelResource注解模式，会在对应的SentinelResourceAspect切面逻辑中处理BlockException类型的FlowException异常")])])]),s._v(" "),n("p",[s._v("（解决方案： 在@SentinelResource注解中指定blockHandler处理BlockException）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// UserServiceImpl.java\n\n@Override\n@SentinelResource(value = "getUser",blockHandler = "handleException")\npublic UserEntity getUser(int id){\n    UserEntity user = baseMapper.selectById(id);\n    return user;\n}\n\npublic UserEntity handleException(int id, BlockException ex) {\n    UserEntity userEntity = new UserEntity();\n    userEntity.setUsername("===被限流降级啦===");\n    return userEntity;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("如果此过程没有处理FlowException, AOP就会对异常进行处理，核心代码在CglibAopProxy.CglibMethodInvocation#proceed中，抛出UndeclaredThrowableException异常，属于RuntimeException")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/76.png",alt:""}})]),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("异常继续向上抛出，引入CommonFilter后，CommonFilter添加了对异常的处理机制，所以会在CommonFilter中进行处理。")])]),s._v(" "),n("p",[s._v("（注意此处对BlockException异常的处理是UrlBlaockHandler的实现类，而在AbstractSentinelInterceptor拦截器中是使用BlockExceptionHandler的实现类处理）")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/77.png",alt:""}})]),s._v(" "),n("p",[s._v("会抛出一个RuntimeException类型的UndeclaredThrowableException异常，然后打印到控制台显示")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/78.png",alt:""}})]),s._v(" "),n("p",[s._v("此处又是有坑：  FlowException不会被BlockException异常机制处理，因为FlowException已经被封装为RuntimeException类型的UndeclaredThrowableException异常")]),s._v(" "),n("p",[s._v("测试：自定义CommonFilter对BlockException异常处理逻辑，用于处理经过CommonFilter处理的spring webmvc接口的BlockException")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// SentinelConfig.java\n@Bean\npublic FilterRegistrationBean sentinelFilterRegistration() {\n    FilterRegistrationBean registration = new FilterRegistrationBean();\n    registration.setFilter(new CommonFilter());\n    registration.addUrlPatterns("/*");\n    // 入口资源关闭聚合  解决流控链路不生效的问题\n    registration.addInitParameter(CommonFilter.WEB_CONTEXT_UNIFY, "false");\n    registration.setName("sentinelFilter");\n    registration.setOrder(1);\n\n    //CommonFilter的BlockException自定义处理逻辑\n    WebCallbackManager.setUrlBlockHandler(new MyUrlBlockHandler());\n\n    return registration;\n}\n\n// UrlBlockHandler的实现类\n@Slf4j\npublic class MyUrlBlockHandler implements UrlBlockHandler {\n    @Override\n    public void blocked(HttpServletRequest request, HttpServletResponse response, BlockException e) throws IOException {\n        log.info("UrlBlockHandler BlockException================"+e.getRule());\n\n        R r = null;\n\n        if (e instanceof FlowException) {\n            r = R.error(100,"接口限流了");\n\n        } else if (e instanceof DegradeException) {\n            r = R.error(101,"服务降级了");\n\n        } else if (e instanceof ParamFlowException) {\n            r = R.error(102,"热点参数限流了");\n\n        } else if (e instanceof SystemBlockException) {\n            r = R.error(103,"触发系统保护规则了");\n\n        } else if (e instanceof AuthorityException) {\n            r = R.error(104,"授权规则不通过");\n        }\n\n        //返回json数据\n        response.setStatus(500);\n        response.setCharacterEncoding("utf-8");\n        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n        new ObjectMapper().writeValue(response.getWriter(), r);\n    }\n}\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("p",[s._v("测试，此场景拦截不到BlockException，对应@SentinelResource指定的资源必须在@SentinelResource注解中指定blockHandler处理BlockException")]),s._v(" "),n("p",[s._v("总结： 为了解决链路规则引入ComonFilter的方式，除了此处问题，还会导致更多的问题，不建议使用ComonFilter的方式。 流控链路模式的问题等待官方后续修复，或者使用AHAS。")]),s._v(" "),n("h2",{attrs:{id:"流控效果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#流控效果"}},[s._v("#")]),s._v(" 流控效果")]),s._v(" "),n("p",[s._v("当 QPS 超过某个阈值的时候，则采取措施进行流量控制。流量控制的效果包括以下几种：快速失败（直接拒绝）、Warm Up（预热）、匀速排队（排队等待）。对应 FlowRule 中的 controlBehavior 字段。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/79.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"快速失败"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速失败"}},[s._v("#")]),s._v(" 快速失败")]),s._v(" "),n("p",[s._v("（RuleConstant.CONTROL_BEHAVIOR_DEFAULT）方式是默认的流量控制方式，当QPS超过任意规则的阈值后，新的请求就会被立即拒绝，拒绝方式为抛出FlowException。这种方式适用于对系统处理能力确切已知的情况下，比如通过压测确定了系统的准确水位时。")]),s._v(" "),n("h2",{attrs:{id:"warm-up"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#warm-up"}},[s._v("#")]),s._v(" Warm Up")]),s._v(" "),n("p",[s._v('Warm Up（RuleConstant.CONTROL_BEHAVIOR_WARM_UP）方式，即预热/冷启动方式。当系统长期处于低水位的情况下，当流量突然增加时，直接把系统拉升到高水位可能瞬间把系统压垮。通过"冷启动"，让通过的流量缓慢增加，在一定时间内逐渐增加到阈值上限，给冷系统一个预热的时间，避免冷系统被压垮。')]),s._v(" "),n("p",[s._v("冷加载因子: codeFactor 默认是3，即请求 QPS 从 threshold / 3 开始，经预热时长逐渐升至设定的 QPS 阈值。")]),s._v(" "),n("p",[s._v("通常冷启动的过程系统允许通过的 QPS 曲线如下图所示")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/80.png",alt:""}})]),s._v(" "),n("p",[s._v("测试用例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RequestMapping("/test")\npublic String test() {\n    try {\n        Thread.sleep(100);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    return "========test()========";\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"编辑流控规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编辑流控规则"}},[s._v("#")]),s._v(" 编辑流控规则")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/81.png",alt:""}})]),s._v(" "),n("p",[s._v("jmeter测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/82.png",alt:""}})]),s._v(" "),n("p",[s._v("查看实时监控，可以看到通过QPS存在缓慢增加的过程")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/83.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"匀速排队"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匀速排队"}},[s._v("#")]),s._v(" 匀速排队")]),s._v(" "),n("p",[s._v("匀速排队（"),n("code",[s._v("RuleConstant.CONTROL_BEHAVIOR_RATE_LIMITER")]),s._v("）方式会严格控制请求通过的间隔时间，也即是让请求以均匀的速度通过，对应的是漏桶算法。")]),s._v(" "),n("p",[s._v("该方式的作用如下图所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/84.png",alt:""}})]),s._v(" "),n("p",[s._v("这种方式主要用于处理间隔性突发的流量，例如消息队列。想象一下这样的场景，在某一秒有大量的请求到来，而接下来的几秒则处于空闲状态，我们希望系统能够在接下来的空闲期间逐渐处理这些请求，而不是在第一秒直接拒绝多余的请求。")]),s._v(" "),n("p",[s._v("注意：匀速排队模式暂时不支持 QPS > 1000 的场景。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/85.png",alt:""}})]),s._v(" "),n("p",[s._v("jemeter压测")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/86.png",alt:""}})]),s._v(" "),n("p",[s._v("查看实时监控，可以看到通过QPS为5，体现了匀速排队效果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/87.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"降级规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#降级规则"}},[s._v("#")]),s._v(" 降级规则")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。我们需要对不稳定的弱依赖服务调用进行熔断降级，暂时切断不稳定调用，避免局部不稳定因素导致整体的雪崩。熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置。\n")])])]),n("p",[s._v("熔断降级规则说明")]),s._v(" "),n("p",[s._v("熔断降级规则（DegradeRule）包含下面几个重要的属性：")]),s._v(" "),n("p",[s._v("| Field  | 说明 | 默认值 |\n| resource   | 资源名，即规则的作用对象 ||\n| grade  | 熔断策略，支持慢调用比例/异常比例/异常数策略 | 慢调用比例 |\n| count  | 慢调用比例模式下为慢调用临界 RT（超出该值计为慢调用）；异常比例/异常数模式下为对应的阈值 ||\n| timeWindow | 熔断时长，单位为 s   ||\n| minRequestAmount   | 熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断（1.7.0 引入） | 5  |\n| statIntervalMs | 统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）   | 1000 ms|\n| slowRatioThreshold | 慢调用比例阈值，仅慢调用比例模式有效（1.8.0 引入）   ||")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/88.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"熔断策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#熔断策略"}},[s._v("#")]),s._v(" 熔断策略")]),s._v(" "),n("p",[s._v("慢调用比例")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("慢调用比例 (SLOW_REQUEST_RATIO)：选择以慢调用比例作为阈值，需要设置允许的慢调用 RT（即最大的响应时间），请求的响应时间大于该值则统计为慢调用。当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且慢调用的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求响应时间小于设置的慢调用 RT 则结束熔断，若大于设置的慢调用 RT 则会再次被熔断。\n")])])]),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/89.png",alt:""}})]),s._v(" "),n("p",[s._v("测试用例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RequestMapping("/test")\npublic String test() {\n    try {\n        Thread.sleep(100);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    return "========test()========";\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("jemeter压测/test接口，保证每秒请求数超过配置的最小请求数")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/90.png",alt:""}})]),s._v(" "),n("p",[s._v("查看实时监控，可以看到断路器熔断效果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/91.png",alt:""}})]),s._v(" "),n("p",[s._v("此时浏览器访问会出现服务降级结果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/92.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"异常比例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常比例"}},[s._v("#")]),s._v(" 异常比例")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("异常比例 (ERROR_RATIO)：当单位统计时长（statIntervalMs）内请求数目大于设置的最小请求数目，并且异常的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。异常比率的阈值范围是 [0.0, 1.0]，代表 0% - 100%。\n")])])]),n("p",[s._v("测试用例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RequestMapping("/test2")\npublic String test2() {\n    atomicInteger.getAndIncrement();\n    if (atomicInteger.get() % 2 == 0){\n        //模拟异常和异常比率\n        int i = 1/0;\n    }\n\n    return "========test2()========";\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"配置降级规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置降级规则"}},[s._v("#")]),s._v(" 配置降级规则")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/93.png",alt:""}})]),s._v(" "),n("p",[s._v("查看实时监控，可以看到断路器熔断效果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/94.png",alt:""}})]),s._v(" "),n("p",[s._v("异常数")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("异常数 (ERROR_COUNT)：当单位统计时长内的异常数目超过阈值之后会自动进行熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。\n")])])]),n("p",[s._v("注意：异常降级仅针对业务异常，对 Sentinel 限流降级本身的异常（BlockException）不生效。")]),s._v(" "),n("p",[s._v("配置降级规则")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/95.png",alt:""}})]),s._v(" "),n("p",[s._v("jemeter测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/96.png",alt:""}})]),s._v(" "),n("p",[s._v("查看实时监控，可以看到断路器熔断效果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/97.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"热点参数限流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#热点参数限流"}},[s._v("#")]),s._v(" 热点参数限流")]),s._v(" "),n("p",[s._v("何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。比如：")]),s._v(" "),n("ul",[n("li",[s._v("商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制")]),s._v(" "),n("li",[s._v("用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制")])]),s._v(" "),n("p",[s._v("热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/98.png",alt:""}})]),s._v(" "),n("p",[s._v("注意：")]),s._v(" "),n("ol",[n("li",[s._v('热点规则需要使用@SentinelResource("resourceName")注解，否则不生效')]),s._v(" "),n("li",[s._v("参数必须是7种基本数据类型才会生效")])]),s._v(" "),n("p",[s._v("测试用例")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RequestMapping("/info/{id}")\n@SentinelResource(value = "userinfo",\n                  blockHandlerClass = CommonBlockHandler.class,\n                  blockHandler = "handleException2",\n                  fallbackClass = CommonFallback.class,\n                  fallback = "fallback"\n                 )\npublic R info(@PathVariable("id") Integer id){\n    UserEntity user = userService.getById(id);\n    return R.ok().put("user", user);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("配置热点参数规则")]),s._v(" "),n("p",[s._v('注意： 资源名必须是@SentinelResource(value="资源名")中 配置的资源名，热点规则依赖于注解')]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/99.png",alt:""}})]),s._v(" "),n("p",[s._v("具体到参数值限流，配置参数值为3,限流阈值为1")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/100.png",alt:""}})]),s._v(" "),n("p",[s._v("测试：")]),s._v(" "),n("p",[s._v("http://localhost:8800/user/info/1 限流的阈值为3")]),s._v(" "),n("p",[n("a",{attrs:{href:"http://localhost:8800/user/info/1",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:8800/user/info/3"),n("OutboundLink")],1),s._v(" 限流的阈值为1")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/101.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"系统规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#系统规则"}},[s._v("#")]),s._v(" 系统规则")]),s._v(" "),n("p",[s._v("Sentinel 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、CPU 使用率、总体平均 RT、入口 QPS 和并发线程数等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。")]),s._v(" "),n("ul",[n("li",[s._v("Load 自适应（仅对 Linux/Unix-like 机器生效）：系统的 load1 作为启发指标，进行自适应系统保护。当系统 load1 超过设定的启发值，且系统当前的并发线程数超过估算的系统容量时才会触发系统保护（BBR 阶段）。系统容量由系统的 maxQps * minRt 估算得出。设定参考值一般是 CPU cores * 2.5。")]),s._v(" "),n("li",[s._v("CPU usage（1.5.0+ 版本）：当系统 CPU 使用率超过阈值即触发系统保护（取值范围 0.0-1.0），比较灵敏。")]),s._v(" "),n("li",[s._v("平均 RT：当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。")]),s._v(" "),n("li",[s._v("并发线程数：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。")]),s._v(" "),n("li",[s._v("入口 QPS：当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。")])]),s._v(" "),n("p",[s._v("编写系统规则")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/102.png",alt:""}})]),s._v(" "),n("p",[s._v("jemeter配置")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/103.png",alt:""}})]),s._v(" "),n("p",[s._v("测试结果")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/104.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"授权控制规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#授权控制规则"}},[s._v("#")]),s._v(" 授权控制规则")]),s._v(" "),n("p",[s._v("很多时候，我们需要根据调用来源来判断该次请求是否允许放行，这时候可以使用 Sentinel 的来源访问控制（黑白名单控制）的功能。来源访问控制根据资源的请求来源（origin）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。")]),s._v(" "),n("p",[s._v("来源访问控制规则（AuthorityRule）非常简单，主要有以下配置项：")]),s._v(" "),n("ul",[n("li",[s._v("resource：资源名，即限流规则的作用对象。")]),s._v(" "),n("li",[s._v("limitApp：对应的黑名单/白名单，不同 origin 用 , 分隔，如 appA,appB。")]),s._v(" "),n("li",[s._v("strategy：限制模式，AUTHORITY_WHITE 为白名单模式，AUTHORITY_BLACK 为黑名单模式，默认为白名单模式。")])]),s._v(" "),n("p",[s._v("配置授权规则")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/105.png",alt:""}})]),s._v(" "),n("p",[s._v("第一步：实现com.alibaba.csp.sentinel.adapter.spring.webmvc.callback.RequestOriginParser接口，在parseOrigin方法中区分来源，并交给spring管理")]),s._v(" "),n("p",[s._v("注意：如果引入CommonFilter，此处会多出一个")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/777.png",alt:""}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import com.alibaba.csp.sentinel.adapter.spring.webmvc.callback.RequestOriginParser;\nimport org.springframework.stereotype.Component;\n\nimport javax.servlet.http.HttpServletRequest;\n\n/**\n * @author Fox\n */\n@Component\npublic class MyRequestOriginParser implements RequestOriginParser {\n    /**\n     * 通过request获取来源标识，交给授权规则进行匹配\n     * @param request\n     * @return\n     */\n    @Override\n    public String parseOrigin(HttpServletRequest request) {\n        // 标识字段名称可以自定义\n        String origin = request.getParameter("serviceName");\n//        if (StringUtil.isBlank(origin)){\n//            throw new IllegalArgumentException("serviceName参数未指定");\n//        }\n        return origin;\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("测试：origin是order的请求不通过。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/106.png",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling4/107.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"集群规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集群规则"}},[s._v("#")]),s._v(" 集群规则")]),s._v(" "),n("p",[s._v("为什么要使用集群流控呢？假设我们希望给某个用户限制调用某个 API 的总 QPS 为 50，但机器数可能很多（比如有 100 台）。这时候我们很自然地就想到，找一个 server 来专门来统计总的调用量，其它的实例都与这台 server 通信来判断是否可以调用。这就是最基础的集群流控的方式。")]),s._v(" "),n("p",[s._v("另外集群流控还可以解决流量不均匀导致总体限流效果不佳的问题。假设集群中有 10 台机器，我们给每台机器设置单机限流阈值为 10 QPS，理想情况下整个集群的限流阈值就为 100 QPS。不过实际情况下流量到每台机器可能会不均匀，会导致总量没有到的情况下某些机器就开始限流。因此仅靠单机维度去限制的话会无法精确地限制总体流量。而集群流控可以精确地控制整个集群的调用总量，结合单机限流兜底，可以更好地发挥流量控制的效果。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/alibaba/Sentinel/wiki/%E9%9B%86%E7%BE%A4%E6%B5%81%E6%8E%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/alibaba/Sentinel/wiki/%E9%9B%86%E7%BE%A4%E6%B5%81%E6%8E%A7"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("集群流控中共有两种身份：")]),s._v(" "),n("ul",[n("li",[s._v("Token Client：集群流控客户端，用于向所属 Token Server 通信请求 token。集群限流服务端会返回给客户端结果，决定是否限流。")]),s._v(" "),n("li",[s._v("Token Server：即集群流控服务端，处理来自 Token Client 的请求，根据配置的集群规则判断是否应该发放 token（是否允许通过）。")])]),s._v(" "),n("p",[s._v("Sentinel 集群流控支持限流规则和热点规则两种规则，并支持两种形式的阈值计算方式：")]),s._v(" "),n("ul",[n("li",[s._v("集群总体模式：即限制整个集群内的某个资源的总体 qps 不超过此阈值。")]),s._v(" "),n("li",[s._v("单机均摊模式：单机均摊模式下配置的阈值等同于单机能够承受的限额，token server 会根据连接数来计算总的阈值（比如独立模式下有 3 个 client 连接到了 token server，然后配的单机均摊阈值为 10，则计算出的集群总量就为 30），按照计算出的总的阈值来进行限制。这种方式根据当前的连接数实时计算总的阈值，对于机器经常进行变更的环境非常适合。")])]),s._v(" "),n("p",[s._v("启动方式")]),s._v(" "),n("p",[n("strong",[s._v("Sentinel 集群限流服务端有两种启动方式：")])]),s._v(" "),n("ul",[n("li",[s._v("独立模式（Alone），即作为独立的 token server 进程启动，独立部署，隔离性好，但是需要额外的部署操作。独立模式适合作为 Global Rate Limiter 给集群提供流控服务。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling2/13.png",alt:""}})]),s._v(" "),n("ul",[n("li",[s._v("嵌入模式（Embedded），即作为内置的 token server 与服务在同一进程中启动。在此模式下，集群中各个实例都是对等的，token server 和 client 可以随时进行转变，因此无需单独部署，灵活性比较好。但是隔离性不佳，需要限制 token server 的总 QPS，防止影响应用本身。嵌入模式适合某个应用集群内部的流控。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://404500.oss-cn-beijing.aliyuncs.com/picture/tuling2/12.png",alt:""}})]),s._v(" "),n("p",[s._v("云上版本 AHAS Sentinel 提供开箱即用的全自动托管集群流控能力，无需手动指定/分配 token server 以及管理连接状态，同时支持分钟小时级别流控、大流量低延时场景流控场景，同时支持 Istio/Envoy 场景的 Mesh 流控能力。")]),s._v(" "),n("h1",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])])])}),[],!1,null,null,null);n.default=a.exports}}]);