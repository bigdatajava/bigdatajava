(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{550:function(n,s,a){"use strict";a.r(s);var e=a(1),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("U2FsdGVkX18iOuVsPaX9tmmGvYcltmWH7Tx5EUUyndiLSoRk6KmMiyF3dVJR5qX7\nE8XjKI4UwMBSM3xPvxdJGdSWT2OQK+LXEyXirxUuYjZhZGU7Dboh9Cyoe3//Rm3V\nWA==\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("h2",{attrs:{id:"semaphore-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#semaphore-是什么"}},[n._v("#")]),n._v(" Semaphore 是什么？")]),n._v(" "),s("p",[n._v("Semaphore 字面意思是信号量的意思，它的作用是控制访问特定资源的线程数目，底层依赖AQS的状态State，是在生产当中比较常用的一个工具类。")]),n._v(" "),s("h2",{attrs:{id:"怎么使用-semaphore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么使用-semaphore"}},[n._v("#")]),n._v(" 怎么使用 Semaphore？")]),n._v(" "),s("h3",{attrs:{id:"构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[n._v("#")]),n._v(" 构造方法")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public Semaphore(int permits)\npublic Semaphore(int permits, boolean fair)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("ul",[s("li",[n._v("permits 表示许可线程的数量")]),n._v(" "),s("li",[n._v("fair 表示公平性，如果这个设为 true 的话，下次执行的线程会是等待最久的线程")])]),n._v(" "),s("h3",{attrs:{id:"重要方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重要方法"}},[n._v("#")]),n._v(" 重要方法")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public void acquire() throws InterruptedException\npublic void release()\ntryAcquire（int args,long timeout, TimeUnit unit）\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("ul",[s("li",[n._v("acquire() 表示阻塞并获取许可")]),n._v(" "),s("li",[n._v("release() 表示释放许可")])]),n._v(" "),s("h3",{attrs:{id:"需求场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需求场景"}},[n._v("#")]),n._v(" 需求场景")]),n._v(" "),s("blockquote",[s("p",[n._v("资源访问，服务限流(Hystrix里限流就有基于信号量方式)。")])]),n._v(" "),s("h3",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[n._v("#")]),n._v(" 代码实现")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('public class SemaphoreRunner {\n    public static void main(String[] args) {\n        Semaphore semaphore = new Semaphore(2);\n        for (int i=0;i<5;i++){\n            new Thread(new Task(semaphore,"yangguo+"+i)).start();\n        }\n    }\n\n    static class Task extends Thread{\n        Semaphore semaphore;\n\n        public Task(Semaphore semaphore,String tname){\n            this.semaphore = semaphore;\n            this.setName(tname);\n        }\n\n        public void run() {\n            try {\n                semaphore.acquire();               \n                System.out.println(Thread.currentThread().getName()+":aquire() at time:"+System.currentTimeMillis());\n                Thread.sleep(1000);\n                semaphore.release();               \n                System.out.println(Thread.currentThread().getName()+":aquire() at time:"+System.currentTimeMillis());\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])]),s("p",[s("strong",[n._v("打印结果：")])]),n._v(" "),s("blockquote",[s("p",[n._v("Thread-3:aquire() at time:1563096128901")]),n._v(" "),s("p",[n._v("Thread-1:aquire() at time:1563096128901")]),n._v(" "),s("p",[n._v("Thread-1:aquire() at time:1563096129903")]),n._v(" "),s("p",[n._v("Thread-7:aquire() at time:1563096129903")]),n._v(" "),s("p",[n._v("Thread-5:aquire() at time:1563096129903")]),n._v(" "),s("p",[n._v("Thread-3:aquire() at time:1563096129903")]),n._v(" "),s("p",[n._v("Thread-7:aquire() at time:1563096130903")]),n._v(" "),s("p",[n._v("Thread-5:aquire() at time:1563096130903")]),n._v(" "),s("p",[n._v("Thread-9:aquire() at time:1563096130903")]),n._v(" "),s("p",[n._v("Thread-9:aquire() at time:1563096131903")])]),n._v(" "),s("p",[n._v("从打印结果可以看出，一次只有两个线程执行 acquire()，只有线程进行 release() 方法后才会有别的线程执行 acquire()。")]),n._v(" "),s("h2",{attrs:{id:"countdownlatch使用及应用场景例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch使用及应用场景例子"}},[n._v("#")]),n._v(" CountDownLatch使用及应用场景例子")]),n._v(" "),s("h3",{attrs:{id:"countdownlatch是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch是什么"}},[n._v("#")]),n._v(" CountDownLatch是什么？")]),n._v(" "),s("p",[n._v("CountDownLatch这个类能够使一个线程等待其他线程完成各自的工作后再执行。例如，应用程序的主线程希望在负责启动框架服务的线程已经启动所有的框架服务之后再执行。")]),n._v(" "),s("p",[s("strong",[n._v("使用场景：")])]),n._v(" "),s("blockquote",[s("p",[n._v("Zookeeper分布式锁,Jmeter模拟高并发等")])]),n._v(" "),s("h3",{attrs:{id:"countdownlatch如何工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch如何工作"}},[n._v("#")]),n._v(" CountDownLatch如何工作？")]),n._v(" "),s("p",[n._v("CountDownLatch是通过一个计数器来实现的，计数器的初始值为线程的数量。每当一个线程完成了自己的任务后，计数器的值就会减1。当计数器值到达0时，它表示所有的线程已经完成了任务，然后在闭锁上等待的线程就可以恢复执行任务。")]),n._v(" "),s("p",[s("strong",[n._v("API")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("CountDownLatch.countDown()\nCountDownLatch.await();\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("h3",{attrs:{id:"countdownlatch应用场景例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch应用场景例子"}},[n._v("#")]),n._v(" CountDownLatch应用场景例子")]),n._v(" "),s("p",[n._v("比如陪媳妇去看病。")]),n._v(" "),s("p",[n._v("医院里边排队的人很多，如果一个人的话，要先看大夫，看完大夫再去排队交钱取药。")]),n._v(" "),s("p",[n._v("现在我们是双核，可以同时做这两个事（多线程）。")]),n._v(" "),s("p",[n._v("假设看大夫花3秒钟，排队交费取药花5秒钟。我们同时搞的话，5秒钟我们就能完成，然后一起回家（回到主线程）。")]),n._v(" "),s("p",[n._v("代码如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('/**\n * 看大夫任务\n */\npublic class SeeDoctorTask implements Runnable {\n    private CountDownLatch countDownLatch;\n\n    public SeeDoctorTask(CountDownLatch countDownLatch){\n        this.countDownLatch = countDownLatch;\n    }\n\n    public void run() {\n        try {\n            System.out.println("开始看医生");\n            Thread.sleep(3000);\n            System.out.println("看医生结束，准备离开病房");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }finally {\n            if (countDownLatch != null)\n                countDownLatch.countDown();\n        }\n    }\n\n}\n\n/**\n * 排队的任务\n */\npublic class QueueTask implements Runnable {\n\n    private CountDownLatch countDownLatch;\n\n    public QueueTask(CountDownLatch countDownLatch){\n        this.countDownLatch = countDownLatch;\n    }\n    public void run() {\n        try {\n            System.out.println("开始在医院药房排队买药....");\n            Thread.sleep(5000);\n            System.out.println("排队成功，可以开始缴费买药");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }finally {\n            if (countDownLatch != null)\n                countDownLatch.countDown();\n        }\n    }\n}\n\n/**\n * 配媳妇去看病，轮到媳妇看大夫时\n * 我就开始去排队准备交钱了。\n */\npublic class CountDownLaunchRunner {\n\n    public static void main(String[] args) throws InterruptedException {\n        long now = System.currentTimeMillis();\n        CountDownLatch countDownLatch = new CountDownLatch(2);\n\n        new Thread(new SeeDoctorTask(countDownLatch)).start();\n        new Thread(new QueueTask(countDownLatch)).start();\n        //等待线程池中的2个任务执行完毕，否则一直\n        countDownLatch.await();\n        System.out.println("over，回家 cost:"+(System.currentTimeMillis()-now));\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br")])]),s("h2",{attrs:{id:"cyclicbarrier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cyclicbarrier"}},[n._v("#")]),n._v(" CyclicBarrier")]),n._v(" "),s("p",[n._v("栅栏屏障，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续运行。")]),n._v(" "),s("p",[n._v("CyclicBarrier默认的构造方法是CyclicBarrier（int parties），其参数表示屏障拦截的线程数量，每个线程调用await方法告CyclicBarrier我已经到达了屏障，然后当前线程被阻塞。")]),n._v(" "),s("p",[s("strong",[n._v("API")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("cyclicBarrier.await();\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[s("strong",[n._v("应用场景")])]),n._v(" "),s("p",[n._v("可以用于多线程计算数据，最后合并计算结果的场景。例如，用一个Excel保存了用户所有银行流水，每个Sheet保存一个账户近一年的每笔银行流水，现在需要统计用户的日均银行流水，先用多线程处理每个sheet里的银行流水，都执行完之后，得到每个sheet的日均银行流水，最后，再用barrierAction用这些线程的计算结果，计算出整个Excel的日均银行流水。")]),n._v(" "),s("p",[n._v("示例代码：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('public class CyclicBarrierRunner implements Runnable {\n    private CyclicBarrier cyclicBarrier;\n    private int index ;\n\n    public CyclicBarrierTest(CyclicBarrier cyclicBarrier, int index) {\n        this.cyclicBarrier = cyclicBarrier;\n        this.index = index;\n    }\n\n    public void run() {\n        try {\n            System.out.println("index: " + index);\n            index--;\n            cyclicBarrier.await();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(11, new Runnable() \t\t\t\t\t          {\n            public void run() {\n                System.out.println("所有特工到达屏障，准备开始执行秘密任务");\n            }\n        });\n        for (int i = 0; i < 10; i++) {\n            new Thread(new CyclicBarrierTest(cyclicBarrier, i)).start();\n        }\n        cyclicBarrier.await();\n        System.out.println("全部到达屏障....");\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br")])]),s("h2",{attrs:{id:"executors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executors"}},[n._v("#")]),n._v(" Executors")]),n._v(" "),s("p",[n._v("主要用来创建线程池，代理了线程池的创建，使得你的创建入口参数变得简单")]),n._v(" "),s("p",[s("strong",[n._v("重要方法")])]),n._v(" "),s("ul",[s("li",[n._v("newCachedThreadPool创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。")]),n._v(" "),s("li",[n._v("newFixedThreadPool 创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。")]),n._v(" "),s("li",[n._v("newScheduledThreadPool 创建一个定长线程池，支持定时及周期性任务执行。")]),n._v(" "),s("li",[n._v("newSingleThreadExecutor 创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。")])]),n._v(" "),s("h2",{attrs:{id:"exchanger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exchanger"}},[n._v("#")]),n._v(" Exchanger")]),n._v(" "),s("p",[n._v("当一个线程运行到exchange()方法时会阻塞，另一个线程运行到exchange()时，二者交换数据，然后执行后面的程序。")]),n._v(" "),s("p",[n._v("应用场景")]),n._v(" "),s("p",[n._v("极少，大家了解即可")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('public class ExchangerTest {\n\n    public static void main(String []args) {\n        final Exchanger<Integer> exchanger = new Exchanger<Integer>();\n        for(int i = 0 ; i < 10 ; i++) {\n            final Integer num = i;\n            new Thread() {\n                public void run() {\n                    System.out.println("我是线程：Thread_" + this.getName() + "我的数据是：" + num);\n                    try {\n                        Integer exchangeNum = exchanger.exchange(num);\n                        Thread.sleep(1000);\n                        System.out.println("我是线程：Thread_" + this.getName() + "我原先的数据为：" + num + " , 交换后的数据为：" + exchangeNum);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }.start();\n        }\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/lock/all1.png",alt:""}})]),n._v(" "),s("h2",{attrs:{id:"图片附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片附录"}},[n._v("#")]),n._v(" 图片附录")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/spring/%E5%9B%BE.png",alt:"图"}})])])}),[],!1,null,null,null);s.default=t.exports}}]);