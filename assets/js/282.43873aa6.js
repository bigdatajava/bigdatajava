(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{625:function(r,t,a){"use strict";a.r(t);var e=a(1),v=Object(e.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("p",[r._v("观察者模式是很重要、很常用的设计模式，必须要掌握。")]),r._v(" "),t("h1",{attrs:{id:"观察者模式的含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式的含义"}},[r._v("#")]),r._v(" "),t("strong",[r._v("观察者模式的含义")])]),r._v(" "),t("p",[r._v("观察者模式又称发布-订阅模式。观察者模式是一种通知机制，多个观察者对某个事物（被观察方）感兴趣时，事物（被观察方）一有动作就通知观察者。观察者模式能让发送通知的一方（被观察方）和接收通知的一方（观察者）彼此分离，减少耦合。")]),r._v(" "),t("p",[r._v("以生活中的微信公众号为例：我们对某个微信公众号感兴趣，关注了这个微信公众号后能收到新的文章的通知，了解最新的资讯。这是一种典型的观察者模式，用户（观察者）关注公众号（被观察者），公众号(被观察者)更新文章通知所有用户(观察者)。")]),r._v(" "),t("p",[r._v("以项目中的实际场景为例：在取消订单的时候，后边要跟一系列操作，比如：增加对应商品的库存、增加对应用户的账户余额。这里用观察者模式就很合适，取消订单这个动作是个被观察者，库存业务和余额业务都是观察者。")]),r._v(" "),t("h1",{attrs:{id:"模式的角色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模式的角色"}},[r._v("#")]),r._v(" "),t("strong",[r._v("模式的角色")])]),r._v(" "),t("ol",[t("li",[r._v("抽象被观察者角色(Subject)  //也就是一个抽象主题\n"),t("ol",[t("li",[r._v("它把所有观察者对象的引用保存在一个集合中，每个主题都可以有任意数量的观察者。")]),r._v(" "),t("li",[r._v("向主题提供一个接口，可以增加和删除观察者角色。")]),r._v(" "),t("li",[r._v("一般用一个抽象类或接口来实现。")])])]),r._v(" "),t("li",[r._v("抽象观察者角色(Observer)\n"),t("ol",[t("li",[r._v("为所有的具体观察者定义一个接口，在得到主题通知时更新自己。")])])]),r._v(" "),t("li",[r._v("具体被观察者角色(ConcernSubject)\n"),t("ol",[t("li",[r._v("也就是一个具体的主题，在集体主题的内部状态改变时，所有登记过的观察者发出通知。")])])]),r._v(" "),t("li",[r._v("具体观察者角色(ConcernObserver)\n"),t("ol",[t("li",[r._v("实现抽象观察者角色所需要的更新接口，使本身的状态与主题的状态相协调")])])])]),r._v(" "),t("p",[r._v("上边这个角色是理想的状态，实际可能会有所变化，比如：有时候不需要抽象被观察者。")]),r._v(" "),t("h1",{attrs:{id:"观察者模式java实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式java实战"}},[r._v("#")]),r._v(" 观察者模式Java实战")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://learn.skyofit.com/archives/1397",target:"_blank",rel:"noopener noreferrer"}},[r._v("观察者模式Java实战–写法1：手动组装Map – 自学精灵"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://learn.skyofit.com/archives/1401",target:"_blank",rel:"noopener noreferrer"}},[r._v("观察者模式Java实战–写法2：JDK – 自学精灵"),t("OutboundLink")],1)]),r._v(" "),t("p",[t("a",{attrs:{href:"https://learn.skyofit.com/archives/1406",target:"_blank",rel:"noopener noreferrer"}},[r._v("观察者模式Java实战–写法3：Spring的事件 – 自学精灵"),t("OutboundLink")],1),r._v("（"),t("strong",[r._v("最推荐的写法")]),r._v("！）")])])}),[],!1,null,null,null);t.default=v.exports}}]);