(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{427:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"思维脑图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思维脑图"}},[s._v("#")]),s._v(" 思维脑图")]),s._v(" "),a("p",[s._v("https://www.processon.com/view/link/619227e21e0853689b11178b")]),s._v(" "),a("h2",{attrs:{id:"_1-elasticsearch简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-elasticsearch简介"}},[s._v("#")]),s._v(" 1.ElasticSearch简介")]),s._v(" "),a("p",[s._v("Elasticsearch是用Java开发并且是当前最流行的开源的企业级搜索引擎。")]),s._v(" "),a("p",[s._v("能够达到实时搜索，稳定，可靠，快速，安装使用方便。")]),s._v(" "),a("p",[s._v("客户端支持Java、.NET（C#）、PHP、Python、Ruby等多种语言。")]),s._v(" "),a("p",[a("strong",[s._v("官方网站:")]),s._v(" https://www.elastic.co/")]),s._v(" "),a("p",[a("strong",[s._v("下载地址")]),s._v("：https://www.elastic.co/cn/start")]),s._v(" "),a("p",[s._v("**创始人:**Shay Banon（谢巴农）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Elastic Stack：\n1.Elasticsearch 基于Json的分布式搜索和分析引擎\n2.Logstash 动态数据收集管道，生态丰富\n3.Kibana 提供数据的可视化界面\n4.Beats 轻量级的数据采集器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("浏览器搜索")])]),s._v(" "),a("li",[a("p",[s._v("商城页面商品搜索")]),s._v(" "),a("p",[s._v("....")])])]),s._v(" "),a("h3",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[s._v("#")]),s._v(" 目录结构")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("目录名称")])]),s._v(" "),a("th",[a("strong",[s._v("描述")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("bin")]),s._v(" "),a("td",[s._v("可执行脚本文件，包括启动elasticsearch服务、插件管理、函数命令等。")])]),s._v(" "),a("tr",[a("td",[s._v("config")]),s._v(" "),a("td",[s._v("配置文件目录，如elasticsearch配置、角色配置、jvm配置等。")])]),s._v(" "),a("tr",[a("td",[s._v("lib")]),s._v(" "),a("td",[s._v("elasticsearch所依赖的java库。")])]),s._v(" "),a("tr",[a("td",[s._v("data")]),s._v(" "),a("td",[s._v("默认的数据存放目录，包含节点、分片、索引、文档的所有数据，生产环境要求必须修改。")])]),s._v(" "),a("tr",[a("td",[s._v("logs")]),s._v(" "),a("td",[s._v("默认的日志文件存储路径，生产环境务必修改。")])]),s._v(" "),a("tr",[a("td",[s._v("modules")]),s._v(" "),a("td",[s._v("包含所有的Elasticsearch模块，如Cluster、Discovery、Indices等。")])]),s._v(" "),a("tr",[a("td",[s._v("plugins")]),s._v(" "),a("td",[s._v("已经安装的插件的目录。")])]),s._v(" "),a("tr",[a("td",[s._v("jdk/jdk.app")]),s._v(" "),a("td",[s._v("7.0以后才有，自带的java环境。")])])])]),s._v(" "),a("h3",{attrs:{id:"es-与-lucene的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-与-lucene的关系"}},[s._v("#")]),s._v(" ES 与 Lucene的关系")]),s._v(" "),a("p",[s._v("Lucene可以被认为是迄今为止最先进、性能最好的、功能最全的搜索引擎库（框架）")]),s._v(" "),a("p",[s._v("但是想要使用Lucene，必须使用Java来作为开发语言并将其直接集成到你的应用中，并且Lucene的配置及使用非常复杂，你需要深入了解检索的相关知识来理解它是如何工作的。")]),s._v(" "),a("p",[a("strong",[s._v("Lucene缺点：")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1. 只能在Java项目中使用,并且要以jar包的方式直接集成项目中.\n\n2. 使用非常复杂-创建索引和搜索索引代码繁杂\n\n3. 不支持集群环境-索引数据不同步（不支持大型项目.   \n\n4. 索引数据如果太多就不行，索引库和应用所在同一个服务器,共同占用硬盘.共用空间少.\n")])])]),a("p",[s._v("上述Lucene框架中的缺点,ES全部都能解决.")]),s._v(" "),a("p",[s._v("哪些公司在使用Elasticsearch")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 京东\n2. 携程\n3. 去哪儿\n4. 58同城\n5. 滴滴\n6. 今日头条\n7. 小米\n8. 哔哩哔哩\n9. 联想\n10. GitHup\n11. 微软\n12. Facebook\n等等...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"es-vs-solr比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-vs-solr比较"}},[s._v("#")]),s._v(" ES vs Solr比较")]),s._v(" "),a("p",[a("strong",[s._v("ES vs Solr 检索速度")])]),s._v(" "),a("p",[s._v("当单纯的对已有数据进行搜索时，Solr更快。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/4.png",alt:""}})]),s._v(" "),a("p",[s._v("当实时建立索引时, Solr会产生io阻塞，查询性能较差, Elasticsearch具有明显的优势。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/5.png",alt:""}})]),s._v(" "),a("p",[s._v("大型互联网公司，实际生产环境测试，将搜索引擎从Solr转到 Elasticsearch以后的平均查询速度有了50倍的提升。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/6.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("总结：")])]),s._v(" "),a("p",[s._v("二者安装都很简单。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Solr 利用 Zookeeper 进行分布式管理，而Elasticsearch 自身带有分布式协调管理功能。")])]),s._v(" "),a("li",[a("p",[s._v("Solr 支持更多格式的数据，比如JSON、XML、CSV，而 Elasticsearch 仅支持json文件格式。")])]),s._v(" "),a("li",[a("p",[s._v("Solr 在传统的搜索应用中表现好于 Elasticsearch，但在处理实时搜索应用时效率明显低于 Elasticsearch。")])]),s._v(" "),a("li",[a("p",[s._v("Solr 是传统搜索应用的有力解决方案，但 Elasticsearch更适用于新兴的实时搜索应用。")])])]),s._v(" "),a("h3",{attrs:{id:"es-vs-关系型数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-vs-关系型数据库"}},[s._v("#")]),s._v(" ES vs 关系型数据库")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/7.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_2-elasticsearch安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-elasticsearch安装"}},[s._v("#")]),s._v(" 2.Elasticsearch安装")]),s._v(" "),a("h3",{attrs:{id:"es单机搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es单机搭建"}},[s._v("#")]),s._v(" ES单机搭建")]),s._v(" "),a("p",[a("strong",[s._v("创建普通用户")])]),s._v(" "),a("p",[a("strong",[s._v("ES不能使用root用户来启动，必须使用普通用户来安装启动")]),s._v("。这里我们创建一个普通用户以及定义一些常规目录用于存放我们的数据文件以及安装包等。")]),s._v(" "),a("p",[s._v("创建一个es专门的用户（"),a("strong",[s._v("必须")]),s._v("）")]),s._v(" "),a("p",[a("strong",[s._v("使用root用户在服务器执行以下命令")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("先创建组, 再创建用户:\n1）创建 elasticsearch 用户组\n[root@localhost ~]# groupadd elasticsearch\n\t\t\n2）创建用户 tlbaiqi 并设置密码\n[root@localhost ~]# useradd tlbaiqi\n[root@localhost ~]# passwd tlbaiqi\n\n3）# 创建es文件夹，\n并修改owner为baiqi用户\nmkdir -p /usr/local/es\n\n4）用户es 添加到 elasticsearch 用户组\n[root@localhost ~]# usermod -G elasticsearch tlbaiqi\n[root@localhost ~]# chown -R tlbaiqi /usr/local/es/elasticsearch-7.6.1\n\n5）设置sudo权限\n#为了让普通用户有更大的操作权限，我们一般都会给普通用户设置sudo权限，方便普通用户的操作\n#三台机器使用root用户执行visudo命令然后为es用户添加权限\n[root@localhost ~]# visudo\n\n#在root ALL=(ALL) ALL 一行下面\n#添加tlbaiqi用户 如下:\ntlbaiqi ALL=(ALL) ALL\n\t\t\t \n#添加成功保存后切换到tlbaiqi用户操作\n\n[root@localhost ~]# su tlbaiqi\n[tlbaiqi@localhost root]$\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("p",[s._v("注意！")]),s._v(" "),a("blockquote",[a("p",[s._v("如果su tlbaiqi后进入用户命令行后，界面不正确，如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/111.PNG",alt:""}})]),s._v(" "),a("p",[s._v("可能是因为没有home下的文件夹，以及shell无法自动补全的显现。出现此问题只要修改/etc/passwd下的/bin/sh为/bin/bash即可。解决方法：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/222.png",alt:""}})])]),s._v(" "),a("p",[a("strong",[s._v("上传压缩包并解压")])]),s._v(" "),a("p",[s._v("将es的安装包下载并上传到服务器的/user/local/es路径下，然后进行解压")]),s._v(" "),a("p",[s._v("使用tlbaiqi用户来执行以下操作，将es安装包上传到指定服务器，并使用es用户执行以下命令解压。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 解压Elasticsearch\nsu tlbaiqi\ncd /user/local/\ntar -zvxf elasticsearch-7.6.1-linux-x86_64.tar.gz -C /usr/local/es/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("修改elasticsearch.yml")])]),s._v(" "),a("p",[s._v("进入服务器使用"),a("strong",[s._v("baiqi")]),s._v("用户来修改配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('cd /usr/local/es/elasticsearch-7.6.1/config\nmkdir -p /usr/local/es/elasticsearch-7.6.1/log\nmkdir -p /usr/local/es/elasticsearch-7.6.1/data\nrm -rf elasticsearch.yml\n\nvim elasticsearch.yml\ncluster.name: baiqi-es\nnode.name: node1\npath.data: /usr/local/es/elasticsearch-7.6.1/data\npath.logs: /usr/local/es/elasticsearch-7.6.1/log\nnetwork.host: 0.0.0.0\nhttp.port: 9200\ndiscovery.seed_hosts: ["192.168.12.12"] #你的["服务器IP"]\ncluster.initial_master_nodes: ["node1"] #你的node.name值\nbootstrap.system_call_filter: false\nbootstrap.memory_lock: false\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("blockquote",[a("p",[s._v("discovery.seed_hosts：当这个节点启动的时候，会读取该配置项，这个配置项里是一个IP地址的字符串数组，用于发现其它节点")]),s._v(" "),a("p",[s._v("cluster.initial_master_nodes：这个配置项是初始化集群时候，用作初始化为master的节点。配置项的值为节点名称"),a("strong",[s._v("node.name")]),s._v("属性的字符串数组")])]),s._v(" "),a("p",[a("strong",[s._v("修改jvm.option")])]),s._v(" "),a("p",[s._v("修改jvm.option配置文件，调整jvm堆内存大小")]),s._v(" "),a("p",[a("strong",[s._v("node1.baiqi.cn使用baiqi用户")]),s._v("执行以下命令调整jvm堆内存大小，每个人根据自己服务器的内存大小来进行调整。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-7.6.1/config\nvim jvm.options\n-Xms2g\n-Xmx2g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("修改系统配置，解决启动时候的问题")])]),s._v(" "),a("p",[s._v("由于现在使用普通用户来安装es服务，且es服务对服务器的资源要求比较多，包括内存大小，线程数等。所以我们需要给普通用户解开资源的束缚")]),s._v(" "),a("p",[a("strong",[s._v("4.2.1  普通用户打开文件的最大数限制")])]),s._v(" "),a("p",[s._v("问题错误信息描述：")]),s._v(" "),a("p",[s._v("max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]")]),s._v(" "),a("p",[s._v("ES因为需要大量的创建索引文件，需要大量的打开系统的文件，所以我们需要解除linux系统当中打开文件最大数目的限制，不然ES启动就会抛错")]),s._v(" "),a("p",[s._v("三台机器使用baiqi用户执行以下命令解除打开文件数据的限制")]),s._v(" "),a("p",[s._v("sudo vi /etc/security/limits.conf")]),s._v(" "),a("p",[s._v("添加如下内容: 注意*不要去掉了")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("* soft nofile 65536\n* hard nofile 131072\n* soft nproc 4096\n* hard nproc 4096\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("4.2.2")]),s._v(" "),a("strong",[s._v("此文件修改后需要重新登录用户，才会生效")])]),s._v(" "),a("p",[a("strong",[s._v("普通用户启动线程数限制")])]),s._v(" "),a("p",[s._v("问题错误信息描述")]),s._v(" "),a("p",[s._v("max number of threads [1024] for user [es] likely too low, increase to at least [4096]")]),s._v(" "),a("p",[s._v("修改普通用户可以创建的最大线程数")]),s._v(" "),a("p",[s._v("*max number of threads [1024] for user [es] likely too low, increase to at least [4096]*原因：无法创建本地线程问题,用户最大可创建线程数太小解决方案：修改90-nproc.conf 配置文件。")]),s._v(" "),a("p",[s._v("三台机器使用baiqi用户执行以下命令修改配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Centos6\nsudo vi /etc/security/limits.d/90-nproc.conf\nCentos7\nsudo vi /etc/security/limits.d/20-nproc.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("找到如下内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("* soft nproc 1024#修改为\n* soft nproc 4096\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("4.2.3 普通用户调大虚拟内存")])]),s._v(" "),a("p",[s._v("错误信息描述：")]),s._v(" "),a("p",[s._v("max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]")]),s._v(" "),a("p",[s._v("调大系统的虚拟内存")]),s._v(" "),a("p",[s._v("原因：最大虚拟内存太小")]),s._v(" "),a("p",[s._v("每次启动机器都手动执行下。")]),s._v(" "),a("p",[s._v("三台机器执行以下命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("编辑 /etc/sysctl.conf，追加以下内容：vm.max_map_count=262144 保存后，执行：sysctl -p \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("备注：以上三个问题解决完成之后，重新连接secureCRT或者重新连接xshell生效")]),s._v(" "),a("p",[a("strong",[s._v("4.3  启动ES服务")])]),s._v(" "),a("p",[s._v("三台机器使用baiqi用户执行以下命令启动es服务")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup /usr/local/es/elasticsearch-7.6.1/bin/elasticsearch 2>&1 &\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("后台启动ES 进入bin目录  ./elasticsearch  -d")]),s._v(" "),a("p",[s._v("启动成功之后jsp即可看到es的服务进程，并且访问页面")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("http://192.168.21.130:9200/?pretty\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("能够看到es启动之后的一些信息")]),s._v(" "),a("p",[s._v("注意：如果哪一台机器服务启动失败，那么就到哪一台机器的")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/usr/local/es/elasticsearch-7.6.1/log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个路径下面去查看错误日志")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("关闭Linux防火墙\n永久性生效，重启后不会复原\n开启： chkconfig iptables on\n关闭： chkconfig iptables off\n即时生效，重启后复原\n开启： service iptables start\n关闭： service iptables stop\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("注意:启动ES的时候出现 Permission denied")]),s._v(" "),a("p",[s._v("原因：当前的用户没有对XX文件或目录的操作权限")]),s._v(" "),a("h3",{attrs:{id:"es集群搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es集群搭建"}},[s._v("#")]),s._v(" ES集群搭建")]),s._v(" "),a("p",[a("strong",[s._v("1.将安装包分发到其他服务器上面")])]),s._v(" "),a("p",[a("strong",[s._v("2.修改elasticsearch.yml")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn 服务器使用"),a("strong",[s._v("baiqi")]),s._v("用户来修改配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('mkdir -p /usr/local/es/elasticsearch-7.6.1/log\nmkdir -p /usr/local/es/elasticsearch-7.6.1/data\n\ncd /usr/local/es/elasticsearch-7.6.1/config\n\nrm -rf elasticsearch.yml\n\nvim elasticsearch.yml\ncluster.name: baiqi-es\nnode.name: node1.baiqi.cn\npath.data: /usr/local/es/elasticsearch-7.6.1/data\npath.logs: /usr/local/es/elasticsearch-7.6.1/log\nnetwork.host: node1.baiqi.cn\nhttp.port: 9200\ndiscovery.seed_hosts: ["IP1", "IP2", "IP3"]\ncluster.initial_master_nodes: ["节点1名称", "节点2名称", "节点3名称"]\nbootstrap.system_call_filter: false\nbootstrap.memory_lock: false\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("3.修改jvm.option")])]),s._v(" "),a("p",[s._v("修改jvm.option配置文件，调整jvm堆内存大小")]),s._v(" "),a("p",[a("strong",[s._v("node1.baiqi.cn使用baiqi用户")]),s._v("执行以下命令调整jvm堆内存大小，每个人根据自己服务器的内存大小来进行调整。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-7.6.1/config\nvim jvm.options\n-Xms2g\n-Xmx2g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("4.node2与node3修改es配置文件")])]),s._v(" "),a("p",[s._v("node2.baiqi.cn与node3.baiqi.cn也需要修改es配置文件")]),s._v(" "),a("p",[s._v("node2.baiqi.cn使用baiqi用户执行以下命令修改es配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('mkdir -p /usr/local/es/elasticsearch-7.6.1/log\nmkdir -p /usr/local/es/elasticsearch-7.6.1/data\n\ncd /usr/local/es/elasticsearch-7.6.1/config\n\n\nvim elasticsearch.yml\ncluster.name: baiqi-es\nnode.name: node2.baiqi.cn\npath.data: /usr/local/es/elasticsearch-7.6.1/data\npath.logs: /usr/local/es/elasticsearch-7.6.1/log\nnetwork.host: node2.baiqi.cn\nhttp.port: 9200\ndiscovery.seed_hosts: ["IP1", "IP2", "IP3"]\ncluster.initial_master_nodes: ["节点1名称", "节点2名称", "节点3名称"]\nbootstrap.system_call_filter: false\nbootstrap.memory_lock: false\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("node3.baiqi.cn使用baiqi用户执行以下命令修改配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('mkdir -p /usr/local/es/elasticsearch-7.6.1/log\nmkdir -p /usr/local/es/elasticsearch-7.6.1/data\n\ncd /usr/local/es/elasticsearch-7.6.1/config\n\n\nvim elasticsearch.yml\ncluster.name: baiqi-es\nnode.name: node3.baiqi.cn\npath.data: /usr/local/es/elasticsearch-7.6.1/data\npath.logs: /usr/local/es/elasticsearch-7.6.1/log\nnetwork.host: node3.baiqi.cn\nhttp.port: 9200\ndiscovery.seed_hosts: ["IP1", "IP2", "IP3"]\ncluster.initial_master_nodes: ["节点1名称", "节点2名称", "节点3名称"]\nbootstrap.system_call_filter: false\nbootstrap.memory_lock: false\nhttp.cors.enabled: true\nhttp.cors.allow-origin: "*"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[s._v("查看集群状态：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET   _cat/nodes?v\nGET   _cat/health?v\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("客户端Kibana安装")]),s._v(" "),a("p",[a("strong",[s._v("5.1客户端可以分为图形界面客户端,和代码客户端.")])]),s._v(" "),a("p",[s._v("5.2 ES主流客户端Kibana，开放9200端口与图形界面客户端交互")]),s._v(" "),a("p",[s._v("1)下载Kibana放之/usr/local/es目录中")]),s._v(" "),a("p",[s._v("2)解压文件：tar -zxvf kibana-X.X.X-linux-x86_64.tar.gz")]),s._v(" "),a("p",[s._v("3)进入/usr/local/es/kibana-X.X.X-linux-x86_64/config目录")]),s._v(" "),a("p",[s._v("4）使用vi编辑器：vi kibana.yml")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('   server.port: 5601\n   server.host: "服务器IP"\n   elasticsearch.hosts: ["http://192.156.12.12:9200"]  #这里是elasticsearch的访问地址,支持多配置，所以是数组方式\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("5）启动Kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/usr/local/es/kibana-7.6.1-linux-x86_64/bin/kibana\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果启动显示没有操作kibana.yml")]),s._v(" "),a("p",[s._v("则切换到root用户给普通用户赋予文件夹权限：chown -R tibaiqi /usr/local/es")])]),s._v(" "),a("p",[s._v("后台启动kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup  ./kibana &\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6）访问Kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("http://ip:5601/app/kibana\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"kibana安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kibana安装"}},[s._v("#")]),s._v(" Kibana安装")]),s._v(" "),a("p",[a("strong",[s._v("5.1客户端可以分为图形界面客户端,和代码客户端.")])]),s._v(" "),a("p",[s._v("5.2 ES主流客户端Kibana，开放9200端口与图形界面客户端交互")]),s._v(" "),a("p",[s._v("1)下载Kibana放之/usr/local/es目录中")]),s._v(" "),a("p",[s._v("2)解压文件：tar -zxvf kibana-X.X.X-linux-x86_64.tar.gz")]),s._v(" "),a("p",[s._v("3)进入/usr/local/es/kibana-X.X.X-linux-x86_64/config目录")]),s._v(" "),a("p",[s._v("4）使用vi编辑器：vi kibana.yml")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('   server.port: 5601\n   server.host: "服务器IP"\n   elasticsearch.hosts: ["http://192.156.12.12:9200"]  #这里是elasticsearch的访问地址,支持多配置，所以是数组方式\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("5）启动Kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/usr/local/es/kibana-7.6.1-linux-x86_64/bin/kibana\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果启动显示没有操作kibana.yml")]),s._v(" "),a("p",[s._v("则切换到root用户给普通用户赋予文件夹权限：chown -R tibaiqi /usr/local/es")])]),s._v(" "),a("p",[s._v("后台启动kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup  ./kibana &\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6）访问Kibana")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("http://ip:5601/app/kibana\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"ik分词器安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ik分词器安装"}},[s._v("#")]),s._v(" IK分词器安装")]),s._v(" "),a("p",[s._v("我们后续也需要使用Elasticsearch来进行中文分词，所以需要单独给Elasticsearch安装IK分词器插件。以下为具体安装步骤：")]),s._v(" "),a("p",[s._v("6.1 下载Elasticsearch IK分词器")]),s._v(" "),a("p",[s._v("https://github.com/medcl/elasticsearch-analysis-ik/releases")]),s._v(" "),a("p",[s._v("6.2 切换到baiqi用户，并在es的安装目录下/plugins创建ik")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir -p /usr/local/es/elasticsearch-7.6.1/plugins/ik\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6.3 将下载的ik分词器上传并解压到该目录")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-7.6.1/plugins/ik\nunzip  elasticsearch-analysis-ik-7.6.1.zip \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("6.4 重启Elasticsearch")]),s._v(" "),a("p",[s._v("6.5 测试分词效果")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _analyze\n{\n"analyzer":"standard",\n"text":"我爱你中国"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _analyze\n{\n"analyzer": "ik_smart",\n"text": "中华人民共和国"\n }\n#ik_smart:会做最粗粒度的拆分\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _analyze\n{\n"analyzer":"ik_max_word",\n"text":"我爱你中国"\n}\n#ik_max_word:会将文本做最细粒度的拆分\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("7、指定IK分词器作为默认分词器")])]),s._v(" "),a("p",[s._v("ES的默认分词设置是standard，这个在中文分词时就比较尴尬了，会单字拆分，比如我搜索关键词“清华大学”，这时候会按“清”，“华”，“大”，“学”去分词，然后搜出来的都是些“清清的河水”，“中华儿女”，“地大物博”，“学而不思则罔”之类的莫名其妙的结果，这里我们就想把这个分词方式修改一下，于是呢，就想到了ik分词器，有两种ik_smart和ik_max_word。")]),s._v(" "),a("p",[s._v("ik_smart会将“清华大学”整个分为一个词，而ik_max_word会将“清华大学”分为“清华大学”，“清华”和“大学”，按需选其中之一就可以了。")]),s._v(" "),a("p",[s._v("修改默认分词方法(这里修改school_index索引的默认分词为：ik_max_word)：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('PUT /school_index\n{\n"settings" : {\n"index" : {\n"analysis.analyzer.default.type": "ik_max_word"\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"elasticsearch-head安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-head安装"}},[s._v("#")]),s._v(" Elasticsearch-head安装")]),s._v(" "),a("p",[s._v("由于es服务启动之后，访问界面比较丑陋，为了更好的查看索引库当中的信息，我们可以通过安装elasticsearch-head这个插件来实现，这个插件可以更方便快捷的看到es的管理界面")]),s._v(" "),a("p",[s._v("elasticsearch-head这个插件是es提供的一个用于图形化界面查看的一个插件工具，可以安装上这个插件之后，通过这个插件来实现我们通过浏览器查看es当中的数据")]),s._v(" "),a("p",[s._v("安装elasticsearch-head这个插件这里提供两种方式进行安装，第一种方式就是自己下载源码包进行编译，耗时比较长，网络较差的情况下，基本上不可能安装成功。")]),s._v(" "),a("p",[s._v("第二种方式就是直接使用我已经编译好的安装包，进行修改配置即可")]),s._v(" "),a("p",[s._v("要安装elasticsearch-head插件，需要先安装Node.js")]),s._v(" "),a("p",[a("strong",[s._v("1  安装nodejs")])]),s._v(" "),a("p",[s._v("Node.js是一个基于 Chrome V8 引擎的 JavaScript 运行环境。")]),s._v(" "),a("p",[s._v("Node.js是一个Javascript运行环境(runtime environment)，发布于2009年5月，由Ryan Dahl开发，实质是对Chrome V8引擎进行了封装。Node.js 不是一个 JavaScript 框架，不同于CakePHP、Django、Rails。Node.js 更不是浏览器端的库，不能与 jQuery、ExtJS 相提并论。Node.js 是一个让 JavaScript 运行在服务端的开发平台，它让 JavaScript 成为与PHP、Python、Perl、Ruby 等服务端语言平起平坐的脚本语言。")]),s._v(" "),a("p",[a("strong",[s._v("1.1  下载安装包")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn机器执行以下命令下载安装包，然后进行解压")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es\nwget https://npm.taobao.org/mirrors/node/v8.1.0/node-v8.1.0-linux-x64.tar.gz\ntar -zxvf node-v8.1.0-linux-x64.tar.gz -C /usr/local/es/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("1.2  创建软连接")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn执行以下命令创建软连接")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo ln -s /usr/local/es/node-v8.1.0-linux-x64/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm\nsudo ln -s /usr/local/es/node-v8.1.0-linux-x64/bin/node /usr/local/bin/node\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("1.3  修改环境变量")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn服务器添加环境变量")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("vi /etc/profile\nexport NODE_HOME=/usr/local/es/node-v8.1.0-linux-x64\nexport PATH=:$PATH:$NODE_HOME/bin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[s._v("修改完环境变量使用source生效")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("source /etc/profile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("1.4  验证安装成功")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn执行以下命令验证安装生效")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("node -v\nnpm -v\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("2")]),s._v(" "),a("strong",[s._v("本地安装")])]),s._v(" "),a("p",[a("strong",[s._v("2")]),s._v("**.1  上传压缩包到/usr/local/es路径下去**")]),s._v(" "),a("p",[s._v("将我们的压缩包 elasticsearch-head-compile-after.tar.gz  上传到服务器的/usr/local/es 路径下面去")]),s._v(" "),a("p",[a("strong",[s._v("2")]),s._v("**.2  解压安装包**")]),s._v(" "),a("p",[s._v("在服务器中执行以下命令解压安装包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/\ntar -zxvf elasticsearch-head-compile-after.tar.gz -C /usr/local/es/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("2")]),s._v("**.3**  node1.baiqi.cn"),a("strong",[s._v("机器修改Gruntfile.js")])]),s._v(" "),a("p",[s._v("修改Gruntfile.js这个文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-head\nvim Gruntfile.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("找到代码中的93行：hostname: '192.168.100.100', 修改为：node1.baiqi.cn")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("connect: {                       \n server: {                             \n options: {                                    \n hostname: 'node1.baiqi.cn',                                    \n port: 9100,                                    \n base: '.',                                    \n keepalive: true                              \n  }                       \n }               \n }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("2.4")]),s._v(" "),a("strong",[s._v("node1机器修改app.js")])]),s._v(" "),a("p",[s._v("第一台机器修改app.js")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-head/_site\nvim app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("在Vim中输入「:4354」，定位到第4354行，修改 http://localhost:9200为http://node1.baiqi.cn:9200\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("2.5")]),s._v(" "),a("strong",[s._v("启动head服务")])]),s._v(" "),a("p",[s._v("node1.baiqi.cn启动elasticsearch-head插件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/elasticsearch-head/node_modules/grunt/bin/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("进程前台启动命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("./grunt server\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("进程后台启动命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup ./grunt server >/dev/null 2>&1 &\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Running "connect:server" (connect) taskWaiting forever...Started connect web server on http://192.168.52.100:9100\n如何停止：elasticsearch-head进程\n执行以下命令找到elasticsearch-head的插件进程，然后使用kill  -9  杀死进程即可\nnetstat -nltp | grep 9100\nkill -9 8328\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/22.jpg",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("2.6")]),s._v(" "),a("strong",[s._v("访问elasticsearch-head界面")])]),s._v(" "),a("p",[s._v("打开Google Chrome访问")]),s._v(" "),a("p",[a("a",{attrs:{href:"http://node1.baiqi.cn:9100/",target:"_blank",rel:"noopener noreferrer"}},[a("em",[s._v("http://ip:9100/")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("注意：搭建es集群，启动三个es节点，访问elasticsearch-head时只显示一个master")]),s._v(" "),a("p",[s._v("解决方案：进到节点2、3的/elasticsearch-7.6.1/data/目录下删除nodes文件，之后重启节点2、3的es进程即可")]),s._v(" "),a("blockquote",[a("p",[s._v("PS：也可以浏览器插件方式安装，从Chrome网上应用商店安装 Elasticsearch Head")])]),s._v(" "),a("blockquote",[a("p",[s._v("Green：所有Primary和Replica均为active，集群健康")]),s._v(" "),a("p",[s._v("Yellow：至少一个Replica不可用，但是所有Primary均为active，数据仍然是可以保证完整性的。")]),s._v(" "),a("p",[s._v("Red：至少有一个Primary为不可用状态，数据不完整，集群不可用。")])]),s._v(" "),a("h3",{attrs:{id:"beats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beats"}},[s._v("#")]),s._v(" Beats")]),s._v(" "),a("p",[s._v("Beats是一个开放源代码的数据发送器。我们可以把Beats作为一种代理安装在我们的服务器上，这样就可以比较方便地将数据发送到Elasticsearch或者Logstash中。Elastic Stack提供了多种类型的Beats组件。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("审计数据")]),s._v(" "),a("th",[s._v("AuditBeat")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("日志文件")]),s._v(" "),a("td",[s._v("FileBeat")])]),s._v(" "),a("tr",[a("td",[s._v("云数据")]),s._v(" "),a("td",[s._v("FunctionBeat")])]),s._v(" "),a("tr",[a("td",[s._v("可用性数据")]),s._v(" "),a("td",[s._v("HeartBeat")])]),s._v(" "),a("tr",[a("td",[s._v("系统日志")]),s._v(" "),a("td",[s._v("JournalBeat")])]),s._v(" "),a("tr",[a("td",[s._v("指标数据")]),s._v(" "),a("td",[s._v("MetricBeat")])]),s._v(" "),a("tr",[a("td",[s._v("网络流量数据")]),s._v(" "),a("td",[s._v("PacketBeat")])]),s._v(" "),a("tr",[a("td",[s._v("Windows事件日志")]),s._v(" "),a("td",[s._v("Winlogbeat")])])])]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/80.png",alt:""}})]),s._v(" "),a("p",[s._v("Beats可以直接将数据发送到Elasticsearch或者发送到Logstash，基于Logstash可以进一步地对数据进行处理，然后将处理后的数据存入到Elasticsearch，最后使用Kibana进行数据可视化。")]),s._v(" "),a("p",[a("strong",[s._v("1、FileBeat简介")])]),s._v(" "),a("p",[s._v("FileBeat专门用于转发和收集日志数据的轻量级采集工具。它可以为作为代理安装在服务器上，FileBeat监视指定路径的日志文件，收集日志数据，并将收集到的日志转发到Elasticsearch或者Logstash。")]),s._v(" "),a("p",[a("strong",[s._v("2、FileBeat的工作原理")])]),s._v(" "),a("p",[s._v("启动FileBeat时，会启动一个或者多个输入（Input），这些Input监控指定的日志数据位置。FileBeat会针对每一个文件启动一个Harvester（收割机）。Harvester读取每一个文件的日志，将新的日志发送到libbeat，libbeat将数据收集到一起，并将数据发送给输出（Output）。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/81.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("3、安装FileBeat")])]),s._v(" "),a("p",[s._v("安装FileBeat只需要将FileBeat Linux安装包上传到Linux系统，并将压缩包解压到系统就可以了。")]),s._v(" "),a("p",[s._v("FileBeat官方下载地址：")]),s._v(" "),a("p",[s._v("https://www.elastic.co/cn/downloads/past-releases/filebeat-7-6-1")]),s._v(" "),a("p",[s._v("上传FileBeat安装到Linux，并解压。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tar -xvzf filebeat-7.6.1-linux-x86_64.tar.gz -C /usr/local/es/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("4、使用FileBeat采集MQ日志到Elasticsearch")])]),s._v(" "),a("p",[a("strong",[s._v("4.1、需求分析")])]),s._v(" "),a("p",[s._v("在资料中有一个mq_server.log.tar.gz压缩包，里面包含了很多的MQ服务器日志，现在我们为了通过在Elasticsearch中快速查询这些日志，定位问题。我们需要用FileBeats将日志数据上传到Elasticsearch中。")]),s._v(" "),a("p",[s._v("问题：")]),s._v(" "),a("p",[s._v("首先，我们要指定FileBeat采集哪些MQ日志，因为FileBeats中必须知道采集存放在哪儿的日志，才能进行采集。")]),s._v(" "),a("p",[s._v("其次，采集到这些数据后，还需要指定FileBeats将采集到的日志输出到Elasticsearch，那么Elasticsearch的地址也必须指定。")]),s._v(" "),a("p",[a("strong",[s._v("4.2、配置FileBeats")])]),s._v(" "),a("p",[s._v("FileBeats配置文件主要分为两个部分。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("inputs")])]),s._v(" "),a("li",[a("p",[s._v("output")])])]),s._v(" "),a("p",[s._v("从名字就能看出来，一个是用来输入数据的，一个是用来输出数据的。")]),s._v(" "),a("p",[a("strong",[s._v("4.2.1、input配置")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /var/log/*.log\n    #- c:\\programdata\\elasticsearch\\logs\\*\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("在FileBeats中，可以读取一个或多个数据源。")]),s._v(" "),a("p",[a("strong",[s._v("FileBeats配置文件 - input")])]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/82.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("4.2.2、output配置")])]),s._v(" "),a("p",[a("strong",[s._v("FileBeat配置文件 - output")])]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/83.png",alt:""}})]),s._v(" "),a("p",[s._v("默认FileBeat会将日志数据放入到名称为：filebeat-%filebeat版本号%-yyyy.MM.dd 的索引中。")]),s._v(" "),a("p",[s._v("PS：")]),s._v(" "),a("p",[s._v("FileBeats中的filebeat.reference.yml包含了FileBeats所有支持的配置选项。")]),s._v(" "),a("p",[a("strong",[s._v("4.3、配置文件")])]),s._v(" "),a("ol",[a("li",[s._v("创建配置文件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/filebeat-7.6.1-linux-x86_64\ntouch filebeat_mq_log.yml\nvim filebeat_mq_log.yml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("复制以下到配置文件中")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('filebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /var/mq/log/server.log.*\n\noutput.elasticsearch:\n    hosts: ["192.168.21.130:9200", "192.168.21.131:9200", "192.168.21.132:9200"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("4.4、运行FileBeat")])]),s._v(" "),a("ol",[a("li",[s._v("启动Elasticsearch")])]),s._v(" "),a("p",[s._v("在每个节点上执行以下命令，启动Elasticsearch集群：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup /usr/local/es/elasticsearch-7.6.1/bin/elasticsearch 2>&1 &\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("运行FileBeat")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("./filebeat -c filebeat_mq_log.yml -e\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("将日志数据上传到/var/mq/log，并解压")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir -p /var/mq/log\ncd /var/mq/log\ntar -zxvf mq_server.log.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("4.5、查询数据")])]),s._v(" "),a("p",[s._v("通过head插件，我们可以看到filebeat采集了日志消息，并写入到Elasticsearch集群中。")]),s._v(" "),a("p",[a("strong",[s._v("五、FileBeat是如何工作的")])]),s._v(" "),a("p",[s._v("FileBeat主要由input和harvesters（收割机）组成。这两个组件协同工作，并将数据发送到指定的输出。")]),s._v(" "),a("p",[a("strong",[s._v("1、input和harvester")])]),s._v(" "),a("p",[a("strong",[s._v("1.1、inputs（输入）")])]),s._v(" "),a("p",[s._v("input是负责管理Harvesters和查找所有要读取的文件的组件")]),s._v(" "),a("p",[s._v("如果输入类型是 log，input组件会查找磁盘上与路径描述的所有文件，并为每个文件启动一个Harvester，每个输入都独立地运行")]),s._v(" "),a("p",[a("strong",[s._v("1.2、Harvesters（收割机）")])]),s._v(" "),a("p",[s._v("Harvesters负责读取单个文件的内容，它负责打开/关闭文件，并逐行读取每个文件的内容，将读取到的内容发送给输出")]),s._v(" "),a("p",[s._v("每个文件都会启动一个Harvester")]),s._v(" "),a("p",[s._v("Harvester运行时，文件将处于打开状态。如果文件在读取时，被移除或者重命名，FileBeat将继续读取该文件")]),s._v(" "),a("p",[a("strong",[s._v("2、FileBeats如何保持文件状态")])]),s._v(" "),a("p",[s._v("FileBeat保存每个文件的状态，并定时将状态信息保存在磁盘的「注册表」文件中")]),s._v(" "),a("p",[s._v("该状态记录Harvester读取的最后一次偏移量，并确保发送所有的日志数据")]),s._v(" "),a("p",[s._v("如果输出（Elasticsearch或者Logstash）无法访问，FileBeat会记录成功发送的最后一行，并在输出（Elasticsearch或者Logstash）可用时，继续读取文件发送数据")]),s._v(" "),a("p",[s._v("在运行FileBeat时，每个input的状态信息也会保存在内存中，重新启动FileBeat时，会从「注册表」文件中读取数据来重新构建状态。")]),s._v(" "),a("p",[s._v("'")]),s._v(" "),a("p",[s._v("在/usr/local/es/filebeat-7.6.1-linux-x86_64/data目录中有一个Registry文件夹，里面有一个data.json，该文件中记录了Harvester读取日志的offset。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/85.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"logstash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash"}},[s._v("#")]),s._v(" Logstash")]),s._v(" "),a("p",[a("strong",[s._v("1、简介")])]),s._v(" "),a("p",[s._v("Logstash是一个开源的数据采集引擎。它可以动态地将不同来源的数据统一采集，并按照指定的数据格式进行处理后，将数据加载到其他的目的地。最开始，Logstash主要是针对日志采集，但后来Logstash开发了大量丰富的插件，所以，它可以做更多的海量数据的采集。")]),s._v(" "),a("p",[s._v("它可以处理各种类型的日志数据，例如：Apache的web log、Java的log4j日志数据，或者是系统、网络、防火墙的日志等等。它也可以很容易的和Elastic Stack的Beats组件整合，也可以很方便的和关系型数据库、NoSQL数据库、MQ等整合。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/86.jpeg",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("1.1  经典架构")])]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/88.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("1.2  对比FileBeat")])]),s._v(" "),a("p",[s._v("logstash是jvm跑的，资源消耗比较大")]),s._v(" "),a("p",[s._v("而FileBeat是基于golang编写的，功能较少但资源消耗也比较小，更轻量级")]),s._v(" "),a("p",[s._v("logstash 和filebeat都具有日志收集功能，Filebeat更轻量，占用资源更少")]),s._v(" "),a("p",[s._v("logstash 具有filter功能，能过滤分析日志")]),s._v(" "),a("p",[s._v("一般结构都是filebeat采集日志，然后发送到消息队列，redis，MQ中然后logstash去获取，利用filter功能过滤分析，然后存储到elasticsearch中")]),s._v(" "),a("p",[s._v("FileBeat和Logstash配合，实现背压机制")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/89.jpeg",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("2  安装Logstash和Kibana")])]),s._v(" "),a("p",[a("strong",[s._v("2.1  安装Logstash")])]),s._v(" "),a("p",[s._v("\\1. 下载Logstash")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("https://www.elastic.co/cn/downloads/past-releases/logstash-7-6-1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此处：我们可以选择资料中的logstash-7.6.1.zip安装包。")]),s._v(" "),a("p",[s._v("\\2. 解压Logstash到指定目录")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("unzip logstash-7.6.1 -d /usr/local/es/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("\\3. 运行测试")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cd /usr/local/es/logstash-7.6.1/\nbin/logstash -e 'input { stdin { } } output { stdout {} }'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("等待一会，让Logstash启动完毕。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Sending Logstash logs to /usr/local/es/logstash-7.6.1/logs which is now configured via log4j2.properties\n[2021-02-28T16:31:44,159][WARN ][logstash.config.source.multilocal] Ignoring the \'pipelines.yml\' file because modules or command line options are specified\n[2021-02-28T16:31:44,264][INFO ][logstash.runner          ] Starting Logstash {"logstash.version"=>"7.6.1"}\n[2021-02-28T16:31:45,631][INFO ][org.reflections.Reflections] Reflections took 37 ms to scan 1 urls, producing 20 keys and 40 values \n[2021-02-28T16:31:46,532][WARN ][org.logstash.instrument.metrics.gauge.LazyDelegatingGauge][main] A gauge metric of an unknown type (org.jruby.RubyArray) has been create for key: cluster_uuids. This may result in invalid serialization.  It is recommended to log an issue to the responsible developer/development team.\n[2021-02-28T16:31:46,560][INFO ][logstash.javapipeline    ][main] Starting pipeline {:pipeline_id=>"main", "pipeline.workers"=>2, "pipeline.batch.size"=>125, "pipeline.batch.delay"=>50, "pipeline.max_inflight"=>250, "pipeline.sources"=>["config string"], :thread=>"#<Thread:0x3ccbc15b run>"}\n[2021-02-28T16:31:47,268][INFO ][logstash.javapipeline    ][main] Pipeline started {"pipeline.id"=>"main"}\nThe stdin plugin is now waiting for input:\n[2021-02-28T16:31:47,348][INFO ][logstash.agent           ] Pipelines running {:count=>1, :running_pipelines=>[:main], :non_running_pipelines=>[]}\n[2021-02-28T16:31:47,550][INFO ][logstash.agent           ] Successfully started Logstash API endpoint {:port=>9600}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("然后，随便在控制台中输入内容，等待Logstash的输出。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n"host" => "127.0.0.1",\n"message" => "hello logstash",\n"@version" => "1",\n"@timestamp" => 2021-02-28:01:01.007Z\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("-e选项表示，直接把配置放在命令中，这样可以有效快速进行测试")])]),s._v(" "),a("h2",{attrs:{id:"_3-什么是全文检索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是全文检索"}},[s._v("#")]),s._v(" 3.什么是全文检索")]),s._v(" "),a("p",[s._v("全文检索是指：")]),s._v(" "),a("ul",[a("li",[s._v("通过一个程序扫描文本中的每一个单词，针对单词建立索引，并保存该单词在文本中的位置、以及出现的次数")]),s._v(" "),a("li",[s._v("用户查询时，通过之前建立好的索引来查询，将索引中单词对应的文本位置、出现的次数返回给用户，因为有了具体文本的位置，所以就可以将具体内容读取出来了")])]),s._v(" "),a("h2",{attrs:{id:"_4-倒排索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-倒排索引"}},[s._v("#")]),s._v(" 4.倒排索引")]),s._v(" "),a("h3",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211025144456493.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/index.jpg",alt:""}})]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("term")]),s._v("：在 ES 中，关键词被称为term。")]),s._v(" "),a("li",[a("strong",[s._v("postings list")]),s._v(": 文档列表，作为文档的唯一标识的，ES 会对这些存入的文档进行处理，转化成一个唯一的整型 id，每个文档被分配一个唯一的 id，从0到(2^31)-1。")]),s._v(" "),a("li",[a("strong",[s._v("term dictionary")]),s._v("：如何快速的在海量 term 中查询到需要的 term 呢？遍历显然是不够的，于是乎就有了term dictionary，ES 为了能快速查找到 term，将所有的 term 排了一个序，"),a("strong",[s._v("二分法查找")]),s._v("。是不是感觉有点眼熟，这不就是 MySQL 的索引方式的，直接用 B+树建立索引词典指向被索引的数据。")]),s._v(" "),a("li",[a("strong",[s._v("term index")]),s._v("： 那问题又来了，Term Dictionary 应该放在哪里？肯定是放在内存里面吧？磁盘 io 那么慢。就像 MySQL 索引就是存在内存里面了。重点是 ES 默认可是会对全部 字段进行索引，必然会消耗巨大的内存，此时还能放内存吗？内存会爆。于是乎就有了term index 从数据结构上分类算是一个“Trie 树”，也就是我们常说的字典树（这是一种专门处理字符串匹配的数据结构，用来解决在一组字符串集合中快速查找某个字符串的问题）。这棵树不会包含所有的 term，它包含的是 term 的一些前缀（这也是字典树的使用场景，公共前缀）。通过 term index 可以快速地定位到 term  dictionary 的某个 offset，然后从这个位置再往后顺序查找。是不是想查字典，先查偏旁，在到这个偏旁的所有字，再到具体的字。")])]),s._v(" "),a("blockquote",[a("p",[s._v("ElasticSearch 的倒排排索，增加了最左边的一层「字典树」term index，它不存储所有的单词，只存储单词前缀，通过字典树找到单词所在的块，也就是单词的大概位置，再在块里二分查找，找到对应的单词，再找到单词对应的文档列表。")])]),s._v(" "),a("h3",{attrs:{id:"核心算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心算法"}},[s._v("#")]),s._v(" 核心算法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211025144514776.png",alt:""}})]),s._v(" "),a("p",[s._v("倒排表【postings list】的压缩算法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FOR：Frame Of Reference\nRBM：RoaringBitmap\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("词项索引【term index】的检索原理")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FST：Finit state Transducers\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("FOR算法")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/20211025154200.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("RBM算法")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/20211025161443.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/fst1.jpg",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/fst2.jpg",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/fst3.jpg",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/fst4.jpg",alt:""}})]),s._v(" "),a("p",[s._v("倒排索引总结：")]),s._v(" "),a("p",[s._v("索引就类似于目录，平时我们使用的都是索引，都是通过主键定位到某条数据，那么倒排索引呢，刚好相反，数据对应到主键。")]),s._v(" "),a("p",[s._v("假如，我们有一个站内搜索的功能，通过某个关键词来搜索相关的文章，那么这个关键词可能出现在标题中，也可能出现在文章内容中，那我们将会在创建或修改文章的时候，建立一个关键词与文章的对应关系表，这种，我们可以称之为倒排索引,因此倒排索引，也可称之为反向索引．")]),s._v(" "),a("h3",{attrs:{id:"倒排检索-vs-mysql-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#倒排检索-vs-mysql-索引"}},[s._v("#")]),s._v(" 倒排检索 VS MySQL 索引")]),s._v(" "),a("p",[s._v("Mysql只有term  dictionary这一层，是以b-tree排序的方式存储在磁盘上的。检索一个term需要若干次的random  access的磁盘操作。而Lucene在term dictionary的基础上添加了term index来加速检索，term  index以树的形式缓存在内存中。从term index查到对应的term  dictionary的block位置之后，再去磁盘上找term，大大减少了磁盘的random access次数。")]),s._v(" "),a("p",[s._v("额外值得一提的两点是：term index在内存中是以FST（finite state transducers）的形式保存的，其特点是非常节省内存。Term  dictionary在磁盘上是以分block的方式保存的，一个block内部利用公共前缀压缩，比如都是Ab开头的单词就可以把Ab省去。这样term dictionary可以比b-tree更节约磁盘空间。")]),s._v(" "),a("h2",{attrs:{id:"_5-elasticsearch中的核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-elasticsearch中的核心概念"}},[s._v("#")]),s._v(" 5.Elasticsearch中的核心概念")]),s._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("1.常见类型:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("数字类型：long\tinteger\tshort\tbyte\tdouble\tfloat\thalf_float\tscaled_float   unsigned_long")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("Keywords")]),s._v("：适用于索引结构化的字段，可以用于过滤、排序、聚合。keyword类型的字段只能通过精确值（exact value）搜索到。Id应该用keyword")])]),s._v(" "),a("li",[a("p",[s._v("constant_keyword：始终包含相同值的关键字字段")])]),s._v(" "),a("li",[a("p",[s._v("wildcard：可针对类似grep的"),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.10/query-dsl-wildcard-query.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("通配符查询"),a("OutboundLink")],1),s._v("优化日志行和类似的关键字值。关键字字段通常用于排序，汇总和Term查询，例如"),a("code",[s._v("term")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("Dates（时间类型）：包括"),a("code",[s._v("date")]),s._v("和 "),a("code",[s._v("date_nanos")])])]),s._v(" "),a("li",[a("p",[s._v("alias：为现有字段定义别名。")])]),s._v(" "),a("li",[a("p",[s._v("binary（二进制）：binary")])]),s._v(" "),a("li",[a("p",[s._v("range（区间类型）：integer_range、float_range、long_range、double_range、date_range")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("text")]),s._v("：当一个字段是要被全文搜索的，比如Email内容、产品描述，这些字段应该使用text类型。设置text类型以后，字段内容会被分析，在生成倒排索\t\t引以前，字符串会被分析器分成一个一个词项。text类型的字段不用于排序，很少用于聚合。（解释一下为啥不会为text创建正排索引：大量堆空间，尤其是在加载高基数text字段时。字段数据一旦加载到堆中，就在该段的生命周期内保持在那里。同样，加载字段数据是一个昂贵的过程，可能导致用户遇到延迟问题。这就是默认情况下禁用字段数据的原因）")])])])]),s._v(" "),a("li",[a("p",[s._v("2.对象关系类型：")]),s._v(" "),a("ul",[a("li",[s._v("object：用于单个JSON对象")]),s._v(" "),a("li",[s._v("nested：用于JSON对象数组")]),s._v(" "),a("li",[s._v("flattened：允许将整个JSON对象索引为单个字段。")])])]),s._v(" "),a("li",[a("p",[s._v("3.结构化类型:")]),s._v(" "),a("ul",[a("li",[s._v("geo-point：纬度/经度积分")]),s._v(" "),a("li",[s._v("geo-shape：用于多边形等复杂形状")]),s._v(" "),a("li",[s._v("point：笛卡尔坐标点")]),s._v(" "),a("li",[s._v("shape：笛卡尔任意几何图形")])])]),s._v(" "),a("li",[a("p",[s._v("4.特殊类型：")]),s._v(" "),a("ul",[a("li",[s._v("IP地址：ip 用于IPv4和IPv6地址")]),s._v(" "),a("li",[s._v("completion：提供自动完成建议")]),s._v(" "),a("li",[s._v("tocken_count：计算字符串中令牌的数量")]),s._v(" "),a("li",[s._v("murmur3：在索引时计算值的哈希并将其存储在索引中")]),s._v(" "),a("li",[s._v("annotated-text：索引包含特殊标记的文本（通常用于标识命名实体）")]),s._v(" "),a("li",[s._v("percolator：接受来自query-dsl的查询")]),s._v(" "),a("li",[s._v("join：为同一索引内的文档定义父/子关系")]),s._v(" "),a("li",[s._v("rank features：记录数字功能以提高查询时的点击率。")]),s._v(" "),a("li",[s._v("dense vector：记录浮点值的密集向量。")]),s._v(" "),a("li",[s._v("sparse vector：记录浮点值的稀疏向量。")]),s._v(" "),a("li",[s._v("search-as-you-type：针对查询优化的文本字段，以实现按需输入的完成")]),s._v(" "),a("li",[s._v("histogram：histogram 用于百分位数聚合的预聚合数值。")]),s._v(" "),a("li",[s._v("constant keyword：keyword当所有文档都具有相同值时的情况的专业化。")])])]),s._v(" "),a("li",[a("p",[s._v("5.array（数组）：在Elasticsearch中，数组不需要专用的字段数据类型。默认情况下，任何字段都可以包含零个或多个值，但是，数组中的所有值都必须具有相同的数据类型。")])]),s._v(" "),a("li",[a("p",[s._v("6.新增：")]),s._v(" "),a("ul",[a("li",[s._v("date_nanos：date plus 纳秒")]),s._v(" "),a("li",[s._v("features：")])])])]),s._v(" "),a("h3",{attrs:{id:"index-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index-索引"}},[s._v("#")]),s._v(" index 索引")]),s._v(" "),a("blockquote",[a("p",[s._v("类似于mysql数据库中的database")])]),s._v(" "),a("p",[s._v("一个索引就是一个拥有几分相似特征的文档的集合。比如说，可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引")]),s._v(" "),a("p",[s._v("一个索引由一个名字来标识（必须全部是小写字母的），并且当我们要对对应于这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- 创建索引：PUT /index?pretty\n- 查询索引：GET _cat/indices?v\n- 删除索引：DELETE /index?pretty\n- 插入数据：\n    PUT /index/_doc/id\n    {\n        Json数据\n    }\n- 修改数据\n\t- 全量替换 PUT \n\t- 指定字段更新 POST\n- 删除数据 DELETE /index/type/id\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"mapping-映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapping-映射"}},[s._v("#")]),s._v(" mapping 映射")]),s._v(" "),a("p",[a("strong",[s._v("ElasticSearch中的映射（Mapping）是定义文档及其包含的字段的存储和索引方式的过程")])]),s._v(" "),a("p",[s._v("mapping是处理数据的方式和规则方面做一些限制，如某个字段的数据类型、默认值、分词器、是否被索引等等，这些都是映射里面可以设置的。")]),s._v(" "),a("p",[s._v("ES中的mapping有点类似与RDB中“表结构”的概念，在MySQL中，表结构里包含了字段名称，字段的类型还有索引信息等。在Mapping里也包含了一些属性，比如字段名称、类型、字段使用的分词器、是否评分、是否创建索引等属性，并且在ES中一个字段可以有对个类型。分词器、评分等概念在后面的课程讲解。")]),s._v(" "),a("p",[s._v("在关系数据库中，需要事先创建数据库，然后在该数据库下创建数据表，并创建表字段、类型、长度、主键等，最后才能基于表插入数据。")]),s._v(" "),a("p",[s._v("而Elasticsearch中不需要定义Mapping映射（即关系型数据库的表、字段等），在文档写入Elasticsearch时，会根据文档字段自动识别类型，这种机制称之为"),a("strong",[s._v("动态映射")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("静态映射")]),s._v("是在Elasticsearch中也可以事先定义好映射，包含文档的各字段类型、分词器等，这种方式称之为静态映射。")]),s._v(" "),a("p",[s._v("ES中映射可以分为动态映射和静态映射。")]),s._v(" "),a("h4",{attrs:{id:"dynamic-field-mapping-动态映射或自动映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-field-mapping-动态映射或自动映射"}},[s._v("#")]),s._v(" Dynamic field mapping：（动态映射或自动映射）")]),s._v(" "),a("ul",[a("li",[a("h4",{attrs:{id:"整数-long"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数-long"}},[s._v("#")]),s._v(" 整数\t\t\t\t     =>\tlong")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"浮点数-float"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数-float"}},[s._v("#")]),s._v(" 浮点数\t\t\t     =>\tfloat")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"true-false-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#true-false-boolean"}},[s._v("#")]),s._v(" true || false\t =>\tboolean")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"日期-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期-date"}},[s._v("#")]),s._v(" 日期\t\t             =>\tdate")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"数组-取决于数组中的第一个有效值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组-取决于数组中的第一个有效值"}},[s._v("#")]),s._v(" 数组                     =>    取决于数组中的第一个有效值")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"对象-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象-object"}},[s._v("#")]),s._v(" 对象                     =>    object")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"字符串-如果不是数字和日期类型-那会被映射为text和keyword两个类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串-如果不是数字和日期类型-那会被映射为text和keyword两个类型"}},[s._v("#")]),s._v(" 字符串                 =>    如果不是数字和日期类型，那会被映射为text和keyword两个类型")]),s._v(" "),a("p",[s._v("除了上述字段类型之外，其他类型都必须显示映射，也就是必须手工指定，因为其他类型ES无法自动识别。")])])]),s._v(" "),a("p",[s._v("动态映射 代码演示")]),s._v(" "),a("blockquote",[a("p",[s._v("删除原创建的索引")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("DELETE /es_db\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("创建索引")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("PUT /es_db\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("创建文档(ES根据数据类型, 会自动创建映射)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('PUT /es_db/_doc/1\n{\n"name": "Jack",\n"sex": 1,\n"age": 25,\n"book": "java入门至精通",\n"address": "广州小蛮腰"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("获取文档映射")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /es_db/_mapping\t\t\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("h4",{attrs:{id:"expllcit-field-mapping-手动映射-静态映射或手工映射或显示映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expllcit-field-mapping-手动映射-静态映射或手工映射或显示映射"}},[s._v("#")]),s._v(" Expllcit field mapping：手动映射/（静态映射或手工映射或显示映射）")]),s._v(" "),a("blockquote",[a("p",[s._v('格式：\nPUT /product\n{\n"mappings": {\n"properties": {\n"field": {\n"mapping_parameter": "parameter_value"\n}\n}\n}\n}')])]),s._v(" "),a("p",[s._v("静态映射 代码演示：")]),s._v(" "),a("blockquote",[a("p",[s._v("删除原创建的索引")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("DELETE /es_db\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("创建索引")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("PUT /es_db\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("设置文档映射")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('PUT /es_db\n{\n"mappings":{\n"properties":{\n"name":{"type":"keyword","index":true,"store":true},\n"sex":{"type":"integer","index":true,"store":true},\n"age":{"type":"integer","index":true,"store":true},\n"book":{"type":"text","index":true,"store":true},\n"address":{"type":"text","index":true,"store":true}\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("根据静态映射创建文档")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('PUT /es_db/_doc/1\n{\n"name": "Jack",\n"sex": 1,\n"age": 25,\n"book": "elasticSearch入门至精通",\n"address": "广州车陂"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("获取文档映射")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /es_db/_mapping\t\t\t\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("h4",{attrs:{id:"映射参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#映射参数"}},[s._v("#")]),s._v(" 映射参数")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("①")]),s._v(" "),a("strong",[s._v("index：是否对创建对当前字段创建倒排索引，默认true，如果不创建索引，该字段不会通过索引被搜索到,但是仍然会在source元数据中展示")])]),s._v(" "),a("p",[s._v("​\t② "),a("strong",[s._v("analyzer：指定分析器（character filter、tokenizer、Token filters）。")])]),s._v(" "),a("p",[s._v("​\t③ boost：对当前字段相关度的评分权重，默认1")]),s._v(" "),a("p",[s._v("​\t④ coerce：是否允许强制类型转换  true “1”=> 1  false “1”=< 1")]),s._v(" "),a("p",[s._v("​\t⑤ copy_to：该参数允许将多个字段的值复制到组字段中，然后可以将其作为单个字段进行查询")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("⑥")]),s._v(" "),a("strong",[s._v("doc_values：为了提升排序和聚合效率，默认true，如果确定不需要对字段进行排序或聚合，也不需要通过脚本访问字段值，则可以禁用doc值以节省磁盘\t\t空间（不支持text和annotated_text）")])]),s._v(" "),a("p",[s._v("​\t⑦ dynamic：控制是否可以动态添加新字段")]),s._v(" "),a("p",[s._v("​\t\t1) true 新检测到的字段将添加到映射中。（默认）")]),s._v(" "),a("p",[s._v("​\t\t2) false 新检测到的字段将被忽略。这些字段将不会被索引，因此将无法搜索，但仍会出现在_source返回的匹配项中。这些字段不会添加到映射中，必须显式\t\t\t添加新字段。")]),s._v(" "),a("p",[s._v("​\t\t3) strict 如果检测到新字段，则会引发异常并拒绝文档。必须将新字段显式添加到映射中")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("⑧")]),s._v(" "),a("strong",[s._v("eager_global_ordinals：用于聚合的字段上，优化聚合性能。")])]),s._v(" "),a("p",[s._v("​\t\t1) Frozen indices（冻结索引）：有些索引使用率很高，会被保存在内存中，有些使用率特别低，宁愿在使用的时候重新创建，在使用完毕后丢弃数据，\t\t\tFrozen indices的数据命中频率小，不适用于高搜索负载，数据不会被保存在内存中，堆空间占用比普通索引少得多，Frozen indices是只读的，请求可能\t\t\t是秒级或者分钟级。****eager_global_ordinals不适用于Frozen indices****")]),s._v(" "),a("p",[s._v("​\t⑨ "),a("strong",[s._v("enable：是否创建倒排索引，可以对字段操作，也可以对索引操作，如果不创建索引，让然可以检索并在_source元数据中展示，谨慎使用，该状态无法\t\t修改。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    PUT my_index\n    {\n      "mappings": {\n        "enabled": false\n      }\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("​\t"),a("strong",[s._v("⑩")]),s._v(" "),a("strong",[s._v("fielddata：查询时内存数据结构，在首次用当前字段聚合、排序或者在脚本中使用时，需要字段为fielddata数据结构，并且创建倒排索引保存到堆中")])]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("⑪")]),s._v(" "),a("strong",[s._v("fields：给field创建多字段，用于不同目的（全文检索或者聚合分析排序）")])]),s._v(" "),a("p",[s._v("​\t⑫ format：格式化")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  "date": {\n     "type":  "date",\n     "format": "yyyy-MM-dd"\n   }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("​\t⑬ ignore_above：超过长度将被忽略")]),s._v(" "),a("p",[s._v("​\t⑭ ignore_malformed：忽略类型错误")]),s._v(" "),a("p",[s._v("​\t⑮ index_options：控制将哪些信息添加到反向索引中以进行搜索和突出显示。仅用于text字段")]),s._v(" "),a("p",[s._v("​\t⑯ Index_phrases：提升exact_value查询速度，但是要消耗更多磁盘空间")]),s._v(" "),a("p",[s._v("​\t⑰ Index_prefixes：前缀搜索")]),s._v(" "),a("p",[s._v("​\t\t1) min_chars：前缀最小长度，>0，默认2（包含）")]),s._v(" "),a("p",[s._v("​\t\t2) max_chars：前缀最大长度，<20，默认5（包含）")]),s._v(" "),a("p",[s._v("​\t⑱ meta：附加元数据")]),s._v(" "),a("p",[s._v("​\t⑲ normalizer：")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("⑳ norms：是否禁用评分（在filter和聚合字段上应该禁用）。")])]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("21 null_value：为null值设置默认值")])]),s._v(" "),a("p",[s._v("​\t22 position_increment_gap：")]),s._v(" "),a("p",[s._v("​\t23 proterties：除了mapping还可用于object的属性设置")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("24 search_analyzer：设置单独的查询时分析器：")])]),s._v(" "),a("p",[s._v("​\t25 similarity：为字段设置相关度算法，支持BM25、claassic（TF-IDF）、boolean")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("26 store：设置字段是否仅查询")])]),s._v(" "),a("p",[s._v("​\t**27 term_vector：**运维参数")]),s._v(" "),a("h4",{attrs:{id:"对已存在的mapping映射进行修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对已存在的mapping映射进行修改"}},[s._v("#")]),s._v(" 对已存在的mapping映射进行修改")]),s._v(" "),a("p",[s._v("具体方法：")]),s._v(" "),a("ol",[a("li",[s._v("如果要推倒现有的映射, 你得重新建立一个静态索引")]),s._v(" "),a("li",[s._v("然后把之前索引里的数据导入到新的索引里")]),s._v(" "),a("li",[s._v("删除原创建的索引")]),s._v(" "),a("li",[s._v("为新索引起个别名, 为原索引名")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _reindex\n{\n"source": {\n"index": "db_index"\n},\n"dest": {\n"index": "db_index_2"\n}\n}\n\nDELETE /db_index\n\nPUT /db_index_2/_alias/db_index\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("strong",[s._v("注意: 通过这几个步骤就实现了索引的平滑过渡,并且是零停机")])]),s._v(" "),a("h3",{attrs:{id:"field-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#field-字段"}},[s._v("#")]),s._v(" Field 字段")]),s._v(" "),a("p",[s._v("相当于是数据表的字段|列")]),s._v(" "),a("h3",{attrs:{id:"type-字段类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-字段类型"}},[s._v("#")]),s._v(" Type 字段类型")]),s._v(" "),a("blockquote",[a("p",[s._v("类似于mysql数据库中的table表，es中可以在Index中建立type（table），通过mapping进行映射。")])]),s._v(" "),a("p",[s._v("每一个字段都应该有一个对应的类型，例如：Text、Keyword、Byte等")]),s._v(" "),a("h3",{attrs:{id:"document-文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document-文档"}},[s._v("#")]),s._v(" document 文档")]),s._v(" "),a("blockquote",[a("p",[s._v("由于es存储的数据是文档型的，一条数据对应一篇文档即相当于mysql数据库中的一行数据row，一个文档中可以有多个字段也就是mysql数据库一行可以有多列。")])]),s._v(" "),a("p",[s._v("一个文档是一个可被索引的基础信息单元，类似一条记录。文档以JSON（Javascript Object Notation）格式来表示；")]),s._v(" "),a("h3",{attrs:{id:"集群-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群-cluster"}},[s._v("#")]),s._v(" 集群 cluster")]),s._v(" "),a("p",[s._v("一个集群就是由一个或多个节点组织在一起，它们共同持有整个的数据，并一起提供索引和搜索功能")]),s._v(" "),a("h3",{attrs:{id:"节点-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点-node"}},[s._v("#")]),s._v(" 节点 node")]),s._v(" "),a("p",[s._v("一个节点是集群中的一个服务器，作为集群的一部分，它存储数据，参与集群的索引和搜索功能")]),s._v(" "),a("p",[s._v("一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫做“elasticsearch”的集群中")]),s._v(" "),a("p",[s._v("这意味着，如果在网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做“elasticsearch”的集群中")]),s._v(" "),a("p",[s._v("在一个集群里，可以拥有任意多个节点。而且，如果当前网络中没有运行任何Elasticsearch节点，这时启动一个节点，会默认创建并加入一个叫做“elasticsearch”的集群。")]),s._v(" "),a("h3",{attrs:{id:"分片和副本-shards-replicas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分片和副本-shards-replicas"}},[s._v("#")]),s._v(" 分片和副本 shards&replicas")]),s._v(" "),a("p",[a("strong",[s._v("分片")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("一个索引可以存储超出单个结点硬件限制的大量数据。比如，一个具有10亿文档的索引占据1TB的磁盘空间，而任一节点都没有这样大的磁盘空间；或者单个节点处理搜索请求，响应太慢")])]),s._v(" "),a("li",[a("p",[s._v("为了解决这个问题，Elasticsearch提供了将索引划分成多份的能力，这些份就叫做分片")])]),s._v(" "),a("li",[a("p",[s._v("当创建一个索引的时候，可以指定你想要的分片的数量")])]),s._v(" "),a("li",[a("p",[s._v("每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以被放置到集群中的任何节点上")])]),s._v(" "),a("li",[a("p",[s._v("分片很重要，主要有两方面的原因")]),s._v(" "),a("ul",[a("li",[s._v("允许水平分割/扩展你的内容容量")]),s._v(" "),a("li",[s._v("允许在分片之上进行分布式的、并行的操作，进而提高性能/吞吐量")])])]),s._v(" "),a("li",[a("p",[s._v("至于一个分片怎样分布，它的文档怎样聚合回搜索请求，是完全由Elasticsearch管理的，对于作为用户来说，这些都是透明的")])])]),s._v(" "),a("p",[a("strong",[s._v("副本")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch允许你创建分片的一份或多份拷贝，这些拷贝叫做副本分片，或者直接叫副本")])]),s._v(" "),a("li",[a("p",[s._v("副本之所以重要，有两个主要原因")]),s._v(" "),a("ul",[a("li",[s._v("在分片/节点失败的情况下，提供了高可用性。注意到复制分片从不与原/主要（original/primary）分片置于同一节点上是非常重要的")]),s._v(" "),a("li",[s._v("扩展搜索量/吞吐量，因为搜索可以在所有的副本上并行运行；每个索引可以被分成多个分片；一个索引有0个或者多个副本；一旦设置了副本，每个索引就有了主分片和副本分片，分片和副本的数量可以在索引；创建的时候指定；在索引创建之后，可以在任何时候动态地改变副本的数量，但是不能改变分片的数量。")])])])]),s._v(" "),a("h2",{attrs:{id:"_6-query-dsl-domain-specific-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-query-dsl-domain-specific-language"}},[s._v("#")]),s._v(" 6.Query DSL(Domain Specific Language)")]),s._v(" "),a("h3",{attrs:{id:"_6-1-查询上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-查询上下文"}},[s._v("#")]),s._v(" 6.1 查询上下文")]),s._v(" "),a("p",[s._v("使用query关键字进行检索，倾向于相关度搜索，故需要计算评分。搜索是Elasticsearch最关键和重要的部分。")]),s._v(" "),a("h3",{attrs:{id:"_6-2-相关度评分-score"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-相关度评分-score"}},[s._v("#")]),s._v(" 6.2 相关度评分：_score")]),s._v(" "),a("p",[s._v("概念：相关度评分用于对搜索结果排序，评分越高则认为其结果和搜索的预期值相关度越高，即越符合搜索预期值。在7.x之前相关度评分默认使用TF/IDF算法计算而来，7.x之后默认为BM25。在核心知识篇不必关心相关评分的具体原理，只需知晓其概念即可。")]),s._v(" "),a("p",[s._v("排序：相关度评分为搜索结果的排序依据，默认情况下评分越高，则结果越靠前。")]),s._v(" "),a("h3",{attrs:{id:"_6-3-元数据-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-元数据-source"}},[s._v("#")]),s._v(" 6.3 元数据：_source")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("禁用_source：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("好处：节省存储开销")])]),s._v(" "),a("li",[a("p",[s._v("坏处：")]),s._v(" "),a("ul",[a("li",[s._v("不支持update、update_by_query和reindex API。")]),s._v(" "),a("li",[s._v("不支持高亮。")]),s._v(" "),a("li",[s._v("不支持reindex、更改mapping分析器和版本升级。")]),s._v(" "),a("li",[s._v("通过查看索引时使用的原始文档来调试查询或聚合的功能。")]),s._v(" "),a("li",[s._v("将来有可能自动修复索引损坏。")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("总结：如果只是为了节省磁盘，可以压缩索引比禁用_source更好。")])])]),s._v(" "),a("li",[a("p",[s._v("数据源过滤器：")]),s._v(" "),a("p",[a("strong",[s._v("Including：结果中返回哪些field")])]),s._v(" "),a("p",[a("strong",[s._v("Excluding：结果中不要返回哪些field，不返回的field不代表不能通过该字段进行检索，因为元数据不存在不代表索引不存在")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在mapping中定义过滤：支持通配符，但是这种方式不推荐，因为mapping不可变")]),s._v(" "),a("div",{staticClass:"language-console line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('PUT product\n{\n  "mappings": {\n    "_source": {\n      "includes": [\n        "name",\n        "price"\n      ],\n      "excludes": [\n        "desc",\n        "tags"\n      ]\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("常用过滤规则")]),s._v(" "),a("ul",[a("li",[s._v('"_source": "false",')]),s._v(" "),a("li",[s._v('"_source": "obj.*",')]),s._v(" "),a("li",[s._v('"_source": [ "obj1.*", "obj2.*" ],')]),s._v(" "),a("li",[s._v('"_source": {\n"includes": [ "obj1.*", "obj2.*" ],\n"excludes": [ "*.description" ]\n}')])])])])])]),s._v(" "),a("h3",{attrs:{id:"_6-4-query-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-query-string"}},[s._v("#")]),s._v(" 6.4 Query String")]),s._v(" "),a("p",[a("strong",[s._v("查询所有：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /product/_search\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("带参数：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /product/_search?q=name:xiaomi\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("分页：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /product/_search?from=0&size=2&sort=price:asc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("精准匹配 exact value")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /product/_search?q=date:2021-06-01\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("_all搜索 相当于在所有有索引的字段中检索")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("GET /product/_search?q=2021-06-01\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('DELETE product\n# 验证_all搜索\nPUT product\n{\n  "mappings": {\n    "properties": {\n      "desc": {\n        "type": "text", \n        "index": false\n      }\n    }\n  }\n}\n# 先初始化数据\nPOST /product/_update/5\n{\n  "doc": {\n    "desc": "erji zhong de kendeji 2021-06-01"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"_6-5-全文检索-full-text-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-全文检索-full-text-query"}},[s._v("#")]),s._v(" 6.5 全文检索-Full text query")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET index/_search\n{\n  "query": {\n    ***\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("match")]),s._v("：匹配包含某个term的子句")]),s._v(" "),a("p",[a("strong",[s._v("match_all")]),s._v("：匹配所有结果的子句")]),s._v(" "),a("p",[a("strong",[s._v("multi_match")]),s._v("：多字段条件")]),s._v(" "),a("p",[a("strong",[s._v("match_phrase")]),s._v("：短语查询，")]),s._v(" "),a("h3",{attrs:{id:"_6-6-精准查询-term-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-精准查询-term-query"}},[s._v("#")]),s._v(" 6.6 精准查询-Term query")]),s._v(" "),a("ul",[a("li",[a("h4",{attrs:{id:"term-匹配和搜索词项完全相等的结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#term-匹配和搜索词项完全相等的结果"}},[s._v("#")]),s._v(" term：匹配和搜索词项完全相等的结果")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("term和match_phrase区别:")]),s._v(" "),a("blockquote",[a("p",[s._v("match_phrase 会将检索关键词分词, match_phrase的分词结果必须在被检索字段的分词中都包含，而且顺序必须相同，而且默认必须都是连续的")])])])])])]),s._v(" "),a("blockquote",[a("p",[s._v("term搜索不会将搜索词分词")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("term和keyword区别")]),s._v(" "),a("blockquote",[a("p",[s._v("term是对于搜索词不分词,")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("keyword是字段类型,是对于source data中的字段值不分词")])]),s._v(" "),a("ul",[a("li",[a("h4",{attrs:{id:"terms-匹配和搜索词项列表中任意项匹配的结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terms-匹配和搜索词项列表中任意项匹配的结果"}},[s._v("#")]),s._v(" terms：匹配和搜索词项列表中任意项匹配的结果")])]),s._v(" "),a("li",[a("h4",{attrs:{id:"range-范围查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#range-范围查找"}},[s._v("#")]),s._v(" range：范围查找")])])]),s._v(" "),a("h3",{attrs:{id:"_6-7-过滤器-filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-过滤器-filter"}},[s._v("#")]),s._v(" 6.7 过滤器-Filter")]),s._v(" "),a("div",{staticClass:"language-console line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET _search\n{\n  "query": {\n    "constant_score": {\n      "filter": {\n        "term": {\n          "status": "active"\n        }\n      }\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("query和filter的主要区别:")])]),s._v(" "),a("blockquote",[a("p",[s._v("filter是结果导向的而query是过程导向。query倾向于“当前文档和查询的语句的相关度”，而filter倾向于“当前文档和查询的条件是不是相符”。")]),s._v(" "),a("p",[s._v("即在查询过程中，query是要对查询的每个结果计算相关性得分的，而filter不会。")]),s._v(" "),a("p",[s._v("另外filter有相应的缓存机制，可以提高查询效率。")])]),s._v(" "),a("h3",{attrs:{id:"_6-8-组合查询-bool-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-组合查询-bool-query"}},[s._v("#")]),s._v(" 6.8 组合查询-Bool query")]),s._v(" "),a("p",[a("strong",[s._v("bool")]),s._v("：可以组合多个查询条件，bool查询也是采用more_matches_is_better的机制，因此满足must和should子句的文档将会合并起来计算分值")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("must")]),s._v("：必须满足子句（查询）必须出现在匹配的文档中，并将有助于得分。")]),s._v(" "),a("li",[a("strong",[s._v("filter")]),s._v("：过滤器 不计算相关度分数，cache子句（查询）必须出现在匹配的文档中。但是不像 must查询的分数将被忽略。Filter子句在 filter上下文 中执行，这意味着计分被忽略，并且子句被考虑用于缓存。")]),s._v(" "),a("li",[a("strong",[s._v("should")]),s._v("：可能满足 or子句（查询）应出现在匹配的文档中。")]),s._v(" "),a("li",[a("strong",[s._v("must_not")]),s._v("：必须不满足 不计算相关度分数  not子句（查询）不得出现在匹配的文档中。子句在 过滤器上下文 中执行，这意味着计分被忽略，并且子句被视为用于缓存。由于忽略计分，因此将返回所有文档的分数。")])]),s._v(" "),a("p",[a("strong",[s._v("minimum_should_match")]),s._v("：参数指定should返回的文档必须匹配的子句的数量或百分比。如果bool查询包含至少一个should子句，而没有must或 filter子句，则默认值为1。否则，默认值为0。")]),s._v(" "),a("h3",{attrs:{id:"_6-9-聚合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-聚合查询"}},[s._v("#")]),s._v(" 6.9 聚合查询")]),s._v(" "),a("p",[a("strong",[s._v("概念")])]),s._v(" "),a("p",[s._v("聚合（aggs）不同于普通查询，是目前学到的第二种大的查询分类，第一种即“query”，因此在代码中的第一层嵌套由“query”变为了“aggs”。"),a("strong",[s._v("用于进行聚合的字段必须是exact value，分词字段不可进行聚合")]),s._v("，对于text字段如果需要使用聚合，需要开启fielddata，但是通常不建议，因为fielddata是将聚合使用的数据结构由磁盘（doc_values）变为了堆内存（field_data），大数据的聚合操作很容易导致OOM，详细原理会在进阶篇中阐述。")]),s._v(" "),a("p",[a("strong",[s._v("分类")])]),s._v(" "),a("ol",[a("li",[s._v("分桶聚合（Bucket agregations）：类比SQL中的group by的作用，主要用于统计不同类型数据的数量")]),s._v(" "),a("li",[s._v("指标聚合（Metrics agregations）：主要用于最大值、最小值、平均值、字段之和等指标的统计")]),s._v(" "),a("li",[s._v("管道聚合（Pipeline agregations）：用于对聚合的结果进行二次聚合，如要统计绑定数量最多的标签bucket，就是要先按照标签进行分桶，再在分桶的结果上计算最大值。")])]),s._v(" "),a("p",[a("strong",[s._v("语法")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<aggs_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<agg_type>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<field_name>"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\naggs_name：聚合函数的名称\nagg_type：聚合种类，比如是桶聚合（terms）或者是指标聚合（avg、sum、min、max等）\nfield_name：字段名称或者叫域名。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h4",{attrs:{id:"桶聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#桶聚合"}},[s._v("#")]),s._v(" 桶聚合")]),s._v(" "),a("p",[s._v("场景：用于统计不同种类的文档的数量，可进行嵌套统计。")]),s._v(" "),a("p",[s._v("函数：terms")]),s._v(" "),a("p",[s._v("注意：聚合字段必须是exact value，如keyword")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026152151544.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026152304947.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026152315266.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"指标聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指标聚合"}},[s._v("#")]),s._v(" 指标聚合")]),s._v(" "),a("p",[s._v("场景：用于统计某个指标，如最大值、最小值、平均值，可以结合桶聚合一起使用，如按照商品类型分桶，统计每个桶的平均价格。")]),s._v(" "),a("p",[s._v("函数：平均值：Avg、最大值：Max、最小值：Min、求和：Sum、详细信息：Stats、数量：Value count")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026152337653.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"管道聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道聚合"}},[s._v("#")]),s._v(" 管道聚合")]),s._v(" "),a("p",[s._v("场景：用于对聚合查询的二次聚合，如统计平均价格最低的商品分类，即先按照商品分类进行桶聚合，并计算其平均价格，然后对其平均价格计算最小值聚合")]),s._v(" "),a("p",[s._v("函数：Min bucket：最小桶、Max bucket：最大桶、Avg bucket：桶平均值、Sum bucket：桶求和、Stats bucket：桶信息")]),s._v(" "),a("p",[s._v("注意：buckets_path为管道聚合的关键字，其值从当前聚合统计的聚合函数开始计算为第一级。比如下面例子中，my_aggs和my_min_bucket同级，my_aggs就是buckets_path值的起始值。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"my_aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"terms"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ...\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"my_price_bucket"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          ...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"my_min_bucket"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"min_bucket"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"buckets_path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_aggs>price_bucket"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026152418834.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"嵌套聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套聚合"}},[s._v("#")]),s._v(" 嵌套聚合")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<agg_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<agg_type>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<field_name>"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<agg_name_child>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<agg_type>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<field_name>"')]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("用途：用于在某种聚合的计算结果之上再次聚合，如统计不同类型商品的平均价格，就是在按照商品类型桶聚合之后，在其结果之上计算平均价格")]),s._v(" "),a("h4",{attrs:{id:"聚合和查询的相互关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合和查询的相互关系"}},[s._v("#")]),s._v(" 聚合和查询的相互关系")]),s._v(" "),a("p",[a("strong",[s._v("基于query或filter的聚合")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("注意：以上语法，执行顺序为先query后aggs，顺序和谁在上谁在下没有关系。query中可以是查询、也可以是filter、或者bool query")]),s._v(" "),a("p",[a("strong",[s._v("基于聚合结果的查询、")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "aggs": {\n    ...\n  },\n  "post_filter": {\n    ...\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("注意：以上语法，执行顺序为先aggs后post_filter，顺序和谁在上谁在下没有关系。")]),s._v(" "),a("p",[a("strong",[s._v("查询条件的作用域")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"avg_price"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      ...\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"all_avg_price"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"global"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ...\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("上面例子中，avg_price的计算结果是基于query的查询结果的，而all_avg_price的聚合是基于all data的")]),s._v(" "),a("h4",{attrs:{id:"聚合排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合排序"}},[s._v("#")]),s._v(" 聚合排序")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("排序规则")])])]),s._v(" "),a("p",[s._v("order_type：_count（数量） _key（聚合结果的key值） _term（废弃但是仍然可用，使用_key代替）")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type_agg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"terms"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"order"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<order_type>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"desc"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[s._v("多级排序：即排序的优先级，按照外层优先的顺序")])])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search?size="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"first_sort"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      ...\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"second_sort"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          ...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("上例中，先按照first_sort排序，再按照second_sort排序")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[s._v("多层排序：即按照多层聚合中的里层某个聚合的结果进行排序")])])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET /product/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tag_avg_price"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"terms"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type.keyword"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"order"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"agg_stats>my_stats.sum"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"desc"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"agg_stats"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          ...\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"my_stats"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"extended_stats"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                ...\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("上例中，按照里层聚合“my_stats”进行排序")]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[s._v("常用的查询函数")])])]),s._v(" "),a("ul",[a("li",[s._v("① histogram：直方图或柱状图统计")])]),s._v(" "),a("p",[s._v("用途：用于区间统计，如不同价格商品区间的销售情况")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search?size="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<histogram_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"histogram"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"price"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #字段名称\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"interval"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #区间间隔\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keyed"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #返回数据的结构化类型\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"min_doc_count"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" <num>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #返回桶的最小文档数阈值，即文档数小于num的桶不会被输出\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"missing"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1999")]),s._v(" #空值的替换值，即如果文档对应字段的值为空，则默认输出"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1999")]),s._v("（参数值）\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ul",[a("li",[s._v("② date-histogram：基于日期的直方图，比如统计一年每个月的销售额")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search?size="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"my_date_histogram"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"date_histogram"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #字段需为date类型\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<interval_type>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"month"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #时间间隔的参数可选项\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"format"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-MM"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" #日期的格式化输出\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"extended_bounds"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" #输出空桶\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"min"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2020-01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2020-12"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ninterval_type：时间间隔的参数可选项\n\nfixed_interval：ms（毫秒）、s（秒）、 m（分钟）、h（小时）、d（天），注意单位需要带上具体的数值，如2d为两天。需要当心当单位过小，会导致输出桶过多而导致服务崩溃。\n\ncalendar_interval：month、year\n\ninterval：（废弃，但是仍然可用）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("③ percentile 百分位统计 或者 饼状图")]),s._v(" "),a("p",[s._v("计算结果为何为近似值？")])])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("percentiles：用于评估当前数值分布情况，比如99 percentile 是 1000 ， 是指 99%的数值都在1000以内。常见的一个场景就是我们制定 SLA 的时候常说 99% 的请求延迟都在100ms 以内，这个时候你就可以用 99 percentile 来查一下，看一下 99 percenttile 的值如果在 100ms 以内，就代表SLA达标了。")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search?size="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<percentiles_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"percentiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"price"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"percents"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n          percent1，#区间的数值，如"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v(" 即代表"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("%、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("%、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("%、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("%、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("%的数值分布\n          percent2，\n          ...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("percentile_ranks： percentile rank 其实就是percentiles的反向查询，比如我想看一下 1000、3000 在当前数值中处于哪一个范围内，你查一下它的 rank，发现是95，99，那么说明有95%的数值都在1000以内，99%的数值都在3000以内。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET product/_search?size="),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"aggs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<percentiles_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"percentile_ranks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<field_value>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"values"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n          rank1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          rank2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          ...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-10-脚本查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-脚本查询"}},[s._v("#")]),s._v(" 6.10 脚本查询")]),s._v(" "),a("p",[a("strong",[s._v("概念")])]),s._v(" "),a("p",[s._v("Scripting是Elasticsearch支持的一种专门用于复杂场景下支持自定义编程的强大的脚本功能，ES支持多种脚本语言，如painless，其语法类似于Java,也有注释、关键字、类型、变量、函数等，其就要相对于其他脚本高出几倍的性能，并且安全可靠，可以用于内联和存储脚本。")]),s._v(" "),a("p",[a("strong",[s._v("支持的语言")])]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("groovy")]),s._v("：ES 1.4.x-5.0的默认脚本语言")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("painless")]),s._v("：JavaEE使用java语言开发，.Net使用C#/F#语言开发，Flutter使用Dart语言开发，同样，ES 5.0+版本后的Scripting使用的语言默认就是painless，painless是一种专门用于Elasticsearch的简单,用于内联和存储脚本，是ES 5.0+的默认脚本语言，类似于Java,也有注释、关键字、类型、变量、函数等，是一种安全的脚本语言。并且是Elasticsearch的默认脚本语言。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("其他")]),s._v("：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-expression.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("expression"),a("OutboundLink")],1),s._v("：每个文档的开销较低：表达式的作用更多，可以非常快速地执行，甚至比编写native脚本还要快，支持javascript语法的子集：单个表达式。缺点：只能访问数字，布尔值，日期和geo_point字段，存储的字段不可用")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("mustache"),a("OutboundLink")],1),s._v("：提供模板参数化查询")])])]),s._v(" "),a("p",[a("strong",[s._v("特点")])]),s._v(" "),a("ol",[a("li",[s._v("语法简单，学习成本低")]),s._v(" "),a("li",[s._v("灵活度高，可编程能力强")]),s._v(" "),a("li",[s._v("性能相较于其他脚本语言很高")]),s._v(" "),a("li",[s._v("安全性好")]),s._v(" "),a("li",[s._v("独立语言，虽然易学但仍需单独学习")]),s._v(" "),a("li",[s._v("相较于DSL性能低")]),s._v(" "),a("li",[s._v("不适用于复杂的业务场景")])]),s._v(" "),a("p",[a("strong",[s._v("应用场景")]),s._v("：各种复杂的应用场景，如自定义评分、自定义聚合查询等。")]),s._v(" "),a("p",[a("strong",[s._v("正则")])]),s._v(" "),a("p",[s._v("早先某些版本正则表达式默认情况下处于禁用模式，因为它绕过了painless的针对长时间运行和占用内存脚本的保护机制。而且有深度对战行为。如果需要开启正则，需要配置：script.painless.regex.enabled: true")]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("：通常正则的使用范围比较小，应用范围基本限制在数据量比较小和并发量比较小的应用场景下。")]),s._v(" "),a("h3",{attrs:{id:"_6-11-1-批量查询-mget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-11-1-批量查询-mget"}},[s._v("#")]),s._v(" 6.11.1 批量查询 _mget")]),s._v(" "),a("p",[s._v("批量获取文档数据是通过_mget的API来实现的")]),s._v(" "),a("p",[a("strong",[s._v("① 在URL中不指定index和type")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("请求方式：GET")])]),s._v(" "),a("li",[a("p",[s._v("请求地址：_mget")])]),s._v(" "),a("li",[a("p",[s._v("功能说明 ： 可以通过ID批量获取不同index和type的数据")])]),s._v(" "),a("li",[a("p",[s._v("请求参数：")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("docs : 文档数组参数\n"),a("ul",[a("li",[s._v("_index : 指定index")]),s._v(" "),a("li",[s._v("_type : 指定type")]),s._v(" "),a("li",[s._v("_id : 指定id")]),s._v(" "),a("li",[s._v("_source : 指定要查询的字段")])])])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET _mget\n{\n  "docs": [\n    {\n      "_index": "es_db",\n      "_type": "_doc",\n      "_id": 1\n    },\n    {\n      "_index": "es_db",\n      "_type": "_doc",\n      "_id": 2\n    }\n  ]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("响应结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "docs" : [\n    {\n      "_index" : "es_db",\n      "_type" : "_doc",\n      "_id" : "1",\n      "_version" : 3,\n      "_seq_no" : 7,\n      "_primary_term" : 1,\n      "found" : true,\n      "_source" : {\n        "name" : "张三666",\n        "sex" : 1,\n        "age" : 25,\n        "address" : "广州天河公园",\n        "remark" : "java developer"\n      }\n    },\n    {\n      "_index" : "es_db",\n      "_type" : "_doc",\n      "_id" : "2",\n      "_version" : 1,\n      "_seq_no" : 1,\n      "_primary_term" : 1,\n      "found" : true,\n      "_source" : {\n        "name" : "李四",\n        "sex" : 1,\n        "age" : 28,\n        "address" : "广州荔湾大厦",\n        "remark" : "java assistant"\n      }\n    }\n  ]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("p",[a("strong",[s._v("② 在URL中指定index")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("请求方式：GET")])]),s._v(" "),a("li",[a("p",[s._v("请求地址：/"+s._s(s.indexName)+"/_mget")])]),s._v(" "),a("li",[a("p",[s._v("功能说明 ： 可以通过ID批量获取不同index和type的数据")])]),s._v(" "),a("li",[a("p",[s._v("请求参数：")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("docs : 文档数组参数\n"),a("ul",[a("li",[s._v("_index : 指定index")]),s._v(" "),a("li",[s._v("_type : 指定type")]),s._v(" "),a("li",[s._v("_id : 指定id")]),s._v(" "),a("li",[s._v("_source : 指定要查询的字段")])])])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET /es_db/_mget\n{\n  "docs": [\n    {\n      "_type": "_doc",\n      "_id": 3\n    },\n    {\n      "_type": "_doc",\n      "_id": 4\n    }\n  ]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("③ 在URL中指定index和type")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("请求方式：GET")])]),s._v(" "),a("li",[a("p",[s._v("请求地址：/"+s._s(s.indexName)+"/"+s._s(s.typeName)+"/_mget")])]),s._v(" "),a("li",[a("p",[s._v("功能说明 ： 可以通过ID批量获取不同index和type的数据")])]),s._v(" "),a("li",[a("p",[s._v("请求参数：")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("docs : 文档数组参数\n"),a("ul",[a("li",[s._v("_index : 指定index")]),s._v(" "),a("li",[s._v("_type : 指定type")]),s._v(" "),a("li",[s._v("_id : 指定id")]),s._v(" "),a("li",[s._v("_source : 指定要查询的字段")])])])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET /es_db/_doc/_mget\n{\n  "docs": [\n    {\n      "_id": 1\n    },\n    {\n      "_id": 2\n    }\n  ]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_6-11-2-批量增删改-bulk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-11-2-批量增删改-bulk"}},[s._v("#")]),s._v(" 6.11.2 批量增删改 _bulk")]),s._v(" "),a("p",[s._v("批量对文档进行写操作是通过_bulk的API来实现的")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("请求方式：POST")])]),s._v(" "),a("li",[a("p",[s._v("请求地址：_bulk")])]),s._v(" "),a("li",[a("p",[s._v("请求参数：通过_bulk操作文档，一般至少有两行参数(或偶数行参数)")]),s._v(" "),a("ul",[a("li",[s._v("第一行参数为指定操作的类型及操作的对象(index,type和id)")]),s._v(" "),a("li",[s._v("第二行参数才是操作的数据")])])])]),s._v(" "),a("p",[s._v("参数类似于：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"actionName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"indexName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"typeName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[s._v("actionName：表示操作类型，主要有create,index,delete和update")])]),s._v(" "),a("ol",[a("li",[s._v("批量创建文档create")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("POST _bulk\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白起老师1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"content"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白起老师666"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create_time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白起老师2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"content"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白起老师NB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create_time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("普通创建或全量替换index")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("POST _bulk\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"图灵徐庶老师(一)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"content"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"图灵学院徐庶老师666"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create_time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"article"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"图灵诸葛老师(二)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"content"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"图灵学院诸葛老师NB"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"面向对象"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create_time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1554015482530")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("ul",[a("li",[s._v("如果原文档不存在，则是创建")]),s._v(" "),a("li",[s._v("如果原文档存在，则是替换(全量修改原文档)")])]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("批量删除delete")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _bulk\n{\n  "delete": {\n    "_index": "article",\n    "_type": "_doc",\n    "_id": 3\n  }\n}\n{\n  "delete": {\n    "_index": "article",\n    "_type": "_doc",\n    "_id": 4\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("批量修改update")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST _bulk\n{\n  "update": {\n    "_index": "article",\n    "_type": "_doc",\n    "_id": 3\n  }\n}\n{\n  "doc": {\n    "title": "ES大法必修内功"\n  }\n}\n{\n  "update": {\n    "_index": "article",\n    "_type": "_doc",\n    "_id": 4\n  }\n}\n{\n  "doc": {\n    "create_time": 1554018421008\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("h3",{attrs:{id:"_6-12-模糊查询-智能搜索推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-12-模糊查询-智能搜索推荐"}},[s._v("#")]),s._v(" 6.12 模糊查询，智能搜索推荐")]),s._v(" "),a("h4",{attrs:{id:"前缀搜索-prefix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前缀搜索-prefix"}},[s._v("#")]),s._v(" 前缀搜索：prefix")]),s._v(" "),a("p",[s._v("概念：以xx开头的搜索，不计算相关度评分。")]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("前缀搜索匹配的是term，而不是field。")]),s._v(" "),a("li",[s._v("前缀搜索的性能很差")]),s._v(" "),a("li",[s._v("前缀搜索没有缓存")]),s._v(" "),a("li",[s._v("前缀搜索尽可能把前缀长度设置的更长")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET <index>/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prefix"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<field>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<word_prefix>"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nindex_prefixes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 默认   "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"min_chars"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max_chars"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"通配符-wildcard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符-wildcard"}},[s._v("#")]),s._v(" 通配符：wildcard")]),s._v(" "),a("p",[s._v("概念：通配符运算符是匹配一个或多个字符的占位符。例如，*通配符运算符匹配零个或多个字符。您可以将通配符运算符与其他字符结合使用以创建通配符模式。")]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("通配符匹配的也是term，而不是field")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET <index>/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"wildcard"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<field>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<word_with_wildcard>"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"正则-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则-regexp"}},[s._v("#")]),s._v(" 正则：regexp")]),s._v(" "),a("p",[s._v("概念：regexp查询的性能可以根据提供的正则表达式而有所不同。为了提高性能，应避免使用通配符模式，如."),a("em",[s._v("或 .")]),s._v("?+未经前缀或后缀")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET <index>/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"regexp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<field>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<regex>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"flags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ALL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("flags参数：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("ALL：启用所有可选操作符。")])]),s._v(" "),a("li",[a("p",[s._v("COMPLEMENT：启用~操作符。可以使用~对下面最短的模式进行否定。例如")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a~bc  # matches 'adc' and 'aec' but not 'abc'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("INTERVAL：启用<>操作符。可以使用<>匹配数值范围。例如")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("foo<1-100>    # matches 'foo1', 'foo2' ... 'foo99', 'foo100'\nfoo<01-100>   # matches 'foo01', 'foo02' ... 'foo99', 'foo100'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("INTERSECTION：启用&操作符，它充当AND操作符。如果左边和右边的模式都匹配，则匹配成功。例如:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("aaa.+&.+bbb  # matches 'aaabbb'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("ANYSTRING：启用@操作符。您可以使用@来匹配任何整个字符串。您可以将@操作符与&和~操作符组合起来，创建一个“everything except”逻辑。例如:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@&~(abc.+)  # matches everything except terms beginning with 'abc'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\n#### 模糊查询：fuzzy\n\n混淆字符 (**b**ox → fox)\t\t\t\t\t\t\t\n\n缺少字符 (**b**lack → lack)\n\n多出字符 (sic → sic**k**)\t\t\t\t\t\t\t \n\n颠倒次序 (a**c**t → **c**at)\n\n\n\n语法：\n\n```json\nGET <index>/_search\n{\n  "query": {\n    "fuzzy": {\n      "<field>": {\n        "value": "<keyword>"\n      }\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("参数：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("value：（必须，关键词）")])]),s._v(" "),a("li",[a("p",[s._v("fuzziness：编辑距离，（0，1，2）并非越大越好，召回率高但结果不准确")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("两段文本之间的Damerau-Levenshtein距离是使一个字符串与另一个字符串匹配所需的插入、删除、替换和调换的数量")])]),s._v(" "),a("li",[a("p",[s._v("距离公式：Levenshtein是lucene的，es改进版：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Damerau-Levenshtein，\naxe=>aex  \nLevenshtein=2  \nDamerau-Levenshtein=1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("transpositions：（可选，布尔值）指示编辑是否包括两个相邻字符的变位（ab→ba）。默认为true。")])])]),s._v(" "),a("h4",{attrs:{id:"match-phrase-prefix短语前缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-phrase-prefix短语前缀"}},[s._v("#")]),s._v(" match_phrase_prefix短语前缀")]),s._v(" "),a("p",[s._v("match_phrase：")]),s._v(" "),a("ul",[a("li",[s._v("match_phrase会分词")]),s._v(" "),a("li",[s._v("被检索字段必须包含match_phrase中的所有词项并且顺序必须是相同的")]),s._v(" "),a("li",[s._v("被检索字段包含的match_phrase中的词项之间不能有其他词项")])]),s._v(" "),a("p",[s._v("概念：")]),s._v(" "),a("p",[s._v('​\tmatch_phrase_prefix与match_phrase相同,但是它多了一个特性,就是它允许在文本的最后一个词项(term)上的前缀匹配,如果 是一个单词,比如a,它会匹配文档字段所有以a开头的文档,如果是一个短语,比如 "this is ma" ,他会先在倒排索引中做以ma做前缀搜索,然后在匹配到的doc中做match_phrase查询,(网上有的说是先match_phrase,然后再进行前缀搜索, 是不对的)')]),s._v(" "),a("p",[s._v("参数")]),s._v(" "),a("ul",[a("li",[s._v("analyzer 指定何种分析器来对该短语进行分词处理")]),s._v(" "),a("li",[s._v("max_expansions 限制匹配的最大词项")]),s._v(" "),a("li",[s._v("boost 用于设置该查询的权重")]),s._v(" "),a("li",[s._v("slop 允许短语间的词项(term)间隔：slop 参数告诉 match_phrase 查询词条相隔多远时仍然能将文档视为匹配 什么是相隔多远？ 意思是说为了让查询和文档匹配你需要移动词条多少次？")])]),s._v(" "),a("p",[s._v("原理解析：https://www.elastic.co/cn/blog/found-fuzzy-search#performance-considerations")]),s._v(" "),a("h4",{attrs:{id:"n-gram和edge-ngram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n-gram和edge-ngram"}},[s._v("#")]),s._v(" N-gram和edge ngram")]),s._v(" "),a("p",[s._v("tokenizer")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tokenizer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ngram"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reba always loves me"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("token filter")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET _analyze\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tokenizer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ik_max_word"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"filter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ngram"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reba always loves me"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("min_gram：创建索引所拆分字符的最小阈值")]),s._v(" "),a("p",[s._v("max_gram：创建索引所拆分字符的最大阈值")]),s._v(" "),a("p",[s._v("ngram：从每一个字符开始,按照步长,进行分词,适合前缀中缀检索")]),s._v(" "),a("p",[s._v("edge_ngram：从第一个字符开始,按照步长,进行分词,适合前缀匹配场景")]),s._v(" "),a("h3",{attrs:{id:"_6-13-搜索推荐-suggest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-13-搜索推荐-suggest"}},[s._v("#")]),s._v(" 6.13 搜索推荐 Suggest")]),s._v(" "),a("p",[s._v('现代的搜索引擎，一般会具备"Suggest As You Type"功能，即在用户输入搜索的过程中，进行自动补全或者纠错。 通过协助用户输入更精准的关键词，提高后续全文搜索阶段文档匹配的程度。')]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211115135758855.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("概述")])]),s._v(" "),a("p",[s._v("搜索一般都会要求具有“搜索推荐”或者叫“搜索补全”的功能，即在用户输入搜索的过程中，进行自动补全或者纠错。以此来提高搜索文档的匹配精准度，进而提升用户的搜索体验，这就是Suggest。")]),s._v(" "),a("p",[a("strong",[s._v("四种Suggester")])]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("term suggester")]),s._v("：term suggester正如其名，只基于tokenizer之后的单个term去匹配建议词，并不会考虑多个term之间的关系")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("POST <index>/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"suggest"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<suggest_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<search_content>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"term"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"suggest_mode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<suggest_mode>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"field"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<field_name>"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("参数：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("strong",[s._v("text")]),s._v("：用户搜索的文本")]),s._v(" "),a("li",[a("strong",[s._v("field")]),s._v("：要从哪个字段选取推荐数据")]),s._v(" "),a("li",[a("strong",[s._v("analyzer")]),s._v("：使用哪种分词器")]),s._v(" "),a("li",[a("strong",[s._v("size")]),s._v("：每个建议返回的最大结果数")]),s._v(" "),a("li",[a("strong",[s._v("sort")]),s._v("：如何按照提示词项排序，参数值只可以是以下两个枚举：\n"),a("ul",[a("li",[a("strong",[s._v("score")]),s._v("：分数>词频>词项本身")]),s._v(" "),a("li",[a("strong",[s._v("frequency")]),s._v("：词频>分数>词项本身")])])]),s._v(" "),a("li",[a("strong",[s._v("suggest_mode")]),s._v("：搜索推荐的推荐模式，参数值亦是枚举：\n"),a("ul",[a("li",[s._v("missing：默认值，仅为不在索引中的词项生成建议词")]),s._v(" "),a("li",[s._v("popular：仅返回与搜索词文档词频或文档词频更高的建议词")]),s._v(" "),a("li",[s._v("always：根据 建议文本中的词项 推荐 任何匹配的建议词")])])]),s._v(" "),a("li",[a("strong",[s._v("max_edits")]),s._v("：可以具有最大偏移距离候选建议以便被认为是建议。只能是1到2之间的值。任何其他值都将导致引发错误的请求错误。默认为2")]),s._v(" "),a("li",[a("strong",[s._v("prefix_length")]),s._v("：前缀匹配的时候，必须满足的最少字符")]),s._v(" "),a("li",[a("strong",[s._v("min_word_length")]),s._v("：最少包含的单词数量")]),s._v(" "),a("li",[a("strong",[s._v("min_doc_freq")]),s._v("：最少的文档频率")]),s._v(" "),a("li",[a("strong",[s._v("max_term_freq")]),s._v("：最大的词频")])])]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[s._v("phrase suggester")]),s._v("：phrase suggester和term suggester相比，对建议的文本会参考上下文，也就是一个句子的其他token，不只是单纯的token距离匹配，它可以基于共生和频率选出更好的建议。")])]),s._v(" "),a("p",[s._v("参数：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("real_word_error_likelihood： 此选项的默认值为 0.95。此选项告诉 Elasticsearch 索引中 5% 的术语拼写错误。这意味着随着这个参数的值越来越低，Elasticsearch 会将越来越多存在于索引中的术语视为拼写错误，即使它们是正确的")]),s._v(" "),a("li",[s._v("max_errors：为了形成更正，最多被认为是拼写错误的术语的最大百分比。默认值为 1")]),s._v(" "),a("li",[s._v("confidence：默认值为 1.0，最大值也是。该值充当与建议分数相关的阈值。只有得分超过此值的建议才会显示。例如，置信度为 1.0 只会返回得分高于输入短语的建议")]),s._v(" "),a("li",[s._v("collate：告诉 Elasticsearch 根据指定的查询检查每个建议，以修剪索引中不存在匹配文档的建议。在这种情况下，它是一个匹配查询。由于此查询是模板查询，因此搜索查询是当前建议，位于查询中的参数下。可以在查询下的“params”对象中添加更多字段。同样，当参数“prune”设置为true时，我们将在响应中增加一个字段“collate_match”，指示建议结果中是否存在所有更正关键字的匹配")]),s._v(" "),a("li",[s._v("direct_generator：phrase suggester使用候选生成器生成给定文本中每个项可能的项的列表。单个候选生成器类似于为文本中的每个单独的调用term suggester。生成器的输出随后与建议候选项中的候选项结合打分。目前只支持一种候选生成器，即direct_generator。建议API接受密钥直接生成器下的生成器列表；列表中的每个生成器都按原始文本中的每个项调用。")])])]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[s._v("completion suggester")]),s._v('：自动补全，自动完成，支持三种查询【前缀查询（prefix）模糊查询（fuzzy）正则表达式查询（regex)】 ，主要针对的应用场景就是"Auto Completion"。 此场景下用户每输入一个字符的时候，就需要即时发送一次查询请求到后端查找匹配项，在用户输入速度较高的情况下对后端响应速度要求比较苛刻。因此实现上它和前面两个Suggester采用了不同的数据结构，索引并非通过倒排来完成，而是将analyze过的数据编码成FST和索引一起存放。对于一个open状态的索引，FST会被ES整个装载到内存里的，进行前缀查找速度极快。但是FST只能用于前缀查找，这也是Completion Suggester的局限所在。')])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("completion：es的一种特有类型，专门为suggest提供，基于内存，性能很高。")]),s._v(" "),a("li",[s._v("prefix query：基于前缀查询的搜索提示，是最常用的一种搜索推荐查询。\n"),a("ul",[a("li",[s._v("prefix：客户端搜索词")]),s._v(" "),a("li",[s._v("field：建议词字段")]),s._v(" "),a("li",[s._v("size：需要返回的建议词数量（默认5）")]),s._v(" "),a("li",[s._v("skip_duplicates：是否过滤掉重复建议，默认false")])])]),s._v(" "),a("li",[s._v("fuzzy query\n"),a("ul",[a("li",[s._v("fuzziness：允许的偏移量，默认auto")]),s._v(" "),a("li",[s._v("transpositions：如果设置为true，则换位计为一次更改而不是两次更改，默认为true。")]),s._v(" "),a("li",[s._v("min_length：返回模糊建议之前的最小输入长度，默认 3")]),s._v(" "),a("li",[s._v("prefix_length：输入的最小长度（不检查模糊替代项）默认为 1")]),s._v(" "),a("li",[s._v("unicode_aware：如果为true，则所有度量（如模糊编辑距离，换位和长度）均以Unicode代码点而不是以字节为单位。这比原始字节略慢，因此默认情况下将其设置为false。")])])]),s._v(" "),a("li",[s._v("regex query：可以用正则表示前缀，不建议使用")])])]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[s._v("context suggester")]),s._v("：完成建议者会考虑索引中的所有文档，但是通常来说，我们在进行智能推荐的时候最好通过某些条件过滤，并且有可能会针对某些特性提升权重。")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("contexts：上下文对象，可以定义多个\n"),a("ul",[a("li",[s._v("name："),a("code",[s._v("context")]),s._v("的名字，用于区分同一个索引中不同的"),a("code",[s._v("context")]),s._v("对象。需要在查询的时候指定当前name")]),s._v(" "),a("li",[s._v("type："),a("code",[s._v("context")]),s._v("对象的类型，目前支持两种：category和geo，分别用于对suggest  item分类和指定地理位置。")]),s._v(" "),a("li",[s._v("boost：权重值，用于提升排名")])])]),s._v(" "),a("li",[s._v("path：如果没有path，相当于在PUT数据的时候需要指定context.name字段，如果在Mapping中指定了path，在PUT数据的时候就不需要了，因为 Mapping是一次性的，而PUT数据是频繁操作，这样就简化了代码。这段解释有木有很牛逼，网上搜到的都是官方文档的翻译，觉悟雷同。")])])]),s._v(" "),a("h3",{attrs:{id:"_6-14-数据建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-数据建模"}},[s._v("#")]),s._v(" 6.14 数据建模")]),s._v(" "),a("h4",{attrs:{id:"_6-14-1-嵌套类型-nested"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-1-嵌套类型-nested"}},[s._v("#")]),s._v(" 6.14.1 嵌套类型：Nested")]),s._v(" "),a("p",[s._v("nested属于object类型的一种，是Elasticsearch中用于复杂类型对象数组的索引操作。Elasticsearch没有内部对象的概念，因此，ES在存储复杂类型的时候会把对象的复杂层次结果扁平化为一个键值对列表。")]),s._v(" "),a("p",[a("strong",[s._v("比如")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("PUT my-index"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("-000001")]),s._v("/_doc/"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"group"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fans"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"user"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"first"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"last"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Smith"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"first"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Alice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"last"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"White"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("上面的文档被创建之后，user数组中的每个json对象会以下面的形式存储")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "group" :        "fans",\n  "user.first" : [ "alice", "john" ],\n  "user.last" :  [ "smith", "white" ]\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("user.first")]),s._v("和"),a("code",[s._v("user.last")]),s._v("字段被扁平化为多值字段，"),a("code",[s._v("first")]),s._v("和"),a("code",[s._v("last")]),s._v("之间的关联丢失。")]),s._v(" "),a("p",[a("strong",[s._v("使用nested为复杂类型创建mapping：")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("PUT <index_name>\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"mappings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<nested_field_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nested"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("查询")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET <index_name>/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"nested"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<nested_field_name>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ...\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("Optins:")])]),s._v(" "),a("ul",[a("li",[s._v("path：nested对象的查询深度")]),s._v(" "),a("li",[s._v("score_mode：评分计算方式\n"),a("ul",[a("li",[s._v("avg （默认）：使用所有匹配的子对象的平均相关性得分。")]),s._v(" "),a("li",[s._v("max：使用所有匹配的子对象中的最高相关性得分。")]),s._v(" "),a("li",[s._v("min：使用所有匹配的子对象中最低的相关性得分。")]),s._v(" "),a("li",[s._v("none：不要使用匹配的子对象的相关性分数。该查询为父文档分配得分为0。")]),s._v(" "),a("li",[s._v("sum：将所有匹配的子对象的相关性得分相加。")])])])]),s._v(" "),a("h4",{attrs:{id:"_6-14-2-父子级关系-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-2-父子级关系-join"}},[s._v("#")]),s._v(" 6.14.2 父子级关系：Join")]),s._v(" "),a("p",[s._v("连接数据类型是一个特殊字段，它在同一索引的文档中创建父/子关系。关系部分在文档中定义了一组可能的关系，每个关系是一个父名和一个子名。父/子关系可以定义如下")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("PUT <index_name>\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"mappings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<join_field_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"join"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"relations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"<parent_name>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<child_name>"')]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("strong",[s._v("使用场景")])]),s._v(" "),a("p",[a("code",[s._v("join")]),s._v("类型不能像关系数据库中的表链接那样去用，不论是"),a("code",[s._v("has_child")]),s._v("或者是"),a("code",[s._v("has_parent")]),s._v("查询都会对索引的查询性能有严重的负面影响。并且会触发"),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.12/eager-global-ordinals.html#_what_are_global_ordinals",target:"_blank",rel:"noopener noreferrer"}},[s._v("global ordinals"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("code",[s._v("join")]),a("strong",[s._v("唯一")]),s._v("合适应用场景是：当索引数据包含一对多的关系，并且其中一个实体的数量远远超过另一个的时候。比如："),a("code",[s._v("老师")]),s._v("有"),a("code",[s._v("一万个学生")])]),s._v(" "),a("p",[a("strong",[s._v("注意")])]),s._v(" "),a("ul",[a("li",[s._v("在索引父子级关系数据的时候必须传入routing参数，即指定把数据存入哪个分片，因为父文档和子文档必须在同一个分片上，因此，在获取、删除或更新子文档时需要提供相同的路由值。")]),s._v(" "),a("li",[s._v("每个索引只允许有一个"),a("code",[s._v("join")]),s._v("类型的字段映射")]),s._v(" "),a("li",[s._v("一个元素可以有多个子元素但只有一个父元素")]),s._v(" "),a("li",[s._v("可以向现有连接字段添加新关系")]),s._v(" "),a("li",[s._v("也可以向现有元素添加子元素，但前提是该元素已经是父元素")])]),s._v(" "),a("h4",{attrs:{id:"_6-14-3-数据建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-数据建模"}},[s._v("#")]),s._v(" 6.14.3 数据建模")]),s._v(" "),a("h5",{attrs:{id:"_6-14-3-1-概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-1-概念"}},[s._v("#")]),s._v(" 6.14.3.1 概念")]),s._v(" "),a("p",[s._v("数据模型是描述现实世界某种现象或者状态的物理抽象，比如我们之前用"),a("code",[s._v("FSA")]),s._v("来描述"),a("code",[s._v("周老师的一天")]),s._v("这种现象，就是把现实世界抽象成某种模型。现实世界有很多重要的关联关系：博客帖子有一些评论，银行账户有多次交易记录，客户有多个银行账户，订单有多个订单明细，文件目录有多个文件和子目录。")]),s._v(" "),a("p",[s._v("关系型数据库关联关系：")]),s._v(" "),a("ul",[a("li",[s._v("每个实体（或 行 ，在关系世界中）可以被"),a("code",[s._v("主键")]),s._v("唯一标识。")]),s._v(" "),a("li",[s._v("实体"),a("code",[s._v("规范化")]),s._v("（范式）。唯一实体的数据只存储一次，而相关实体只存储它的主键。只能在一个具体位置修改这个实体的数据。")]),s._v(" "),a("li",[s._v("实体可以进行关联查询，可以跨实体搜索。")]),s._v(" "),a("li",[s._v("单个实体的变化是"),a("code",[s._v("原子性")]),s._v("，"),a("code",[s._v("一致性")]),s._v("，"),a("code",[s._v("隔离性")]),s._v("， 和"),a("code",[s._v("持久性")]),s._v("。 （可以在 "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/ACID_transactions",target:"_blank",rel:"noopener noreferrer"}},[a("em",[s._v("ACID Transactions")]),a("OutboundLink")],1),s._v(" 中查看更多细节。）")]),s._v(" "),a("li",[s._v("大多数关系数据库支持跨多个实体的 ACID 事务。")])]),s._v(" "),a("p",[s._v("但是关系型数据库有其局限性，包括对全文检索有限的支持能力。 实体关联查询时间消耗是很昂贵的，关联的越多，消耗就越昂贵。特别是跨服务器进行实体关联时成本极其昂贵，基本不可用。 但单个的服务器上又存在数据量的限制。")]),s._v(" "),a("p",[s._v("Elasticsearch ，和大多数 NoSQL 数据库类似，是扁平化的。索引是独立文档的集合体。 文档是否匹配搜索请求取决于它是否包含所有的所需信息。")]),s._v(" "),a("p",[s._v("Elasticsearch 中单个文档的数据变更是 "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/ACID_transactions",target:"_blank",rel:"noopener noreferrer"}},[s._v("ACIDic"),a("OutboundLink")],1),s._v(" 的， 而涉及多个文档的事务则不是。当一个事务部分失败时，无法回滚索引数据到前一个状态。")]),s._v(" "),a("p",[s._v("扁平化有以下优势：")]),s._v(" "),a("ul",[a("li",[s._v("索引过程是快速和无锁的。")]),s._v(" "),a("li",[s._v("搜索过程是快速和无锁的。")]),s._v(" "),a("li",[s._v("因为每个文档相互都是独立的，大规模数据可以在多个节点上进行分布。")])]),s._v(" "),a("p",[s._v("但关联关系仍然非常重要。某些时候，我们需要缩小扁平化和现实世界关系模型的差异。以下四种常用的方法，用来在 Elasticsearch 中进行关系型数据的管理：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/application-joins.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Application-side joins"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/denormalization.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Data denormalization"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/nested-objects.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nested objects"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/parent-child.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Parent/child relationships"),a("OutboundLink")],1)])]),s._v(" "),a("h5",{attrs:{id:"_6-14-3-2-对象和实体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-2-对象和实体"}},[s._v("#")]),s._v(" 6.14.3.2 对象和实体")]),s._v(" "),a("p",[s._v("对象和实体的关系就是现实世界和数据模型的映射，我们在做Java开发的时候经常用到的POJO的领域模型就是这种关系：")]),s._v(" "),a("p",[s._v("分层领域模型规约：")]),s._v(" "),a("ul",[a("li",[s._v("DO（ Data Object）：与数据库表结构一一对应，通过DAO层向上传输数据源对象。")]),s._v(" "),a("li",[s._v("DTO（ Data Transfer Object）：数据传输对象，Service或Manager向外传输的对象。")]),s._v(" "),a("li",[s._v("BO（ Business Object）：业务对象。 由Service层输出的封装业务逻辑的对象。")]),s._v(" "),a("li",[s._v("AO（ Application Object）：应用对象。 在Web层与Service层之间抽象的复用对象模型，极为贴近展示层，复用度不高。")]),s._v(" "),a("li",[s._v("VO（ View Object）：显示层对象，通常是Web向模板渲染引擎层传输的对象。")]),s._v(" "),a("li",[s._v("POJO（ Plain Ordinary Java Object）：在本手册中， POJO专指只有setter/getter/toString的简单类，包括DO/DTO/BO/VO等。")]),s._v(" "),a("li",[s._v("Query：数据查询对象，各层接收上层的查询请求。 注意超过2个参数的查询封装，禁止使用Map类来传输。")])]),s._v(" "),a("p",[s._v("领域模型命名规约：")]),s._v(" "),a("ul",[a("li",[s._v("数据对象：xxxDO，xxx即为数据表名。")]),s._v(" "),a("li",[s._v("数据传输对象：xxxDTO，xxx为业务领域相关的名称。")]),s._v(" "),a("li",[s._v("展示对象：xxxVO，xxx一般为网页名称。")]),s._v(" "),a("li",[s._v("POJO是DO/DTO/BO/VO的统称，禁止命名成xxxPOJO。")])]),s._v(" "),a("h5",{attrs:{id:"_6-14-3-3-数据建模的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-3-数据建模的过程"}},[s._v("#")]),s._v(" 6.14.3.3 数据建模的过程")]),s._v(" "),a("ul",[a("li",[s._v("概念：需求 => 抽象。即把实际的用户需求抽象为某种数据模型，比如我们在存储"),a("code",[s._v("倒排表")]),s._v("的时候，就是把”储存倒排表“这个需求抽象成"),a("code",[s._v("FST")]),s._v("的这种抽象的数据模型。")]),s._v(" "),a("li",[s._v("逻辑：抽象 => 具体。仍然以”存储倒排表“为例，FST模型构建完成之后，我们需要把其抽象变成具体的代码和对象，把实现变为肉眼可见的东西。")]),s._v(" "),a("li",[s._v("物理：具体 => 落地。同上，当我们有了逻辑之后，就可以通过具体的对象、属性编程实实在在的数据文件，保存在你的磁盘里。")])]),s._v(" "),a("h5",{attrs:{id:"_6-14-3-4-意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-4-意义"}},[s._v("#")]),s._v(" 6.14.3.4 意义")]),s._v(" "),a("p",[s._v("​\t"),a("strong",[s._v("我个人总结如下，但其实不仅限于以下几点：")])]),s._v(" "),a("ul",[a("li",[s._v("开发：简化开发流程，从而提高效率")]),s._v(" "),a("li",[s._v("产品：提升数据的存储效率，提升查询性能")]),s._v(" "),a("li",[s._v("管理：前期准备充分，降低后期出现问题的可能性")]),s._v(" "),a("li",[s._v("成本：综合各个因素，降低整体的运营和管理成本")])]),s._v(" "),a("h5",{attrs:{id:"_6-14-3-5-数据建模的包含的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-14-3-5-数据建模的包含的内容"}},[s._v("#")]),s._v(" 6.14.3.5 数据建模的包含的内容")]),s._v(" "),a("ul",[a("li",[a("h5",{attrs:{id:"关联关系处理-index-relations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联关系处理-index-relations"}},[s._v("#")]),s._v(" 关联关系处理（index relations）：")]),s._v(" "),a("ul",[a("li",[a("h5",{attrs:{id:"数据模型的关联-我们通过在我们的应用程序中实现联接可以-部分-模拟关系数据库。应用层联接的主要优点是可以对数据进行标准化处理。只能在-user-文档中修改用户的名称。缺点是-为了在搜索时联接文档-必须运行额外的查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型的关联-我们通过在我们的应用程序中实现联接可以-部分-模拟关系数据库。应用层联接的主要优点是可以对数据进行标准化处理。只能在-user-文档中修改用户的名称。缺点是-为了在搜索时联接文档-必须运行额外的查询"}},[s._v("#")]),s._v(" "),a("strong",[s._v("数据模型的关联")]),s._v("：我们通过在我们的应用程序中实现联接可以（部分）模拟关系数据库。应用层联接的主要优点是可以对数据进行标准化处理。只能在 "),a("code",[s._v("user")]),s._v(" 文档中修改用户的名称。缺点是，为了在搜索时联接文档，必须运行额外的查询")])]),s._v(" "),a("li",[a("h5",{attrs:{id:"非规范化数据-使用-elasticsearch-得到最好的搜索性能的方法是有目的的通过在索引时进行非规范化-denormalizing。对每个文档保持一定数量的冗余副本可以在需要访问时避免进行关联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非规范化数据-使用-elasticsearch-得到最好的搜索性能的方法是有目的的通过在索引时进行非规范化-denormalizing。对每个文档保持一定数量的冗余副本可以在需要访问时避免进行关联"}},[s._v("#")]),s._v(" "),a("strong",[s._v("非规范化数据")]),s._v("：使用 Elasticsearch 得到最好的搜索性能的方法是有目的的通过在索引时进行非规范化 "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Denormalization",target:"_blank",rel:"noopener noreferrer"}},[s._v("denormalizing"),a("OutboundLink")],1),s._v("。对每个文档保持一定数量的冗余副本可以在需要访问时避免进行关联")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("稀疏字段")]),s._v("：避免稀疏字段文档")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("并发问题")]),s._v("：全局锁、文档锁、树锁（独占锁、共享锁）、乐观锁、悲观锁")])])])]),s._v(" "),a("li",[a("p",[s._v("Object类型：通俗点就是通过字段冗余，以一张大宽表来实现粗粒度的index，这样可以充分发挥扁平化的优势。但是这是以牺牲索引性能及灵活度为代价的。使用的前提：冗余的字段应该是很少改变的；比较适合与一对少量关系的处理。当业务数据库并非采用非规范化设计时，这时要将数据同步到作为二级索引库的ES中，就很难使用上述增量同步方案，必须进行定制化开发，基于特定业务进行应用开发来处理join关联和实体拼接")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("嵌套对象")]),s._v("：索引性能和查询性能二者不可兼得，必须进行取舍。嵌套文档将实体关系嵌套组合在单文档内部（类似与json的一对多层级结构），这种方式牺牲索引性能（文档内任一属性变化都需要重新索引该文档）来换取查询性能，可以同时返回关系实体，比较适合于一对少量的关系处理。当使用嵌套文档时，使用通用的查询方式是无法访问到的，必须使用合适的查询方式（nested query、nested filter、nested facet等），很多场景下，使用嵌套文档的复杂度在于索引阶段对关联关系的组织拼装")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("父子级关系")]),s._v("：父子文档牺牲了一定的查询性能来换取索引性能，适用于一对多的关系处理。其通过两种type的文档来表示父子实体，父子文档的索引是独立的。父-子文档ID映射存储在 Doc Values 中。当映射完全在内存中时， Doc Values 提供对映射的快速处理能力，另一方面当映射非常大时，可以通过溢出到磁盘提供足够的扩展能力。 在查询parent-child替代方案时，发现了一种filter-terms的语法，要求某一字段里有关联实体的ID列表。基本的原理是在terms的时候，对于多项取值，如果在另外的index或者type里已知主键id的情况下，某一字段有这些值，可以直接嵌套查询。具体可参考官方文档的示例：通过用户里的粉丝关系，微博和用户的关系，来查询某个用户的粉丝发表的微博列表。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("扩展性")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("分片分配感知")]),s._v(" "),a("li",[s._v("索引模板")]),s._v(" "),a("li",[s._v("索引生命周期")]),s._v(" "),a("li",[s._v("冷热架构")]),s._v(" "),a("li",[s._v("分片管理和规划")]),s._v(" "),a("li",[s._v("滚动索引和别名")]),s._v(" "),a("li",[s._v("跨集群搜索")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-15-多字段检索-multi-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-多字段检索-multi-match"}},[s._v("#")]),s._v(" 6.15 多字段检索 multi_match")]),s._v(" "),a("p",[a("strong",[s._v("概念")]),s._v("：多字段检索，是组合查询的另一种形态，考试的时候如果考察多字段检索，并不一定必须使用multi_match，使用bool query，只要结果正确亦可，除非题目中明确要求（目前没有强制要求过）")]),s._v(" "),a("p",[a("strong",[s._v("语法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET <index>/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "<query keyword>",\n      "type": "<multi_match_type>",\n      "fields": [\n        "<field_a>",\n        "<field_b>"\n      ]\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("strong",[s._v("multi_match和_source区别")])]),s._v(" "),a("ul",[a("li",[s._v("multi_match：从哪些字段中检索，指的是查询条件")]),s._v(" "),a("li",[s._v("_source：查询的结果包含哪些字段，指的是元数据")])]),s._v(" "),a("p",[s._v("打个形象的比喻，在MySQL中，Select * From Table Where a=x and b = x，那么multi_match即指的是"),a("code",[s._v("a和b两个字段")]),s._v("，而"),a("code",[s._v("_source")]),s._v("指的是"),a("code",[s._v("*")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_6-15-1-best-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-1-best-fields"}},[s._v("#")]),s._v(" 6.15.1 best_fields")]),s._v(" "),a("p",[a("strong",[s._v("概念")])]),s._v(" "),a("p",[s._v("侧重于“字段”维度，单个字段的得分权重大，对于同一个query，单个field匹配更多的term，则优先排序。")]),s._v(" "),a("p",[a("strong",[s._v("用法")])]),s._v(" "),a("p",[s._v("注意，best_fields是multi_match中type的默认值")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "multi_match" : {\n      "query":      "super charge",\n      "type":       "best_fields", // 默认\n      "fields":     [ "name^2", "desc" ],\n      "tie_breaker": 0.3\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("案例")])]),s._v(" "),a("p",[s._v("针对于以下查询，包含两个查询条件：分别是条件1和条件2")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "dis_max": {\n      "queries": [\n        { "match": { "name": "chiji shouji" }},   #条件1\n        { "match": { "desc": "chiji shouji" }}\t\t#条件2\n      ]\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("假设上述查询的执行得到以下结果，best_fields策略强调hits中单个字段的评分权重。打个比方：每一条hit代表一个奥运会的参加国，每个字段代表该国家的参赛运动员，但是限定每个国家只能派出一名运动员，其成绩就代表该国家的成绩，最后以该运动员的成绩代表国家进行排名。所谓“best_fields”就是说最好的字段嘛，用最好的字段的评分代表当前文档的最终评分，即侧重字段权重。在这个例子中，多个查询条件并未起到关键性作用。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"_6-15-2-tie-breaker参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-2-tie-breaker参数"}},[s._v("#")]),s._v(" 6.15.2 tie_breaker参数")]),s._v(" "),a("p",[s._v("在best_fields策略中给其他剩余字段设置的权重值，取值范围 [0,1]，其中 0 代表使用 dis_max 最佳匹配语句的普通逻辑，1表示所有匹配语句同等重要。最佳的精确值需要根据数据与查询调试得出，但是合理值应该与零接近（处于 0.1 - 0.4 之间），这样就不会颠覆 dis_max （Disjunction Max Query）最佳匹配性质的根本。")]),s._v(" "),a("p",[s._v("在上面例子中，如果一个国家仅仅由一个运动员的成绩来决定，显然不是很有代表性，因为一个国家可能整体实力很弱，但是有一个运动员（假设叫做阿尔法）就是特别的出类拔萃，世界第一！但是其他人都很弱，这时他就不能代表整个国家的实力了。反而可能另一个国家，虽然国内成绩最好的运动员没有“阿尔法”的成绩好，但是这个国家包揽了世界的第二名到第十名，并且实力比较接近，那这样这个国家的整体实力仍然是可以排第一的。所以我们不应该让第一名完全代表一个国家的成绩，一个更好的做法是：每个国家的最终成绩由所有运动员的成绩经过计算得来，每个运动员的成绩都可能影响总成绩，但是这个国家排名第一的运动员的成绩占的权重最大。这种做法更容易凸显一个国家的整体实力，这个整体实力就等价于我们搜索结果排名中的相关度。")]),s._v(" "),a("p",[a("strong",[s._v("用法：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "dis_max": {\n      "queries": [\n        { "match": { "name": "super charge" }},\n        { "match": { "desc": "super charge" }}\n      ],\n      "tie_breaker": 0.3 # 代表次要评分字段的权重是 0.3\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("类比")])]),s._v(" "),a("p",[a("strong",[s._v("以下两个查询等价")])]),s._v(" "),a("p",[s._v("查询1")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "dis_max": {\n      "queries": [\n        {\n          "match": {\n            "name": {\n              "query": "chiji shouji",\n              "boost": 2\t# name字段评分两倍权重\n            }\n          }\n        },\n        {\n          "match": {\n            "desc": "chiji shouji"\n          }\n        }\n      ],\n      "tie_breaker": 0.3\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("查询2")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "multi_match" : {\n      "query":      "super charge",\n      "type":       "best_fields", // 默认\n      "fields":     [ "name^2", "desc" ], # name字段评分两倍权重\n      "tie_breaker": 0.3\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"_6-15-3-most-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-3-most-fields"}},[s._v("#")]),s._v(" 6.15.3 most_fields")]),s._v(" "),a("p",[a("strong",[s._v("概念")])]),s._v(" "),a("p",[s._v("侧重于“查询”维度，单个查询条件的得分权重大，如果一次请求中，对于同一个doc，匹配到某个term的field越多，则越优先排序。")]),s._v(" "),a("p",[a("strong",[s._v("类比")])]),s._v(" "),a("p",[a("strong",[s._v("以下两个查询脚本等价")])]),s._v(" "),a("p",[s._v("查询1：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 下面查询中包含两个查询条件\nGET product/_search\n{\n  "query": {\n    "bool": {\n      "should": [\n        {\n          "match": {\n            "name": "chiji shouji"\n          }\n        },\n        {\n          "match": {\n            "desc": "chiji shouji"\n          }\n        }\n      ]\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("查询2")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET product/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "chiji shouji",\n      "type": "most_fields",\n      "fields": [\n        "name",\n        "desc"\n      ]\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"_6-15-4-cross-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-15-4-cross-fields"}},[s._v("#")]),s._v(" 6.15.4 cross_fields")]),s._v(" "),a("p",[s._v("**注意：**理解“cross_fields”的概念之前，需要对ES的评分规则有基本的了解，戳："),a("a",{attrs:{href:"https://www.yuque.com/u1230450/hg3b38/tgapcl",target:"_blank",rel:"noopener noreferrer"}},[s._v("评分"),a("OutboundLink")],1),s._v("，学习ES评分的基本原理")]),s._v(" "),a("p",[a("strong",[s._v("概念")])]),s._v(" "),a("p",[s._v("将任何与任一查询匹配的文档作为结果返回，但只将最佳匹配的评分作为查询的评分结果返回")]),s._v(" "),a("p",[a("strong",[s._v("用法")])]),s._v(" "),a("p",[s._v("以下查询语义：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("吴")]),s._v(" 必须包含在 name.姓 或者 name.名 里")]),s._v(" "),a("li",[a("code",[s._v("磊")]),s._v(" 必须包含在 name.姓 或者 name.名 里")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[s._v("GET teacher/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"multi_match"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"query"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"吴磊"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross_fields"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"fields"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name.姓"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name.名"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"operator"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"or"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("strong",[s._v("案例")])]),s._v(" "),a("p",[s._v("假设我们有如下“teacher”索引，索引中包含了“name”字段，包含“姓”和“名”两个field（案例中使用中文为方便观察和理解，切勿在生产环境中使用中文命名，一定要遵循命名规范）。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /teacher/_bulk\n{\n  "index": {\n    "_id": "1"\n  }\n}{\n  "name": {\n    "姓": "吴",\n    "名": "磊"\n  }\n}{\n  "index": {\n    "_id": "2"\n  }\n}    {\n  "name": {\n    "姓": "连",\n    "名": "鹏鹏"\n  }\n}\n....\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("我们执行以上代码创建teacher索引，并且执行以下查询语句")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 语义： 默认分词器的对“吴磊”的分词结果为“吴”和“磊”\n# name.姓 中包含 “吴” 或者 “磊”  \n# OR  \n# name.名 中包含 “吴” 或者 “磊” \n# 如果设置了"operator": "and"，则中间 OR 的关系变为 \nANDGET teacher/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "吴 磊",\n      "type": "most_fields",\n      "fields": [\n        "name.姓",\n        "name.名"\n      ]\n      // ,"operator": "and"    \n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("根据上面查询的语义，我们期望的结果是：姓为“吴”并且名为“磊”的doc评分最高，然而结果却如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "took": 3,\n  "timed_out": false,\n  "_shards": {\n    "total": 1,\n    "successful": 1,\n    "skipped": 0,\n    "failed": 0\n  },\n  "hits": {\n    "total": {\n      "value": 9,\n      "relation": "eq"\n    },\n    "max_score": 2.4548545,\n    "hits": [\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "8",\n        "_score": 2.4548545,\n        "_source": {\n          "name": {\n            "姓": "帅",\n            "名": "吴"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "1",\n        "_score": 2.03873,\n        "_source": {\n          "name": {\n            "姓": "吴",\n            "名": "磊"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "5",\n        "_score": 1.060872,\n        "_source": {\n          "name": {\n            "姓": "吴",\n            "名": "亦凡"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "6",\n        "_score": 1.060872,\n        "_source": {\n          "name": {\n            "姓": "吴",\n            "名": "京"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "7",\n        "_score": 1.060872,\n        "_source": {\n          "name": {\n            "姓": "吴",\n            "名": "彦祖"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "9",\n        "_score": 0.977858,\n        "_source": {\n          "name": {\n            "姓": "连",\n            "名": "磊"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "10",\n        "_score": 0.977858,\n        "_source": {\n          "name": {\n            "姓": "周",\n            "名": "磊"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "11",\n        "_score": 0.977858,\n        "_source": {\n          "name": {\n            "姓": "张",\n            "名": "磊"\n          }\n        }\n      },\n      {\n        "_index": "teacher",\n        "_type": "_doc",\n        "_id": "12",\n        "_score": 0.977858,\n        "_source": {\n          "name": {\n            "姓": "马",\n            "名": "磊"\n          }\n        }\n      }\n    ]\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br")])]),a("p",[s._v("上面结果显示，名叫“帅磊”的doc排在了最前面，即便我们使用best_fields策略结果也是“帅磊”评分最高，因为导致这个结果的原因和使用哪种搜索策略并无关系。这些然不是我们希望的结果。那么导致上述问题的原因是什么呢？看以下三条基本的评分规则：")]),s._v(" "),a("p",[a("strong",[s._v("评分基本规则：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("词频（TF term frequency ）：关键词在每个doc中出现的次数，词频越高，评分越高")])]),s._v(" "),a("li",[a("p",[s._v("反词频（ IDF inverse doc frequency）：关键词在整个索引中出现的次数，反词频越高，评分越低")])]),s._v(" "),a("li",[a("p",[s._v("每个doc的长度，越长相关度评分越低")])])]),s._v(" "),a("p",[a("strong",[s._v("分析结果：")])]),s._v(" "),a("p",[s._v("在上述案例中，“吴磊”作为预期结果，其中“吴”字作为姓氏是非常常见的，“磊”作为名也是非常常见的。反应在索引中，他们的IDF都是非常高的，而反词频越高则评分越低，因此吴磊在索引中的IDF评分则会很低。")]),s._v(" "),a("p",[s._v("而“帅磊”中“帅”作为姓氏却是非常少见的，因此IDF的得分就很高。在词频相同的情况下就会导致以上不符合常理的搜索预期。")]),s._v(" "),a("p",[a("strong",[s._v("解决办法：")])]),s._v(" "),a("p",[s._v("为了避免某一个字段的词频或者反词频对结果产生巨大影响，我们需要把“姓”和“名”作为一个整体来查询，体现在代码上即：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 吴必须包含在 name.姓 或者 name.名里\n# 并且#磊 必须包含在 name.姓 或者 name.名里\nGET teacher/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "吴磊",\n      "type": "cross_fields",\n      "fields": [\n        "name.姓",\n        "name.名"\n      ],\n      "operator": "and"\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_6-16-地理位置搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-地理位置搜索"}},[s._v("#")]),s._v(" 6.16 地理位置搜索")]),s._v(" "),a("h4",{attrs:{id:"_6-16-1-两种数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-1-两种数据类型"}},[s._v("#")]),s._v(" 6.16.1 两种数据类型")]),s._v(" "),a("p",[a("strong",[s._v("geo_point：")])]),s._v(" "),a("p",[a("strong",[s._v("概念")]),s._v("：经纬度坐标，只支持WGS84坐标系，坐标范围Lat值为[-90,90]，Lon为[-180,180]")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("latitude：维度  缩写：lat")])]),s._v(" "),a("li",[a("p",[s._v("longitude：经度  缩写：lon")])]),s._v(" "),a("li",[a("p",[s._v("ignore_malformed：则忽略格式错误的地理位置。如果"),a("code",[s._v("false")]),s._v("（默认）")])])]),s._v(" "),a("p",[a("strong",[s._v("五种存储方式")])]),s._v(" "),a("p",[a("strong",[s._v("Geo_shape")])]),s._v(" "),a("p",[a("strong",[s._v("概念")]),s._v("：ES的特殊类型之一，用来描述复杂的几何图形的类型，比如点、线、面，多边形等二维几何模型。")]),s._v(" "),a("ul",[a("li",[s._v("GeoJSON：GeoJSON是一种用于编码各种地理数据结构的格式，支持以下几种几何类型：\n"),a("ul",[a("li",[s._v("Point：点")]),s._v(" "),a("li",[s._v("LineString：线段")]),s._v(" "),a("li",[s._v("Polygon：多边形")]),s._v(" "),a("li",[s._v("MultiPoint：多点")]),s._v(" "),a("li",[s._v("MultiLineString：多线段")]),s._v(" "),a("li",[s._v("MultiPolygon：多边形集合")]),s._v(" "),a("li",[s._v("Feature：具有其他属性的对象")])])]),s._v(" "),a("li",[s._v("WKT（Well-Known Text）：POINT(125.6 10.1)")])]),s._v(" "),a("p",[a("strong",[s._v("GeoJSON（OGC）和WKT到Elasticsearch类型的映射关系")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("GeoJSON类型")]),s._v(" "),a("th",[s._v("WKT类型")]),s._v(" "),a("th",[s._v("Elasticsearch类型")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[s._v("Point")])]),s._v(" "),a("td",[s._v("POINT")]),s._v(" "),a("td",[s._v("point")]),s._v(" "),a("td",[s._v("单个地理坐标。注意：Elasticsearch仅使用WGS-84坐标。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("LineString")])]),s._v(" "),a("td",[s._v("LINESTRING")]),s._v(" "),a("td",[s._v("linestring")]),s._v(" "),a("td",[s._v("给定两个或两个以上点的任意线。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("Polygon")])]),s._v(" "),a("td",[s._v("POLYGON")]),s._v(" "),a("td",[s._v("polygon")]),s._v(" "),a("td",[s._v("一个封闭的多边形，其第一个点和最后一个点必须匹配，因此需要n + 1顶点创建一个带n边的多边形和一个最小的4顶点。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("MultiPoint")])]),s._v(" "),a("td",[s._v("MULTIPOINT")]),s._v(" "),a("td",[s._v("multipoint")]),s._v(" "),a("td",[s._v("一组未连接但可能相关的点。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("MultiLineString")])]),s._v(" "),a("td",[s._v("MULTILINESTRING")]),s._v(" "),a("td",[s._v("multilinestring")]),s._v(" "),a("td",[s._v("单独的线串数组。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("MultiPolygon")])]),s._v(" "),a("td",[s._v("MULTIPOLYGON")]),s._v(" "),a("td",[s._v("multipolygon")]),s._v(" "),a("td",[s._v("一组单独的多边形。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("GeometryCollection")])]),s._v(" "),a("td",[s._v("GEOMETRYCOLLECTION")]),s._v(" "),a("td",[s._v("geometrycollection")]),s._v(" "),a("td",[s._v("与JSON形状相似的GeoJSON形状， multi*但可以同时存在多种类型（例如，Point和LineString）。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("N/A")])]),s._v(" "),a("td",[s._v("BBOX")]),s._v(" "),a("td",[s._v("envelope")]),s._v(" "),a("td",[s._v("通过仅指定左上和右下点指定的边界矩形。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("N/A")])]),s._v(" "),a("td",[s._v("N/A")]),s._v(" "),a("td",[s._v("circle")]),s._v(" "),a("td",[s._v("由中心点和半径指定的圆，单位为，默认为METERS。")])])])]),s._v(" "),a("h4",{attrs:{id:"_6-16-2-四种查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-2-四种查询"}},[s._v("#")]),s._v(" 6.16.2 四种查询")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("矩形查询（geo_bounding box）")]),s._v(" "),a("p",[s._v("概念：在同一个平面内，两个点确定一个矩形，搜索矩形内的坐标。")]),s._v(" "),a("blockquote",[a("p",[s._v("top_left：矩形左上点坐标")]),s._v(" "),a("p",[s._v("bottom_right：矩形右上角表")])])]),s._v(" "),a("li",[a("p",[s._v("半径查询（geo_distance）")]),s._v(" "),a("p",[s._v("概念：以某个点为圆心查找指定半径的圆内的坐标。")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("distance：距离单位，默认是米，支持以下选项\n"),a("ul",[a("li",[s._v("Mile（英里）：mi 或者 miles")]),s._v(" "),a("li",[s._v("Yard（码）：yd  或者 yards")]),s._v(" "),a("li",[s._v("Feet（英尺）：ft 或者 feet")]),s._v(" "),a("li",[s._v("Inch（英寸）："),a("code",[s._v("in")]),s._v(" 或者 inch")]),s._v(" "),a("li",[s._v("Kilometer（公里）："),a("code",[s._v("km")]),s._v(" 或者 kilometers")]),s._v(" "),a("li",[s._v("Meter（米）：m 或者 meters")]),s._v(" "),a("li",[s._v("Centimeter（厘米）："),a("code",[s._v("cm")]),s._v(" 或者 centimeters")]),s._v(" "),a("li",[s._v("Millimeter（毫米）： mm  或者 millimeters")]),s._v(" "),a("li",[s._v("Nautical mile（海里）： NM ,  nmi , 或者 nauticalmiles")])])]),s._v(" "),a("li",[s._v("distance_type：计算距离的方式\n"),a("ul",[a("li",[s._v("arc（默认值）：更准确，但是速度慢")]),s._v(" "),a("li",[s._v("plane：（更快，但在长距离和极点附近不准确）")])])])])])]),s._v(" "),a("li",[a("p",[s._v("多边形（geo_polygon）")]),s._v(" "),a("p",[s._v("概念：查找给定多个点连成的多边形内的坐标。")])]),s._v(" "),a("li",[a("p",[s._v("特殊几何图形（geo_shape）")]),s._v(" "),a("p",[s._v("概念：支持指定几何图形相交、包含或是不相交等图形检索")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("Inline Shape Definition：内联形状")]),s._v(" "),a("li",[s._v("Pre-Indexed Shape：预定义形状\n"),a("ul",[a("li",[a("code",[s._v("id")]),s._v("- 包含预索引形状的文档ID。")]),s._v(" "),a("li",[a("code",[s._v("index")]),s._v("- 索引的名称，其中预索引形状为：默认形状。")]),s._v(" "),a("li",[s._v("routing- 非必须。")]),s._v(" "),a("li",[a("code",[s._v("path")]),s._v("- 包含预索引形状的指定路径，默认形状。")])])]),s._v(" "),a("li",[s._v("Spatial Relations：空间关系\n"),a("ul",[a("li",[s._v("INTERSECTS"),a("code",[s._v("- (default) Return all documents whose")]),s._v("shape"),a("code",[s._v("field intersects the query geometry。")])]),s._v(" "),a("li",[s._v("DISJOINT - Return all documents whose "),a("code",[s._v("shape")]),s._v(" field has nothing in common with the query geometry")]),s._v(" "),a("li",[s._v("WITHIN - Return all documents whose "),a("code",[s._v("shape")]),s._v(" field is within the query geometry。")]),s._v(" "),a("li",[s._v("CONTAINS- Return all documents whose "),a("code",[s._v("shape")]),s._v(" field contains the query geometry。")])])])])])])]),s._v(" "),a("h4",{attrs:{id:"_6-16-3-地理几何分类-geo-shape-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-3-地理几何分类-geo-shape-type"}},[s._v("#")]),s._v(" 6.16.3 地理几何分类（geo_shape type）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("点（point）")])]),s._v(" "),a("li",[a("p",[s._v("矩形（envelope）")])]),s._v(" "),a("li",[a("p",[s._v("多边形 （polygon）")])]),s._v(" "),a("li",[a("p",[s._v("圆形（circle）")])])]),s._v(" "),a("h4",{attrs:{id:"_6-16-4-圆形处理精度解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-16-4-圆形处理精度解释"}},[s._v("#")]),s._v(" 6.16.4 圆形处理精度解释")]),s._v(" "),a("p",[s._v("表示圆的多边形的精度定义为error_distance。这种差异越小，多边形越接近理想圆。下表是旨在帮助捕获在给定不同输入的情况下圆的半径如何影响多边形的边数的表格。最小边数为4，最大为1000。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("strong",[s._v("error_distance")])]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("strong",[s._v("半径（米）")])]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("strong",[s._v("多边形的边数")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("4")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("10")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("14")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("100")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("45")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("1,000")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("141")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("10,000")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("445")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("100,000")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("1000")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-17-dsl语言高级查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-17-dsl语言高级查询"}},[s._v("#")]),s._v(" 6.17 DSL语言高级查询")]),s._v(" "),a("p",[s._v("Domain Specific Language。Elasticsearch provides a ful1 Query DSL based on JSON to define queries。")]),s._v(" "),a("p",[s._v("Elasticsearch提供了基于JSON的DSL来定义查询。"),a("strong",[s._v("DSL由叶子查询子句和复合查询子句两种子句组成")]),s._v("。")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/11.png",alt:""}})]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("2.无查询条件")])]),s._v(" "),a("p",[s._v("无查询条件是查询所有，默认是查询所有的，或者使用match_all表示所有")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GET /es_db/_doc/_search\n{\n"query":{\n"match_all":{}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("3.有查询条件")])]),s._v(" "),a("p",[a("strong",[s._v("3.1 叶子条件查询(单字段查询条件)")])]),s._v(" "),a("p",[a("strong",[s._v("3.1.1 模糊匹配")])]),s._v(" "),a("p",[s._v("模糊匹配主要是针对文本类型的字段，文本类型的字段会对内容进行分词，对查询时，也会对搜索条件进行分词，然后通过倒排索引查找到匹配的数据，模糊匹配主要通过match等参数来实现")]),s._v(" "),a("ul",[a("li",[s._v("match : 通过match关键词模糊匹配条件内容")]),s._v(" "),a("li",[s._v("prefix : 前缀匹配")]),s._v(" "),a("li",[s._v("regexp : 通过正则表达式来匹配数据")])]),s._v(" "),a("p",[a("strong",[s._v("match的复杂用法")])]),s._v(" "),a("p",[s._v("match条件还支持以下参数：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("query : 指定匹配的值")])]),s._v(" "),a("li",[a("p",[s._v("operator : 匹配条件类型")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("and : 条件分词后都要匹配")]),s._v(" "),a("li",[s._v("or : 条件分词后有一个匹配即可(默认)")])])]),s._v(" "),a("li",[a("p",[s._v("minmum_should_match : 指定最小匹配的数量")])])]),s._v(" "),a("p",[a("strong",[s._v("3.1.2 精确匹配")])]),s._v(" "),a("ul",[a("li",[s._v("term : 单个条件相等")]),s._v(" "),a("li",[s._v("terms : 单个字段属于某个值数组内的值")]),s._v(" "),a("li",[s._v("range : 字段属于某个范围内的值")]),s._v(" "),a("li",[s._v("exists : 某个字段的值是否存在")]),s._v(" "),a("li",[s._v("ids : 通过ID批量查询")])]),s._v(" "),a("p",[a("strong",[s._v("3.2 组合条件查询(多条件查询)")])]),s._v(" "),a("p",[s._v("组合条件查询是将叶子条件查询语句进行组合而形成的一个完整的查询条件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("bool : 各条件之间有and,or或not的关系")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("must : 各个条件都必须满足，即各条件是and的关系")]),s._v(" "),a("li",[s._v("should : 各个条件有一个满足即可，即各条件是or的关系")]),s._v(" "),a("li",[s._v("must_not : 不满足所有条件，即各条件是not的关系")]),s._v(" "),a("li",[s._v("filter : 不计算相关度评分，它不计算_score即相关度评分，效率更高")])])]),s._v(" "),a("li",[a("p",[s._v("constant_score : 不计算相关度评分")])])]),s._v(" "),a("p",[a("strong",[s._v("must/filter/shoud/must_not")]),s._v(" 等的子条件是通过 "),a("strong",[s._v("term/terms/range/ids/exists/match")]),s._v(" 等叶子条件为参数的")]),s._v(" "),a("p",[s._v("注：以上参数，当只有一个搜索条件时，must等对应的是一个对象，当是多个条件时，对应的是一个数组")]),s._v(" "),a("p",[a("strong",[s._v("3.3 连接查询(多文档合并查询)")])]),s._v(" "),a("ul",[a("li",[s._v("父子文档查询：parent/child")]),s._v(" "),a("li",[s._v("嵌套文档查询: nested")])]),s._v(" "),a("p",[s._v("3.4 DSL查询语言中存在两种：查询DSL（query DSL）和过滤DSL（filter DSL）")]),s._v(" "),a("p",[s._v("它们两个的区别如下图：")]),s._v(" "),a("p",[s._v("​    "),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/es/21.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("query DSL")])]),s._v(" "),a("p",[s._v("在查询上下文中，查询会回答这个问题——“这个文档匹不匹配这个查询，它的相关度高么？”")]),s._v(" "),a("p",[s._v("如何验证匹配很好理解，如何计算相关度呢？ES中索引的数据都会存储一个_score分值，分值越高就代表越匹配。另外关于某个搜索的分值计算还是很复杂的，因此也需要一定的时间。")]),s._v(" "),a("p",[a("strong",[s._v("filter DSL")])]),s._v(" "),a("p",[s._v("在过滤器上下文中，查询会回答这个问题——“这个文档匹不匹配？”")]),s._v(" "),a("p",[s._v("答案很简单，是或者不是。它不会去计算任何分值，也不会关心返回的排序问题，因此效率会高一点。")]),s._v(" "),a("p",[s._v("过滤上下文 是在使用filter参数时候的执行环境，比如在bool查询中使用must_not或者filter")]),s._v(" "),a("p",[s._v("另外，经常使用过滤器，ES会自动的缓存过滤器的内容，这对于查询来说，会提高很多性能。")]),s._v(" "),a("p",[s._v("一些过滤的情况：")]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("3.5 Query方式查询:案例")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("根据名称精确查询姓名 term, term查询不会对字段进行分词查询，会采用精确匹配")]),s._v(" "),a("p",[s._v("注意: 采用term精确查询, 查询字段映射类型属于为keyword.")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query": {\n"term": {\n"name": "admin"\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SQL: select * from student where name = 'admin'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("根据备注信息模糊查询 match, match会根据该字段的分词器，进行分词查询")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"from": 0,\n"size": 2, \n"query": {\n"match": {\n"address": "广州"\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SQL: select * from user where address like '%广州%' limit 0, 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("多字段模糊匹配查询与精准查询 multi_match")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query":{\n"multi_match":{\n"query":"张三",\n"fields":["address","name"]\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SQL: select * from student  where name like '%张三%' or address like '%张三%' \t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("ul",[a("li",[s._v("未指定字段条件查询 query_string , 含 AND 与 OR 条件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query":{\n"query_string":{\n"query":"广州 OR 长沙"\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("指定字段条件查询 query_string , 含 AND 与 OR 条件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query":{\n"query_string":{\n"query":"admin OR 长沙",\n"fields":["name","address"]\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("范围查询")])]),s._v(" "),a("p",[s._v("注：json请求字符串中部分字段的含义")]),s._v(" "),a("p",[s._v("​\trange：范围关键字")]),s._v(" "),a("p",[s._v("​\tgte 大于等于")]),s._v(" "),a("p",[s._v("​\tlte  小于等于")]),s._v(" "),a("p",[s._v("​\tgt 大于")]),s._v(" "),a("p",[s._v("​\tlt 小于")]),s._v(" "),a("p",[s._v("​\tnow 当前时间")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query" : {\n"range" : {\n"age" : {\n"gte":25,\n"lte":28\n}\n}\n}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SQL: select * from user where age between 25 and 28\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("ul",[a("li",[s._v("分页、输出字段、排序综合查询")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query" : {\n"range" : {\n"age" : {\n"gte":25,\n"lte":28\n}\n}\n},\n"from": 0,\n"size": 2,\n"_source": ["name", "age", "book"],\n"sort": {"age":"desc"}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("3.6 Filter过滤器方式查询，它的查询不会计算相关性分值，也不会对结果进行排序, 因此效率会高一点，查询的结果可以被缓存。")])]),s._v(" "),a("p",[s._v("Filter Context 对数据进行过滤")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('POST /es_db/_doc/_search\n{\n"query" : {\n"bool" : {\n"filter" : {\n"term":{\n"age":25\n}\n}\n}\n}\n}\t\t\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("​")]),s._v(" "),a("p",[a("strong",[s._v("总结:")])]),s._v(" "),a("p",[a("strong",[s._v("1. match")])]),s._v(" "),a("p",[s._v('match：模糊匹配，需要指定字段名，但是输入会进行分词，比如"hello world"会进行拆分为hello和world，然后匹配，如果字段中包含hello或者world，或者都包含的结果都会被查询出来，也就是说match是一个部分匹配的模糊查询。查询条件相对来说比较宽松。')]),s._v(" "),a("p",[a("strong",[s._v("2. term")])]),s._v(" "),a("p",[s._v('term:  这种查询和match在有些时候是等价的，比如我们查询单个的词hello，那么会和match查询结果一样，但是如果查询"hello world"，结果就相差很大，因为这个输入不会进行分词，就是说查询的时候，是查询字段分词结果中是否有"hello world"的字样，而不是查询字段中包含"hello world"的字样。当保存数据"hello world"时，elasticsearch会对字段内容进行分词，"hello world"会被分成hello和world，不存在"hello world"，因此这里的查询结果会为空。这也是term查询和match的区别。')]),s._v(" "),a("p",[a("strong",[s._v("3. match_phase")])]),s._v(" "),a("p",[s._v("match_phase：会对输入做分词，但是需要结果中也包含所有的分词，而且"),a("strong",[s._v("顺序要求一样")]),s._v('。以"hello world"为例，要求结果中必须包含hello和world，而且'),a("strong",[s._v("还要求他们是连着的，顺序也是固定的")]),s._v("，hello that world不满足，world hello也不满足条件。")]),s._v(" "),a("p",[a("strong",[s._v("4. query_string")])]),s._v(" "),a("p",[s._v("query_string：和match类似，但是match需要指定字段名，"),a("strong",[s._v("query_string是在所有字段中搜索")]),s._v("，范围更广泛。")]),s._v(" "),a("h2",{attrs:{id:"_7-分词器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-分词器"}},[s._v("#")]),s._v(" 7 分词器")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("normalization：文档规范化,提高召回率")])]),s._v(" "),a("li",[a("p",[s._v("字符过滤器（character filter）：分词之前的预处理，过滤无用字符")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-htmlstrip-charfilter.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("HTML Strip Character Filter"),a("OutboundLink")],1),s._v("：html_strip\n"),a("ul",[a("li",[s._v("参数：escaped_tags  需要保留的html标签")])])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-mapping-charfilter.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mapping Character Filter"),a("OutboundLink")],1),s._v("：type mapping")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pattern-replace-charfilter.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pattern Replace Character Filter"),a("OutboundLink")],1),s._v("：type pattern_replace")])])])]),s._v(" "),a("li",[a("p",[s._v("令牌过滤器（token filter）：停用词、时态转换、大小写转换、同义词转换、语气词处理等。")]),s._v(" "),a("p",[s._v("比如：has=>have  him=>he  apples=>apple  the/oh/a=>干掉")])]),s._v(" "),a("li",[a("p",[s._v("分词器（tokenizer）：切词")])]),s._v(" "),a("li",[a("p",[s._v("常见分词器：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("standard analyzer：默认分词器，中文支持的不理想，会逐字拆分。")]),s._v(" "),a("li",[s._v("pattern tokenizer：以正则匹配分隔符，把文本拆分成若干词项。")]),s._v(" "),a("li",[s._v("simple pattern tokenizer：以正则匹配词项，速度比pattern tokenizer快。")]),s._v(" "),a("li",[s._v("whitespace analyzer：以空白符分隔\tTim_cookie")])])])]),s._v(" "),a("li",[a("p",[s._v("自定义分词器：custom analyzer")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("char_filter：内置或自定义字符过滤器 。")]),s._v(" "),a("li",[s._v("token filter：内置或自定义token filter 。")]),s._v(" "),a("li",[s._v("tokenizer：内置或自定义分词器。")])])])]),s._v(" "),a("li",[a("p",[s._v("中文分词器：ik分词")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("安装和部署")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("ik下载地址：https://github.com/medcl/elasticsearch-analysis-ik")]),s._v(" "),a("li",[s._v("Github加速器：https://github.com/fhefh2015/Fast-GitHub")]),s._v(" "),a("li",[s._v("创建插件文件夹 cd your-es-root/plugins/ && mkdir ik")]),s._v(" "),a("li",[s._v("将插件解压缩到文件夹 your-es-root/plugins/ik")]),s._v(" "),a("li",[s._v("重新启动es")])])])]),s._v(" "),a("li",[a("p",[s._v("IK文件描述")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("IKAnalyzer.cfg.xml：IK分词配置文件")])]),s._v(" "),a("li",[a("p",[s._v("主词库：main.dic")])]),s._v(" "),a("li",[a("p",[s._v("英文停用词：stopword.dic，不会建立在倒排索引中")])]),s._v(" "),a("li",[a("p",[s._v("特殊词库：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("quantifier.dic：特殊词库：计量单位等")])]),s._v(" "),a("li",[a("p",[s._v("suffix.dic：特殊词库：行政单位")])]),s._v(" "),a("li",[a("p",[s._v("surname.dic：特殊词库：百家姓")])]),s._v(" "),a("li",[a("p",[s._v("preposition：特殊词库：语气词")])]),s._v(" "),a("li",[a("p",[s._v("自定义词库：网络词汇、流行词、自造词等")])])])])])])]),s._v(" "),a("li",[a("p",[s._v("ik提供的两种analyzer")]),s._v(" "),a("blockquote",[a("p",[s._v("ik_max_word会将文本做最细粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,中华人民,中华,华人,人民共和国,人民,人,民,共和国,共和,和,国国,国歌”，会穷尽各种可能的组合，适合 Term Query；")]),s._v(" "),a("p",[s._v("ik_smart: 会做最粗粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,国歌”，适合 Phrase 查询。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("热更新")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("远程词库文件")]),s._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[s._v("优点：上手简单")])]),s._v(" "),a("li",[a("p",[s._v("缺点：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("词库的管理不方便，要操作直接操作磁盘文件，检索页很麻烦")])]),s._v(" "),a("li",[a("p",[s._v("文件的读写没有专门的优化性能不好")])]),s._v(" "),a("li",[a("p",[s._v("多一层接口调用和网络传输")]),s._v(" "),a("p",[s._v("解决方案：写一个远程项目提供热更新词。通过ES配置文件中指定远程调用接口，即可ES实时刷新远程接口进行热更新。远程项目代码示例：https://gitee.com/nylg/picture/tree/master/file/iktest")]),s._v(" "),a("p",[s._v("![image-20211026150838579]("),a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026150838579.png",alt:""}})])])])])])])]),s._v(" "),a("li",[a("p",[s._v("ik访问数据库")]),s._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[s._v("MySQL驱动版本兼容性")]),s._v(" "),a("ol",[a("li",[s._v("https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-versions.html")]),s._v(" "),a("li",[s._v("https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-versions.html")])])]),s._v(" "),a("li",[a("p",[s._v("驱动下载地址")]),s._v(" "),a("ol",[a("li",[s._v("https://mvnrepository.com/artifact/mysql/mysql-connector-java")])]),s._v(" "),a("p",[s._v("解决方案：重写IK源码，添加MySQL连接步骤 https://gitee.com/nylg/picture/tree/master/file/elasticsearch-analysis-ik-7.10.0")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/elastic/image-20211026143529692.png",alt:""}})]),s._v(" "),a("p",[s._v("然后maven package打包成jar后解压，放到ES节点的plugins目录下，重命名jar解压后的文件名为ik，重启ES节点即可生效，以后更新MySQL库即实现热更新词库。注意IK分词器的MySQL连接驱动版本问题")])])])])])])])])])]),s._v(" "),a("h2",{attrs:{id:"_8-es客户端-elasticsearch-clients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-es客户端-elasticsearch-clients"}},[s._v("#")]),s._v(" 8 ES客户端：Elasticsearch Clients")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th"),s._v(" "),a("th",[a("strong",[s._v("Java API")])]),s._v(" "),a("th",[a("strong",[s._v("Low Level Client")])]),s._v(" "),a("th",[a("strong",[s._v("High Level Client")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[s._v("优点")])]),s._v(" "),a("td",[s._v("性能略好")]),s._v(" "),a("td",[s._v("安全，易用，轻耦合，轻依赖，兼容性极好")]),s._v(" "),a("td",[s._v("功能全，松耦合，接口稳定")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("缺点")])]),s._v(" "),a("td",[s._v("重依赖     紧耦合     不安全")]),s._v(" "),a("td",[s._v("功能少")]),s._v(" "),a("td",[s._v("性能略逊于Java API，兼容性中等")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("兼容性")])]),s._v(" "),a("td",[s._v("主版本必须相同     次要版本最好相同")]),s._v(" "),a("td",[s._v("兼容所有版本")]),s._v(" "),a("td",[s._v("主版本必须相同，次要版本向后兼容")])])])]),s._v(" "),a("h3",{attrs:{id:"语言无关性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言无关性"}},[s._v("#")]),s._v(" 语言无关性")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Java REST Client")])]),s._v(" "),a("li",[a("strong",[s._v("Java API")])]),s._v(" "),a("li",[a("strong",[s._v("Python API")])]),s._v(" "),a("li",[a("strong",[s._v("Go API")])]),s._v(" "),a("li",[a("strong",[s._v(".Net API")])]),s._v(" "),a("li",[s._v("PHP API")]),s._v(" "),a("li",[s._v("JavaScripts API")]),s._v(" "),a("li",[s._v("Ruby API")]),s._v(" "),a("li",[s._v("Perl API")]),s._v(" "),a("li",[s._v("Eland")]),s._v(" "),a("li",[s._v("Rust")]),s._v(" "),a("li",[s._v("Community Contributed Clients")])]),s._v(" "),a("h3",{attrs:{id:"java-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-api"}},[s._v("#")]),s._v(" Java API")]),s._v(" "),a("p",[a("strong",[s._v("生命周期（生卒年：ES 0.9 - ES 7.x）")])]),s._v(" "),a("p",[a("code",[s._v("Java API")]),s._v("使用的客户端名称叫"),a("code",[s._v("TransportClient")]),s._v("，从7.0.0开始，官方已经不建议使用"),a("code",[s._v("TransportClient")]),s._v("作为ES的Java客户端了，并且从8.0会被彻底删除。")]),s._v(" "),a("p",[a("strong",[s._v("注意事项")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("TransportClient")]),s._v(" 使用"),a("code",[s._v("transport")]),s._v("模块（"),a("strong",[s._v("9300端口")]),s._v("）远程连接到 Elasticsearch 集群，客户端并不加入集群，而是通过获取单个或者多个transport地址来以轮询的方式与他们通信。")]),s._v(" "),a("li",[a("code",[s._v("TransportClient")]),s._v("使用"),a("code",[s._v("transport")]),s._v("协议与Elasticsearch节点通信，如果客户端的版本和与其通信的ES实例的版本不同，就会出现兼容性问题。而"),a("code",[s._v("low-level REST")]),s._v("使用的是HTTP协议，可以与任意版本ES集群通信。"),a("code",[s._v("high-level REST")]),s._v("是基于"),a("code",[s._v("low-level REST")]),s._v("的。")])]),s._v(" "),a("p",[a("strong",[s._v("Maven依赖")])]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.elasticsearch.client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("transport"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("7.12.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("使用")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建客户端连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransportClient")]),s._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PreBuiltTransportClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Settings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EMPTY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTransportAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransportAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InetAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTransportAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransportAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InetAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关闭客户端")]),s._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("嗅探器")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Settings")]),s._v(" settings "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Settings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client.transport.sniff"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransportClient")]),s._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PreBuiltTransportClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("Java REST Client")]),s._v("："),a("code",[s._v("RestClient")]),s._v(" 是线程安全的，"),a("code",[s._v("RestClient")]),s._v("使用 Elasticsearch 的 HTTP 服务，默认为"),a("code",[s._v("9200")]),s._v("端口，这一点和"),a("code",[s._v("transport client")]),s._v("不同。")]),s._v(" "),a("p",[a("strong",[s._v("生命周期（ES 5.0.0-alpha4至今）")])]),s._v(" "),a("h3",{attrs:{id:"java-low-level-rest-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-low-level-rest-client"}},[s._v("#")]),s._v(" Java Low-level REST client")]),s._v(" "),a("p",[s._v("第一个 5.0.0 版 Java REST 客户端，之所以称为低级客户端，是因为它几乎没有帮助 Java 用户构建请求或解析响应。它处理请求的路径和查询字符串构造，但它将 JSON 请求和响应主体视为必须由用户处理的不透明字节数组。")]),s._v(" "),a("p",[a("strong",[s._v("特点")])]),s._v(" "),a("ul",[a("li",[s._v("与任何 Elasticsearch 版本兼容\n"),a("ul",[a("li",[s._v("ES 5.0.0只是发布第一个"),a("code",[s._v("Java Low-level REST client")]),s._v("时的ES版本（2016年），不代表其向前只兼容到5.0，"),a("code",[s._v("Java Low-level REST client")]),s._v("基于Apache HTTP 客户端，它允许使用 HTTP 与任何版本的 Elasticsearch 集群进行通信。")])])]),s._v(" "),a("li",[s._v("最小化依赖")]),s._v(" "),a("li",[s._v("跨所有可用节点的负载平衡")]),s._v(" "),a("li",[s._v("在节点故障和特定响应代码的情况下进行故障转移")]),s._v(" "),a("li",[s._v("连接失败惩罚（是否重试失败的节点取决于它连续失败的次数；失败的尝试越多，客户端在再次尝试同一节点之前等待的时间就越长）")]),s._v(" "),a("li",[s._v("持久连接")]),s._v(" "),a("li",[s._v("请求和响应的跟踪记录")]),s._v(" "),a("li",[s._v("可选的集群节点自动发现（也称为嗅探）")])]),s._v(" "),a("p",[a("strong",[s._v("Maven依赖")])]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.elasticsearch.client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("elasticsearch-rest-client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("7.12.0"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("初始化")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),s._v(" restClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("资源释放")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("restClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("嗅探器")])]),s._v(" "),a("p",[s._v("允许从正在运行的 Elasticsearch 集群中自动发现节点并将它们设置为现有 RestClient 实例的最小库")]),s._v(" "),a("p",[a("strong",[s._v("Maven依赖")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n    <groupId>org.elasticsearch.client</groupId>\n    <artifactId>elasticsearch-rest-client-sniffer</artifactId>\n    <version>7.12.1</version>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("代码")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认每五分钟发现一次")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),s._v(" restClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),s._v(" sniffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("restClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("资源释放")])]),s._v(" "),a("p",[a("code",[s._v("Sniffer")]),s._v(" 对象应该与"),a("code",[s._v("RestClient")]),s._v(" 具有相同的生命周期，并在客户端之前关闭。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("sniffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrestClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("设置嗅探间隔")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),s._v(" restClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置嗅探间隔为60000毫秒")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),s._v(" sniffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("restClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSniffIntervalMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("失败时重启嗅探")])]),s._v(" "),a("p",[s._v("启用失败时嗅探，也就是在每次失败后，节点列表会立即更新，而不是在接下来的普通嗅探轮中更新。在这种情况下，首先需要创建一个 SniffOnFailureListener 并在 RestClient 创建时提供。此外，一旦稍后创建嗅探器，它需要与同一个 SniffOnFailureListener 实例相关联，它将在每次失败时收到通知，并使用嗅探器执行额外的嗅探轮")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SniffOnFailureListener")]),s._v(" sniffOnFailureListener "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SniffOnFailureListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),s._v(" restClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setFailureListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sniffOnFailureListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将失败侦听器设置为 RestClient实例 ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),s._v(" sniffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sniffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("restClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSniffAfterFailureDelayMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在嗅探失败时，不仅节点在每次失败后都会更新，而且还会比平常更早安排额外的嗅探轮次，默认情况下是在失败后一分钟，假设事情会恢复正常并且我们想要检测尽快地。可以在 Sniffer 创建时通过 setSniffAfterFailureDelayMillis 方法自定义所述间隔。请注意，如果如上所述未启用故障嗅探，则最后一个配置参数无效。")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsniffOnFailureListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSniffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sniffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将 Sniffer 实例设置为失败侦听器")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"java-high-level-rest-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-high-level-rest-client"}},[s._v("#")]),s._v(" Java High Level REST Client")]),s._v(" "),a("p",[s._v("生命周期（ES 5.0.0-alpha4至今）")]),s._v(" "),a("p",[s._v("Java 高级 REST 客户端在 Java 低级 REST 客户端之上运行。它的主要目标是公开 API 特定的方法，接受请求对象作为参数并返回响应对象，以便请求编组和响应解组由客户端本身处理。要求Elasticsearch版本为"),a("code",[s._v("2.0")]),s._v("或者更高。")]),s._v(" "),a("p",[a("strong",[s._v("客户端优缺点及兼容性建议")])]),s._v(" "),a("p",[s._v("阅读：https://www.elastic.co/cn/blog/benchmarking-rest-client-transport-client")]),s._v(" "),a("h3",{attrs:{id:"java-api-rest-api-优缺"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-api-rest-api-优缺"}},[s._v("#")]),s._v(" Java API / Rest API 优缺")]),s._v(" "),a("p",[a("strong",[s._v("Java API：")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("strong",[s._v("优点")]),s._v("：\n"),a("ul",[a("li",[s._v("性能略好：")]),s._v(" "),a("li",[s._v("吞吐量大："),a("code",[s._v("Transport Client")]),s._v("的批量索引吞吐量比HTTP 客户端大 4% 到 7%（实验室条件）")])])]),s._v(" "),a("li",[a("strong",[s._v("缺点")]),s._v("：\n"),a("ul",[a("li",[s._v("重依赖：并非单独意义上的“客户端”，其依赖于lucene、log4j2等，可能会产生依赖冲突")]),s._v(" "),a("li",[s._v("不安全：Java API通过传输层调用服务，不安全。")]),s._v(" "),a("li",[s._v("重耦合：和ES核心服务有共同依赖，版本兼容性要求高。")])])])])]),s._v(" "),a("p",[a("strong",[s._v("Rest API:")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("优点")])]),s._v(" "),a("ul",[a("li",[s._v("安全："),a("code",[s._v("REST API")]),s._v("使用单一的集群入口点，可以通过 HTTPS 保障数据安全性，传输层只用于内部节点到节点的通信。")]),s._v(" "),a("li",[s._v("易用：客户端只通过 REST 层而不是通过传输层调用服务，可以大大简化代码编写")])]),s._v(" "),a("p",[a("strong",[s._v("缺点")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("性能略逊于"),a("code",[s._v("Java API")]),s._v("，但是差距不大")])]),s._v(" "),a("li",[a("h5",{attrs:{id:"low-level-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#low-level-client"}},[s._v("#")]),s._v(" Low level Client")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("优点")]),s._v("：\n"),a("ul",[a("li",[s._v("轻依赖：Apache HTTP 异步客户端及其传递依赖项（Apache HTTP 客户端、Apache HTTP Core、Apache HTTP Core NIO、Apache Commons Codec 和 Apache Commons Logging）")]),s._v(" "),a("li",[s._v("兼容性强：兼容所有ES版本")])])]),s._v(" "),a("li",[a("strong",[s._v("缺点")]),s._v("：\n"),a("ul",[a("li",[s._v("功能少：显而易见，轻量化带来的必然后果")])])])])]),s._v(" "),a("li",[a("h5",{attrs:{id:"high-level-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#high-level-client"}},[s._v("#")]),s._v(" High level Client")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("优点")]),s._v("：\n"),a("ul",[a("li",[s._v("功能强大：支持所有ES的API调用。")]),s._v(" "),a("li",[s._v("松耦合：客户端和ES核心服务完全独立，无共同依赖。")]),s._v(" "),a("li",[s._v("接口稳定：REST API 比与 Elasticsearch 版本完全匹配的"),a("code",[s._v("Transport Client")]),s._v("接口稳定得多。")])])]),s._v(" "),a("li",[a("strong",[s._v("缺点")]),s._v("：\n"),a("ul",[a("li",[s._v("兼容性中等：基于Low Level Client，只向后兼容ES的大版本，比如6.0的客户端兼容6.x（即6.0之后的版本），但是6.1的客户端未必支持所有6.0ES的API，但是这并不是什么大问题，咱们使用相同版本的客户端和服务端即可，而且不会带来其他问题。")])])])])])])]),s._v(" "),a("h2",{attrs:{id:"_9-spring-data-elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-spring-data-elasticsearch"}},[s._v("#")]),s._v(" 9 Spring Data Elasticsearch")]),s._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[s._v("Spring Data 的目的是用统一的接口，适配所有不同的存储类型。")]),s._v(" "),a("p",[s._v("Spring Data Elasticsearch是Spring Data的一个子项目，该项目旨在为新数据存储提供熟悉且一致的基于 Spring 的编程模型，同时保留特定于存储的功能和功能。Spring Data Elasticsearch是一个以 POJO 为中心的模型，用于与 Elastichsearch 文档交互并轻松编写 Repository 风格的数据访问层。")]),s._v(" "),a("p",[s._v("Spring Data 存储库抽象中的中心接口是Repository. 它需要域类来管理以及域类的 ID 类型作为类型参数。此接口主要用作标记接口，以捕获要使用的类型并帮助您发现扩展此接口的接口。该CrudRepository接口为正在管理的实体类提供复杂的 CRUD 功能。")]),s._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),a("ul",[a("li",[s._v("Spring 配置支持使用基于 Java 的"),a("code",[s._v("@Configuration")]),s._v("类或用于 ES 客户端实例的 XML 命名空间。")]),s._v(" "),a("li",[a("code",[s._v("ElasticsearchTemplate")]),s._v("提高执行常见 ES 操作的生产力的助手类。包括文档和 POJO 之间的集成对象映射。")]),s._v(" "),a("li",[s._v("功能丰富的对象映射与 Spring 的转换服务集成")]),s._v(" "),a("li",[s._v("基于注释的映射元数据但可扩展以支持其他元数据格式")]),s._v(" "),a("li",[a("code",[s._v("Repository")]),s._v("接口的自动实现，包括对自定义查找器方法的支持。")]),s._v(" "),a("li",[s._v("对存储库的 CDI 支持")])]),s._v(" "),a("h3",{attrs:{id:"官网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官网"}},[s._v("#")]),s._v(" 官网")]),s._v(" "),a("p",[s._v("https://spring.io/projects/spring-data-elasticsearch")]),s._v(" "),a("h3",{attrs:{id:"兼容性-必看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容性-必看"}},[s._v("#")]),s._v(" 兼容性(必看)")]),s._v(" "),a("p",[s._v("https://docs.spring.io/spring-data/elasticsearch/docs/4.2.1/reference/html/#preface.requirements")]),s._v(" "),a("h3",{attrs:{id:"文档地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档地址"}},[s._v("#")]),s._v(" 文档地址")]),s._v(" "),a("p",[s._v("https://docs.spring.io/spring-data/elasticsearch/docs/4.2.1/reference/html/#reference")]),s._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),a("ul",[a("li",[s._v("优点：用统一的接口，适配所有不同的存储类型，学习成本低。")]),s._v(" "),a("li",[s._v("缺点：适配的版本要比原生的 API 要慢。这个取决于 Spring Data Elasticsearch 团队的开发速度。无法使用ES的一些新特性")])]),s._v(" "),a("h3",{attrs:{id:"maven-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven-repository"}},[s._v("#")]),s._v(" Maven Repository")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-boot-starter-data-elasticsearch"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[s._v("#")]),s._v(" 注解")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Document")]),s._v("：在类级别应用，以指示该类是映射到数据库的候选类。最重要的属性包括：\n\nindexName：用于存储此实体的索引的名称。它可以包含类似于“日志"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("#"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v("（"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("LocalDate")]),s._v("）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("now（）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toString（）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”\n\ntype "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("映射类型。如果未设置，则使用该类的小写简单名称。（自"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.0")]),s._v("版起已弃用）\n\ncreateIndex：标记是否在存储库引导时创建索引。默认值为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("。请参阅自动创建带有相应映射的索引\n\nversionType：版本管理的配置。默认值为外部 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Id")]),s._v("：在字段级别应用，以标记用于标识的字段。\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Transient")]),s._v("：默认情况下，存储或检索文档时，所有字段都映射到文档，此批注不包括该字段。\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PersistenceConstructor")]),s._v("：标记在从数据库实例化对象时要使用的给定构造函数（甚至是包受保护的构造函数）。构造函数参数按名称映射到检索文档中的键值。\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Field")]),s._v("：应用于字段级别并定义字段的属性，大多数属性映射到相应的"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Elasticsearch")]),s._v("映射定义（以下列表不完整，请查看注释"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Javadoc")]),s._v("以获取完整的参考）：\n\nname：将在"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Elasticsearch")]),s._v("文档中表示的字段的名称，如果未设置，则使用"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Java")]),s._v("字段名称。\n\ntype：字段类型，可以是"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Text")]),s._v("，关键字，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Short")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Byte")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Float")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Half_Float")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scaled_Float")]),s._v("，日期，日期"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Nanos")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Binary")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer_Range")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Float_Range")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long_Range")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),s._v("ˉ"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Range")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),s._v("ˉ"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Range")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Nested")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Ip")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TokenCount")]),s._v("，percollator，flatten，搜索。请参阅"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Elasticsearch")]),s._v("映射类型\n\nformat：一个或多个内置日期格式，请参阅下一节格式数据映射 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\npattern：一个或多个自定义日期格式，请参阅下一节格式数据映射 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nstore：标志是否应将原始字段值存储在"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Elasticsearch")]),s._v("中，默认值为假 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nanalyzer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("搜索分析器 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("normalizer用于指定自定义分析器和规格化器。\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@GeoPoint")]),s._v("：将字段标记为地理点如果字段是"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GeoPoint")]),s._v("班级\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h3",{attrs:{id:"操作类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作类型"}},[s._v("#")]),s._v(" 操作类型")]),s._v(" "),a("p",[s._v("Spring Data Elasticsearch 使用多个接口来定义可以针对 Elasticsearch 索引调用的操作。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("IndexOperations")]),s._v("定义索引级别的操作，例如创建或删除索引。")]),s._v(" "),a("li",[a("code",[s._v("DocumentOperations")]),s._v("定义基于 id 存储、更新和检索实体的操作。")]),s._v(" "),a("li",[a("code",[s._v("SearchOperations")]),s._v("定义使用查询搜索多个实体的操作")]),s._v(" "),a("li",[a("code",[s._v("ElasticsearchOperations")]),s._v("结合了"),a("code",[s._v("DocumentOperations")]),s._v("和"),a("code",[s._v("SearchOperations")]),s._v("接口。")])]),s._v(" "),a("h3",{attrs:{id:"high-level-rest-client"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#high-level-rest-client"}},[s._v("#")]),s._v(" High Level REST Client")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClientConfig")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractElasticsearchConfiguration")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestHighLevelClient")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("elasticsearchClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),s._v(" clientConfiguration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("connectedTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClients")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientConfiguration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                         \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestHighLevelClient")]),s._v(" highLevelClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestClient")]),s._v(" lowLevelClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" highLevelClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lowLevelClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                        \n\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IndexRequest")]),s._v(" request "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IndexRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"spring-data"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("randomID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("singletonMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"feature"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"high-level-rest-client"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRefreshPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IMMEDIATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IndexResponse")]),s._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" highLevelClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DEFAULT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);