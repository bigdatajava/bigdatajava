(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{480:function(s,n,r){"use strict";r.r(n);var e=r(1),a=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.lenovo.quotation.service;\n\nimport com.lenovo.quotation.service.dto.ApproverDTO;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Demo {\n\n\n    public static void main(String[] args) {\n        test();\n        groupByStream();\n        mapDemo();\n    }\n\n\n    public static void test(){\n\n        Map<String, List<ApproverDTO>> approvers = new HashMap<>();\n        List<String> ancestorGeoUnitIds = new ArrayList<>();\n        //init\n        List<ApproverDTO> s1 = new ArrayList();\n        Collections.addAll(s1,ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("2").build(),ApproverDTO.builder().geographicUnitId("3").build());\n        approvers.put("CFO1",s1);\n\n        List<ApproverDTO> s2 = new ArrayList();\n        Collections.addAll(s2,ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("2").build(),ApproverDTO.builder().geographicUnitId("3").build());\n        approvers.put("CFO2",s2);\n\n        Collections.addAll(ancestorGeoUnitIds,"2","3");\n\n        //begin\n        List<List<ApproverDTO>> resultApproverDTO = approvers.values().stream().map(approverDTOS -> {//approverDTOS多个-List<>\n            List<ApproverDTO> oneListApproverDTO = null;\n            for (String ancestorGeoUnitId : ancestorGeoUnitIds) {\n                oneListApproverDTO = approverDTOS.stream().filter(approverDTO -> ancestorGeoUnitId.equalsIgnoreCase(approverDTO.getGeographicUnitId())).collect(Collectors.toList());\n                if (!CollectionUtils.isEmpty(oneListApproverDTO)) {\n                    break;\n                }\n            }\n            return oneListApproverDTO;\n        }).collect(Collectors.toList());\n\n\n        System.out.println("........");\n    }\n\n    //stream- groupBy()\n    public static Map<String, List<ApproverDTO>> groupByStream(){\n\n        List<ApproverDTO> approverDTOList = new ArrayList<>();\n        Collections.addAll(approverDTOList,ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("2").build(),ApproverDTO.builder().geographicUnitId("3").build());\n        Map<String, List<ApproverDTO>> result = approverDTOList.stream().collect(Collectors.groupingBy(ApproverDTO::getGeographicUnitId));\n        System.out.println("-----------");\n        return result;\n    }\n\n    //创建List的好方法\n    public static void mapDemo(){\n\n        Map<String, List<ApproverDTO>> approvers = new HashMap<>();\n        List<String> ancestorGeoUnitIds = new ArrayList<>();\n        //init\n        List<ApproverDTO> s1 = new ArrayList();\n        Collections.addAll(s1,ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("2").build(),ApproverDTO.builder().geographicUnitId("3").build());\n        approvers.put("CFO1",s1);\n\n        List<ApproverDTO> s2 = new ArrayList();\n        Collections.addAll(s2,ApproverDTO.builder().geographicUnitId("1").build(),ApproverDTO.builder().geographicUnitId("2").build(),ApproverDTO.builder().geographicUnitId("3").build());\n        approvers.put("CFO2",s2);\n\n        Collections.addAll(ancestorGeoUnitIds,"2","3");\n\n\n\n        Map<String, List<ApproverDTO>> listMap = approvers.entrySet().stream().map(entry -> {\n            System.out.println("key-" + entry.getKey() + ":value-" + entry.getValue());\n            List<ApproverDTO> value = entry.getValue();\n\n            List<ApproverDTO> result =null;\n            for (String ancestorGeoUnitId:ancestorGeoUnitIds) {\n                result = value.stream().filter(approverDTO -> ancestorGeoUnitId.equalsIgnoreCase(approverDTO.getGeographicUnitId())).collect(Collectors.toList());\n                if(!CollectionUtils.isEmpty(result)){\n                    break;\n                }\n            }\n\n            entry.setValue(result);\n            return entry;\n        }).collect(Collectors.toMap(entry1 -> entry1.getKey(), entry1 -> entry1.getValue()));\n\n\n        System.out.println("------");\n    }\n\n\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);