(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{412:function(t,v,e){"use strict";e.r(v);var a=e(1),_=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("官网：http://dubbo.apache.org/zh/docs/v2.7/user/")]),t._v(" "),v("p",[t._v("demo项目地址：https://gitee.com/archguide/dubbo-tuling-demo")]),t._v(" "),v("p",[t._v("clone地址：https://gitee.com/archguide/dubbo-tuling-demo.git")]),t._v(" "),v("p",[t._v("管理台github地址：https://github.com/apache/dubbo-admin")]),t._v(" "),v("p",[t._v("Dubbo提供了很多功能，这里我们只介绍几种比较重要的，其他功能可以去Dubbo官网上查看。")]),t._v(" "),v("h2",{attrs:{id:"负载均衡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/loadbalance/")]),t._v(" "),v("p",[t._v("如果在消费端和服务端都配置了负载均衡策略，以消费端为准。")]),t._v(" "),v("p",[t._v("这其中比较难理解的就是"),v("strong",[t._v("最少活跃调用数")]),t._v("是如何进行统计的？")]),t._v(" "),v("p",[v("strong",[t._v("讲道理")]),t._v("，最少活跃数应该是在"),v("strong",[t._v("服务提供者端")]),t._v("进行统计的，服务提供者统计"),v("strong",[t._v("有多少个请求正在执行中")]),t._v("。")]),t._v(" "),v("p",[t._v("但在Dubbo中，就是"),v("strong",[t._v("不讲道理")]),t._v("，它是在消费端进行统计的，为什么能在消费端进行统计？")]),t._v(" "),v("p",[t._v("逻辑是这样的：")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("消费者会缓存所调用服务的所有提供者，比如记为p1、p2、p3三个服务提供者，每个提供者内都有一个属性记为active，默认位0")])]),t._v(" "),v("li",[v("p",[t._v("消费者在调用次服务时，如果负载均衡策略是"),v("strong",[t._v("leastactive")])])]),t._v(" "),v("li",[v("p",[t._v("消费者端会判断缓存的所有服务提供者的active，选择最小的，如果都相同，则随机")])]),t._v(" "),v("li",[v("p",[t._v("选出某一个服务提供者后，假设位p2，Dubbo就会对p2.active+1")])]),t._v(" "),v("li",[v("p",[t._v("然后真正发出请求调用该服务")])]),t._v(" "),v("li",[v("p",[t._v("消费端收到响应结果后，对p2.active-1")])]),t._v(" "),v("li",[v("p",[t._v("这样就完成了对某个服务提供者当前活跃调用数进行了统计，并且并不影响服务调用的性能")])])]),t._v(" "),v("h2",{attrs:{id:"服务超时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务超时"}},[t._v("#")]),t._v(" 服务超时")]),t._v(" "),v("p",[t._v("在服务提供者和服务消费者上都可以配置服务超时时间，这两者是不一样的。")]),t._v(" "),v("p",[t._v("消费者调用一个服务，分为三步：")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("消费者发送请求（网络传输）")])]),t._v(" "),v("li",[v("p",[t._v("服务端执行服务")])]),t._v(" "),v("li",[v("p",[t._v("服务端返回响应（网络传输）")])])]),t._v(" "),v("p",[t._v("如果在服务端和消费端只在"),v("strong",[t._v("其中一方")]),t._v("配置了timeout，那么没有歧义，表示消费端"),v("strong",[t._v("调用")]),t._v("服务的超时时间**，消费端如果超过时间还没有收到响应结果，则消费端会抛"),v("strong",[t._v("超时异常")]),t._v("，"),v("strong",[t._v("但服务端不会抛异常，服务端在执行服务后，会检查")]),t._v("执行该服务"),v("strong",[t._v("的时间，如果超过timeout，则会打印一个")]),t._v("超时日志**。服务会正常的执行完。")]),t._v(" "),v("p",[t._v("如果在服务端和消费端各配了一个timeout，那就比较复杂了，假设")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("服务执行为5s")])]),t._v(" "),v("li",[v("p",[t._v("消费端timeout=3s")])]),t._v(" "),v("li",[v("p",[t._v("服务端timeout=6s")])])]),t._v(" "),v("p",[t._v("那么消费端调用服务时，消费端会收到超时异常（因为消费端超时了），服务端一切正常（服务端没有超时）。")]),t._v(" "),v("h2",{attrs:{id:"集群容错"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#集群容错"}},[t._v("#")]),t._v(" 集群容错")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/fault-tolerent-strategy/")]),t._v(" "),v("p",[t._v("集群容错表示：服务消费者在调用某个服务时，这个服务有多个服务提供者，在经过负载均衡后选出其中一个服务提供者之后进行调用，但调用报错后，Dubbo所采取的后续处理策略。")]),t._v(" "),v("h2",{attrs:{id:"服务降级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务降级"}},[t._v("#")]),t._v(" 服务降级")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/service-downgrade/")]),t._v(" "),v("p",[t._v("服务降级表示：服务消费者在调用某个服务提供者时，如果该服务提供者报错了，所采取的措施。")]),t._v(" "),v("p",[t._v("集群容错和服务降级的区别在于：")]),t._v(" "),v("ol",[v("li",[t._v("集群容错是整个集群范围内的容错")]),t._v(" "),v("li",[t._v("服务降级是单个服务提供者的自身容错")])]),t._v(" "),v("h2",{attrs:{id:"本地存根"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地存根"}},[t._v("#")]),t._v(" 本地存根")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/local-stub/")]),t._v(" "),v("p",[t._v("本地存根，名字很抽象，但实际上不难理解，本地存根就是一段逻辑，这段逻辑是在服务消费端执行的，这段逻辑一般都是由服务提供者提供，服务提供者可以利用这种机制在服务消费者远程调用服务提供者之前或之后再做一些其他事情，比如结果缓存，请求参数验证等等。")]),t._v(" "),v("h2",{attrs:{id:"本地伪装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地伪装"}},[t._v("#")]),t._v(" 本地伪装")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/local-mock/")]),t._v(" "),v("p",[t._v("本地伪装就是Mock，Dubbo中Mock的功能相对于本地存根更简单一点，Mock其实就是Dubbo中的服务容错的解决方案。")]),t._v(" "),v("h2",{attrs:{id:"参数回调"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参数回调"}},[t._v("#")]),t._v(" 参数回调")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/callback-parameter/")]),t._v(" "),v("p",[t._v("官网上的Demo其实太复杂，可以看课上的Demo更为简单。")]),t._v(" "),v("p",[t._v("首先，如果当前服务支持参数回调，意思就是：对于某个服务接口中的某个方法，如果想支持消费者在调用这个方法时能设置回调逻辑，那么该方法就需要提供一个入参用来表示回调逻辑。")]),t._v(" "),v("p",[t._v("因为Dubbo协议是基于长连接的，所以消费端在两次调用同一个方法时想指定不同的回调逻辑，那么就需要在调用时在指定一定key进行区分。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/dubbo/3.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"异步调用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异步调用"}},[t._v("#")]),t._v(" 异步调用")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/async-call/")]),t._v(" "),v("p",[t._v("理解起来比较容易，主要要理解"),v("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CompletableFuture"),v("OutboundLink")],1),t._v("，如果不理解，就直接把它理解为Future")]),t._v(" "),v("p",[t._v("其他异步调用方式：https://mp.weixin.qq.com/s/U3eyBUy6HBVy-xRw3LGbRQ")]),t._v(" "),v("h2",{attrs:{id:"泛化调用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#泛化调用"}},[t._v("#")]),t._v(" 泛化调用")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/generic-reference/")]),t._v(" "),v("p",[t._v("泛化调用可以用来做服务测试。")]),t._v(" "),v("p",[t._v("在Dubbo中，如果某个服务想要支持泛化调用，就可以将该服务的generic属性设置为true，那对于服务消费者来说，就可以不用依赖该服务的接口，直接利用GenericService接口来进行服务调用。")]),t._v(" "),v("h2",{attrs:{id:"泛化服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#泛化服务"}},[t._v("#")]),t._v(" 泛化服务")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/generic-service/")]),t._v(" "),v("p",[t._v("实现了GenericService接口的就是泛化服务")]),t._v(" "),v("h2",{attrs:{id:"dubbo中的rest"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dubbo中的rest"}},[t._v("#")]),t._v(" Dubbo中的REST")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/rest/")]),t._v(" "),v("p",[t._v("注意Dubbo的REST也是Dubbo所支持的一种"),v("strong",[t._v("协议")]),t._v("。")]),t._v(" "),v("p",[t._v("当我们用Dubbo提供了一个服务后，如果消费者没有使用Dubbo也想调用服务，那么这个时候我们就可以让我们的服务支持REST协议，这样消费者就可以通过REST形式调用我们的服务了。")]),t._v(" "),v("p",[t._v("注意：如果某个服务只有REST协议可用，那么该服务必须用@Path注解定义访问路径")]),t._v(" "),v("h2",{attrs:{id:"管理台"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#管理台"}},[t._v("#")]),t._v(" 管理台")]),t._v(" "),v("p",[t._v("github地址：https://github.com/apache/dubbo-admin")]),t._v(" "),v("h2",{attrs:{id:"动态配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态配置"}},[t._v("#")]),t._v(" 动态配置")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/config-rule/")]),t._v(" "),v("p",[t._v("注意动态配置修改的是服务"),v("strong",[t._v("参数")]),t._v("，并不能修改服务的协议、IP、PORT、VERSION、GROUP，因为这5个信息是服务的标识信息，是服务的身份证号，是不能修改的。")]),t._v(" "),v("h2",{attrs:{id:"服务路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务路由"}},[t._v("#")]),t._v(" 服务路由")]),t._v(" "),v("p",[t._v("官网地址：http://dubbo.apache.org/zh/docs/v2.7/user/examples/routing-rule/")]),t._v(" "),v("h3",{attrs:{id:"什么是蓝绿发布、灰度发布"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是蓝绿发布、灰度发布"}},[t._v("#")]),t._v(" 什么是蓝绿发布、灰度发布")]),t._v(" "),v("p",[t._v("https://zhuanlan.zhihu.com/p/42671353")]),t._v(" "),v("h2",{attrs:{id:"zookeeper可视化客户端工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper可视化客户端工具"}},[t._v("#")]),t._v(" Zookeeper可视化客户端工具")]),t._v(" "),v("p",[t._v("Zookeeper可视化客户端：")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.yuque.com/attachments/yuque/0/2021/zip/365147/1611383428412-31fdc5e6-dcf5-4d1f-b7d9-0178a242ecbe.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("📎ZooInspector.zip"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("解压后运行："),v("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/dubbo/4.png",alt:""}})])])}),[],!1,null,null,null);v.default=_.exports}}]);