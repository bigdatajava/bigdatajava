(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{593:function(s,n,e){"use strict";e.r(n);var t=e(1),a=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("U2FsdGVkX18Rb91OPfATTnGFGiSsDBedCzr7uHfWmz1gEc1c4i/nLIxqw/8x+0Qq\n4g/JJ9of2/c9jkKHBHD8c4Q+JuU56gwkE3erzEaiOexeLFL9FdrqE3/JHjIIsJ6+\nvw==\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("学习Spring Security OAuth2前提： "),n("strong",[s._v("掌握Spring Security")])]),s._v(" "),n("p",[n("strong",[s._v("1. OAuth2.0介绍")])]),s._v(" "),n("p",[s._v("OAuth（Open Authorization）是一个关于授权（authorization）的开放网络标准，允许用户授权第三方应用访问他们存储在另外的服务提供者上的信息，而不需要将用户名和密码提供给第三方移动应用或分享他们数据的所有内容。OAuth在全世界得到广泛应用，目前的版本是2.0版。")]),s._v(" "),n("p",[s._v("OAuth协议：https://tools.ietf.org/html/rfc6749")]),s._v(" "),n("p",[s._v("协议特点：")]),s._v(" "),n("ul",[n("li",[s._v("简单：不管是OAuth服务提供者还是应用开发者，都很易于理解与使用；")]),s._v(" "),n("li",[s._v("安全：没有涉及到用户密钥等信息，更安全更灵活；")]),s._v(" "),n("li",[s._v("开放：任何服务提供商都可以实现OAuth，任何软件开发商都可以使用OAuth；")])]),s._v(" "),n("p",[n("strong",[s._v("1.1 应用场景")])]),s._v(" "),n("ul",[n("li",[s._v("原生app授权：app登录请求后台接口，为了安全认证，所有请求都带token信息，如果登录验证、请求后台数据。")]),s._v(" "),n("li",[s._v("前后端分离单页面应用：前后端分离框架，前端请求后台数据，需要进行oauth2安全认证，比如使用vue、react后者h5开发的app")]),s._v(" "),n("li",[s._v("第三方应用授权登录，比如QQ，微博，微信的授权登录。")])]),s._v(" "),n("p",[s._v('有一个"云冲印"的网站，可以将用户储存在Google的照片，冲印出来。用户为了使用该服务，必须让"云冲印"读取自己储存在Google上的照片。只有得到用户的授权，Google才会同意"云冲印"读取这些照片。那么，"云冲印"怎样获得用户的授权呢？')]),s._v(" "),n("p",[s._v('传统方法是，用户将自己的Google用户名和密码，告诉"云冲印"，后者就可以读取用户的照片了。这样的做法有以下几个严重的缺点：')]),s._v(" "),n("ul",[n("li",[s._v('"云冲印"为了后续的服务，会保存用户的密码，这样很不安全。')]),s._v(" "),n("li",[s._v("Google不得不部署密码登录，而我们知道，单纯的密码登录并不安全。")]),s._v(" "),n("li",[s._v('"云冲印"拥有了获取用户储存在Google所有资料的权力，用户没法限制"云冲印"获得授权的范围和有效期。')]),s._v(" "),n("li",[s._v('用户只有修改密码，才能收回赋予"云冲印"的权力。但是这样做，会使得其他所有获得用户授权的第三方应用程序全部失效。')]),s._v(" "),n("li",[s._v("只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164316240.png",alt:"image-20220623164316240"}})]),s._v(" "),n("p",[s._v("生活中常见的oauth2场景，京东商城（https://www.jd.com/）接入微信开放平台，可以通过微信登录。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164324013.png",alt:"image-20220623164324013"}})]),s._v(" "),n("p",[s._v("登录流程分析：")]),s._v(" "),n("p",[s._v("https://www.processon.com/view/link/60a32e7a079129157118740f")]),s._v(" "),n("p",[n("strong",[s._v("1.2 基本概念")])]),s._v(" "),n("p",[s._v("（1）"),n("strong",[s._v("Third-party application")]),s._v('：第三方应用程序，又称"客户端"（client），即例子中的"云冲印"。')]),s._v(" "),n("p",[s._v("（2）"),n("strong",[s._v("HTTP service")]),s._v('：HTTP服务提供商，简称"服务提供商"，即例子中的Google。')]),s._v(" "),n("p",[s._v("（3）"),n("strong",[s._v("Resource Owner")]),s._v('：资源所有者，又称"用户"（user）。')]),s._v(" "),n("p",[s._v("（4）"),n("strong",[s._v("User Agent")]),s._v("：用户代理，比如浏览器。")]),s._v(" "),n("p",[s._v("（5）"),n("strong",[s._v("Authorization server")]),s._v("：授权服务器，即服务提供商专门用来处理认证授权的服务器。")]),s._v(" "),n("p",[s._v("（6）"),n("strong",[s._v("Resource server")]),s._v("：资源服务器，即服务提供商存放用户生成的资源的服务器。它与授权服务器，可以是同一台服务器，也可以是不同的服务器。")]),s._v(" "),n("p",[s._v('OAuth的作用就是让"客户端"安全可控地获取"用户"的授权，与"服务提供商"进行交互。')]),s._v(" "),n("p",[n("strong",[s._v("1.3 优缺点")])]),s._v(" "),n("p",[s._v("优点：")]),s._v(" "),n("ul",[n("li",[s._v("更安全，客户端不接触用户密码，服务器端更易集中保护")]),s._v(" "),n("li",[s._v("广泛传播并被持续采用")]),s._v(" "),n("li",[s._v("短寿命和封装的token")]),s._v(" "),n("li",[s._v("资源服务器和授权服务器解耦")]),s._v(" "),n("li",[s._v("集中式授权，简化客户端")]),s._v(" "),n("li",[s._v("HTTP/JSON友好，易于请求和传递token")]),s._v(" "),n("li",[s._v("考虑多种客户端架构场景")]),s._v(" "),n("li",[s._v("客户可以具有不同的信任级别")])]),s._v(" "),n("p",[s._v("缺点：")]),s._v(" "),n("ul",[n("li",[s._v("协议框架太宽泛，造成各种实现的兼容性和互操作性差")]),s._v(" "),n("li",[s._v("不是一个认证协议，本身并不能告诉你任何用户信息。")])]),s._v(" "),n("p",[n("strong",[s._v("2. OAuth2的设计思路")])]),s._v(" "),n("p",[s._v('OAuth在"客户端"与"服务提供商"之间，设置了一个授权层（authorization layer）。"客户端"不能直接登录"服务提供商"，只能登录授权层，以此将用户与客户端区分开来。"客户端"登录授权层所用的令牌（token），与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期，"客户端"登录授权层以后，"服务提供商"根据令牌的权限范围和有效期，向"客户端"开放用户储存的资料。')]),s._v(" "),n("p",[s._v("OAuth 2.0的运行流程如下图，摘自RFC 6749：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164335436.png",alt:"image-20220623164335436"}})]),s._v(" "),n("p",[s._v("（A）用户打开客户端以后，客户端要求用户给予授权。")]),s._v(" "),n("p",[s._v("（B）用户同意给予客户端授权。")]),s._v(" "),n("p",[s._v("（C）客户端使用上一步获得的授权，向授权服务器申请令牌。")]),s._v(" "),n("p",[s._v("（D）授权服务器对客户端进行认证以后，确认无误，同意发放令牌。")]),s._v(" "),n("p",[s._v("（E）客户端使用令牌，向资源服务器申请获取资源。")]),s._v(" "),n("p",[s._v("（F）资源服务器确认令牌无误，同意向客户端开放资源。")]),s._v(" "),n("p",[s._v("令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。")]),s._v(" "),n("p",[s._v("（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。")]),s._v(" "),n("p",[s._v("（2）令牌可以被数据所有者撤销，会立即失效。密码一般不允许被他人撤销。")]),s._v(" "),n("p",[s._v("（3）令牌有权限范围（scope）。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。")]),s._v(" "),n("p",[s._v("上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。")]),s._v(" "),n("p",[n("strong",[s._v("2.1 客户端授权模式")])]),s._v(" "),n("p",[s._v("客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。")]),s._v(" "),n("ul",[n("li",[s._v("授权码模式（authorization code）")]),s._v(" "),n("li",[s._v("密码模式（resource owner password credentials）")]),s._v(" "),n("li",[s._v("简化(隐式)模式（implicit）")]),s._v(" "),n("li",[s._v("客户端模式（client credentials）")])]),s._v(" "),n("p",[s._v("不管哪一种授权方式，第三方应用申请令牌之前，都必须先到系统备案，说明自己的身份，然后会拿到两个身份识别码：客户端 ID（client ID）和客户端密钥（client secret）。这是为了防止令牌被滥用，没有备案过的第三方应用，是不会拿到令牌的。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164404522.png",alt:"image-20220623164404522"}})]),s._v(" "),n("p",[n("strong",[s._v("授权码模式")])]),s._v(" "),n("p",[n("strong",[s._v("授权码（authorization code）方式，指的是第三方应用先申请一个授权码，然后再用该码获取令牌。")])]),s._v(" "),n("p",[s._v("这种方式是最常用的流程，安全性也最高，它适用于那些有后端的 Web 应用。授权码通过前端传送，令牌则是储存在后端，而且所有与资源服务器的通信都在后端完成。这样的前后端分离，可以避免令牌泄漏。")]),s._v(" "),n("p",[s._v("适用场景：目前市面上主流的第三方验证都是采用这种模式")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164415440.png",alt:"image-20220623164415440"}})]),s._v(" "),n("p",[s._v("它的步骤如下：")]),s._v(" "),n("p",[s._v("（A）用户访问客户端，后者将前者导向授权服务器。")]),s._v(" "),n("p",[s._v("（B）用户选择是否给予客户端授权。")]),s._v(" "),n("p",[s._v('（C）假设用户给予授权，授权服务器将用户导向客户端事先指定的"重定向URI"（redirection URI），同时附上一个授权码。')]),s._v(" "),n("p",[s._v('（D）客户端收到授权码，附上早先的"重定向URI"，向授权服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。')]),s._v(" "),n("p",[s._v("（E）授权服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。")]),s._v(" "),n("p",[s._v("\\1. A网站提供一个链接，用户点击后就会跳转到 B 网站，授权用户数据给 A 网站使用。下面就是 A 网站跳转 B 网站的一个示意链接。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://b.com/oauth/authorize?\n>   response_type=code&            #要求返回授权码（code）\n>   client_id=CLIENT_ID&           #让 B 知道是谁在请求   \n>   redirect_uri=CALLBACK_URL&     #B 接受或拒绝请求后的跳转网址 \n>   scope=read\t\t\t\t\t   # 要求的授权范围（这里是只读）\t\t\n>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("客户端申请授权的URI，包含以下参数：")]),s._v(" "),n("ul",[n("li",[s._v('response_type：表示授权类型，必选项，此处的值固定为"code"')]),s._v(" "),n("li",[s._v("client_id：表示客户端的ID，必选项")]),s._v(" "),n("li",[s._v("redirect_uri：表示重定向URI，可选项")]),s._v(" "),n("li",[s._v("scope：表示申请的权限范围，可选项")]),s._v(" "),n("li",[s._v("state：表示客户端的当前状态，可以指定任意值，授权服务器会原封不动地返回这个值。")])]),s._v(" "),n("p",[s._v("\\2. 用户跳转后，B 网站会要求用户登录，然后询问是否同意给予 A 网站授权。用户表示同意，这时 B 网站就会跳回redirect_uri参数指定的网址。跳转时，会传回一个授权码，就像下面这样。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://a.com/callback?code=AUTHORIZATION_CODE    #code参数就是授权码\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("\\3. A 网站拿到授权码以后，就可以在后端，向 B 网站请求令牌。 用户不可见，服务端行为")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://b.com/oauth/token?\n>  client_id=CLIENT_ID&\n>  client_secret=CLIENT_SECRET&    # client_id和client_secret用来让 B 确认 A 的身份,client_secret参数是保密的，因此只能在后端发请求\n>  grant_type=authorization_code&   # 采用的授权方式是授权码\n>  code=AUTHORIZATION_CODE&          # 上一步拿到的授权码\n>  redirect_uri=CALLBACK_URL\t\t# 令牌颁发后的回调网址\t\n>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("\\4. B 网站收到请求以后，就会颁发令牌。具体做法是向redirect_uri指定的网址，发送一段 JSON 数据。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> {    \n>   "access_token":"ACCESS_TOKEN",     # 令牌\n>   "token_type":"bearer",\n>   "expires_in":2592000,\n>   "refresh_token":"REFRESH_TOKEN",\n>   "scope":"read",\n>   "uid":100101,\n>   "info":{...}\n> }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("strong",[s._v("简化(隐式)模式")])]),s._v(" "),n("p",[s._v("有些 Web 应用是纯前端应用，没有后端。这时就不能用上面的方式了，必须将令牌储存在前端。"),n("strong",[s._v('RFC 6749 就规定了第二种方式，允许直接向前端颁发令牌，这种方式没有授权码这个中间步骤，所以称为（授权码）"隐藏式"（implicit）')])]),s._v(" "),n("p",[s._v('简化模式不通过第三方应用程序的服务器，直接在浏览器中向授权服务器申请令牌，跳过了"授权码"这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。')]),s._v(" "),n("p",[s._v("这种方式把令牌直接传给前端，是很不安全的。因此，只能用于一些安全要求不高的场景，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164426365.png",alt:"image-20220623164426365"}})]),s._v(" "),n("p",[s._v("它的步骤如下：")]),s._v(" "),n("p",[s._v("（A）客户端将用户导向授权服务器。")]),s._v(" "),n("p",[s._v("（B）用户决定是否给于客户端授权。")]),s._v(" "),n("p",[s._v('（C）假设用户给予授权，授权服务器将用户导向客户端指定的"重定向URI"，并在URI的Hash部分包含了访问令牌。')]),s._v(" "),n("p",[s._v("（D）浏览器向资源服务器发出请求，其中不包括上一步收到的Hash值。")]),s._v(" "),n("p",[s._v("（E）资源服务器返回一个网页，其中包含的代码可以获取Hash值中的令牌。")]),s._v(" "),n("p",[s._v("（F）浏览器执行上一步获得的脚本，提取出令牌。")]),s._v(" "),n("p",[s._v("（G）浏览器将令牌发给客户端。")]),s._v(" "),n("p",[s._v("\\1. A 网站提供一个链接，要求用户跳转到 B 网站，授权用户数据给 A 网站使用。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://b.com/oauth/authorize?\n>   response_type=token&          # response_type参数为token，表示要求直接返回令牌\n>   client_id=CLIENT_ID&\n>   redirect_uri=CALLBACK_URL&\n>   scope=read\n>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("\\2. 用户跳转到 B 网站，登录后同意给予 A 网站授权。这时，B 网站就会跳回redirect_uri参数指定的跳转网址，并且把令牌作为 URL 参数，传给 A 网站。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://a.com/callback#token=ACCESS_TOKEN     #token参数就是令牌，A 网站直接在前端拿到令牌。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("密码模式")])]),s._v(" "),n("p",[n("strong",[s._v('如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）。')])]),s._v(" "),n("p",[s._v("在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而授权服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。")]),s._v(" "),n("p",[s._v("适用场景：自家公司搭建的授权服务器")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164435220.png",alt:"image-20220623164435220"}})]),s._v(" "),n("p",[s._v("它的步骤如下：")]),s._v(" "),n("blockquote",[n("p",[s._v("（A）用户向客户端提供用户名和密码。")]),s._v(" "),n("p",[s._v("（B）客户端将用户名和密码发给授权服务器，向后者请求令牌。")]),s._v(" "),n("p",[s._v("（C）授权服务器确认无误后，向客户端提供访问令牌。")])]),s._v(" "),n("p",[s._v("\\1. A 网站要求用户提供 B 网站的用户名和密码，拿到以后，A 就直接向 B 请求令牌。整个过程中，客户端不得保存用户的密码。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> https://oauth.b.com/token?\n>   grant_type=password&       # 授权方式是"密码式"\n>   username=USERNAME&\n>   password=PASSWORD&\n>   client_id=CLIENT_ID\n>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("\\2. B 网站验证身份通过后，直接给出令牌。注意，这时不需要跳转，而是把令牌放在 JSON 数据里面，作为 HTTP 回应，A 因此拿到令牌。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164445078.png",alt:"image-20220623164445078"}})]),s._v(" "),n("p",[n("strong",[s._v("客户端模式")])]),s._v(" "),n("p",[s._v('客户端模式（Client Credentials Grant）指客户端以自己的名义，而不是以用户的名义，向"服务提供商"进行授权。')]),s._v(" "),n("p",[s._v("**适用于没有前端的命令行应用，即在命令行下请求令牌。**一般用来提供给我们完全信任的服务器端服务。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164452746.png",alt:"image-20220623164452746"}})]),s._v(" "),n("p",[s._v("它的步骤如下：")]),s._v(" "),n("p",[s._v("（A）客户端向授权服务器进行身份认证，并要求一个访问令牌。")]),s._v(" "),n("p",[s._v("（B）授权服务器确认无误后，向客户端提供访问令牌。")]),s._v(" "),n("p",[s._v("\\1. A 应用在命令行向 B 发出请求。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://oauth.b.com/token?\n>   grant_type=client_credentials&\n>   client_id=CLIENT_ID&\n>   client_secret=CLIENT_SECRET\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("\\2. B 网站验证通过以后，直接返回令牌。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164502534.png",alt:"image-20220623164502534"}})]),s._v(" "),n("p",[n("strong",[s._v("2.2 令牌的使用")])]),s._v(" "),n("p",[s._v("A 网站拿到令牌以后，就可以向 B 网站的 API 请求数据了。")]),s._v(" "),n("p",[s._v("此时，每个发到 API 的请求，都必须带有令牌。具体做法是在请求的头信息，加上一个Authorization字段，令牌就放在这个字段里面。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> curl -H "Authorization: Bearer ACCESS_TOKEN" \\\n> "https://api.b.com"\n>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("也可以通过添加请求参数access_token请求数据。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164528545.png",alt:"image-20220623164528545"}})]),s._v(" "),n("p",[n("strong",[s._v("2.3 更新令牌")])]),s._v(" "),n("p",[s._v("令牌的有效期到了，如果让用户重新走一遍上面的流程，再申请一个新的令牌，很可能体验不好，而且也没有必要。OAuth 2.0 允许用户自动更新令牌。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164538420.png",alt:"image-20220623164538420"}})]),s._v(" "),n("p",[s._v("具体方法是，B 网站颁发令牌的时候，一次性颁发两个令牌，一个用于获取数据，另一个用于获取新的令牌（refresh token 字段）。令牌到期前，用户使用 refresh token 发一个请求，去更新令牌。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("> https://b.com/oauth/token?\n>   grant_type=refresh_token&    # grant_type参数为refresh_token表示要求更新令牌\n>   client_id=CLIENT_ID&\n>   client_secret=CLIENT_SECRET&\n>   refresh_token=REFRESH_TOKEN    # 用于更新令牌的令牌\n>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164548710.png",alt:"image-20220623164548710"}})]),s._v(" "),n("p",[n("strong",[s._v("3. Spring Security OAuth2快速开始")])]),s._v(" "),n("p",[s._v("Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的"),n("strong",[s._v("安全框架")]),s._v("。Spring Security 主要实现了"),n("strong",[s._v("Authentication")]),s._v("（认证，解决who are you? ） 和 "),n("strong",[s._v("Access Control")]),s._v("（访问控制，也就是what are you allowed to do？，也称为"),n("strong",[s._v("Authorization")]),s._v("）。Spring Security在架构上将认证与授权分离，并提供了扩展点。")]),s._v(" "),n("p",[n("strong",[s._v("认证（Authentication）")]),s._v(" ：用户认证就是判断一个用户的身份是否合法的过程，用户去访问系统资源时系统要求验证用户的身份信息，身份合法方可继续访问，不合法则拒绝访问。常见的用户身份认证方式有：用户名密码登录，二维码登录，手机短信登录，指纹认证等方式。")]),s._v(" "),n("p",[n("strong",[s._v("授权（Authorization）")]),s._v("： 授权是用户认证通过根据用户的权限来控制用户访问资源的过程，拥有资源的访问权限则正常访问，没有权限则拒绝访问。")]),s._v(" "),n("p",[s._v("将OAuth2和Spring Security集成，就可以得到一套完整的安全解决方案。我们可以通过Spring Security OAuth2构建一个授权服务器来验证用户身份以提供access_token，并使用这个access_token来从资源服务器请求数据。")]),s._v(" "),n("p",[n("strong",[s._v("3.1 授权服务器")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164559410.png",alt:"image-20220623164559410"}})]),s._v(" "),n("ul",[n("li",[s._v("Authorize Endpoint ：授权端点，进行授权")]),s._v(" "),n("li",[s._v("Token Endpoint ：令牌端点，经过授权拿到对应的Token")]),s._v(" "),n("li",[s._v("Introspection Endpoint ：校验端点，校验Token的合法性")]),s._v(" "),n("li",[s._v("Revocation Endpoint ：撤销端点，撤销授权")])]),s._v(" "),n("p",[n("strong",[s._v("3.2 整体架构")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164615905.png",alt:"image-20220623164615905"}})]),s._v(" "),n("p",[s._v("流程：")]),s._v(" "),n("ol",[n("li",[s._v("用户访问,此时没有Token。Oauth2RestTemplate会报错，这个报错信息会被Oauth2ClientContextFilter捕获并重定向到授权服务器。")]),s._v(" "),n("li",[s._v("授权服务器通过Authorization Endpoint进行授权，并通过AuthorizationServerTokenServices生成授权码并返回给客户端。")]),s._v(" "),n("li",[s._v("客户端拿到授权码去授权服务器通过Token Endpoint调用AuthorizationServerTokenServices生成Token并返回给客户端")]),s._v(" "),n("li",[s._v("客户端拿到Token去资源服务器访问资源，一般会通过Oauth2AuthenticationManager调用ResourceServerTokenServices进行校验。校验通过可以获取资源。")])]),s._v(" "),n("p",[n("strong",[s._v("3.3 授权码模式")])]),s._v(" "),n("p",[s._v("引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n\n<dependency>\n    <groupId>org.springframework.security.oauth</groupId>\n    <artifactId>spring-security-oauth2</artifactId>\n    <version>2.3.4.RELEASE</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("或者 引入spring cloud oauth2依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-oauth2</artifactId>\n</dependency>\n\n\x3c!-- spring cloud --\x3e\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Hoxton.SR8</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("配置 spring security")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public PasswordEncoder passwordEncoder(){\n        return new BCryptPasswordEncoder();\n    }\n\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin().permitAll()\n                .and().authorizeRequests()\n                .antMatchers("/oauth/**").permitAll()\n                .anyRequest().authenticated()\n                .and().logout().permitAll()\n                .and().csrf().disable();\n    }\n}\n\n@Service\npublic class UserService implements UserDetailsService {\n\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        String password = passwordEncoder.encode("123456");\n        return new User("fox",password, AuthorityUtils.commaSeparatedStringToAuthorityList("admin"));\n    }\n}\n\n@RestController\n@RequestMapping("/user")\npublic class UserController {\n\n    @RequestMapping("/getCurrentUser")\n    public Object getCurrentUser(Authentication authentication) {\n        return authentication.getPrincipal();\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("配置授权服务器")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\n@EnableAuthorizationServer\npublic class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter {\n\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n        clients.inMemory()\n                //配置client_id\n                .withClient("client")\n                //配置client-secret\n                .secret(passwordEncoder.encode("123123"))\n                //配置访问token的有效期\n                .accessTokenValiditySeconds(3600)\n                //配置刷新token的有效期\n                .refreshTokenValiditySeconds(864000)\n                //配置redirect_uri，用于授权成功后跳转\n                .redirectUris("http://www.baidu.com")\n                //配置申请的权限范围\n                .scopes("all")\n                //配置grant_type，表示授权类型\n                .authorizedGrantTypes("authorization_code");\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("配置资源服务器")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\n@EnableResourceServer\npublic class ResourceServiceConfig extends ResourceServerConfigurerAdapter {\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n        .anyRequest().authenticated()\n        .and().requestMatchers().antMatchers("/user/**");\n\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("测试")]),s._v(" "),n("p",[n("strong",[s._v("获取授权码")])]),s._v(" "),n("p",[s._v("http://localhost:8080/oauth/authorize?response_type=code&client_id=client 或者 http://localhost:8080/oauth/authorize?response_type=code&client_id=client&redirect_uri=http://www.baidu.com&scope=all")]),s._v(" "),n("p",[s._v("登录之后进入")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164703993.png",alt:"image-20220623164703993"}})]),s._v(" "),n("p",[s._v("选择Approve，点击授权获取授权码")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164715941.png",alt:"image-20220623164715941"}})]),s._v(" "),n("p",[n("strong",[s._v("获取令牌")])]),s._v(" "),n("p",[s._v("根据授权码通过post请求获取")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164727182.png",alt:"image-20220623164727182"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164737048.png",alt:"image-20220623164737048"}})]),s._v(" "),n("p",[s._v("或者")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164807953.png",alt:"image-20220623164807953"}})]),s._v(" "),n("p",[s._v("或者")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164816588.png",alt:"image-20220623164816588"}})]),s._v(" "),n("p",[n("strong",[s._v("3.4 简化模式")])]),s._v(" "),n("p",[s._v("authorizedGrantType添加implicit")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164825828.png",alt:"image-20220623164825828"}})]),s._v(" "),n("p",[s._v("测试")]),s._v(" "),n("p",[s._v("http://localhost:8080/oauth/authorize?client_id=client&response_type=token&scope=all&redirect_uri=http://www.baidu.com")]),s._v(" "),n("p",[s._v("登录之后进入授权页面，确定授权后浏览器会重定向到指定路径，并以Hash的形式存放在重定向uri的fargment中：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164836016.png",alt:"image-20220623164836016"}})]),s._v(" "),n("p",[n("strong",[s._v("3.5 密码模式")])]),s._v(" "),n("p",[s._v("修改WebSecurityConfig，增加AuthenticationManager")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public PasswordEncoder passwordEncoder(){\n        return new BCryptPasswordEncoder();\n    }\n\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin().permitAll()\n                .and().authorizeRequests()\n                .antMatchers("/oauth/**").permitAll()\n                .anyRequest().authenticated()\n                .and().logout().permitAll()\n                .and().csrf().disable();\n\n    }\n\n    @Bean\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("修改AuthorizationServerConfig配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Configuration\n@EnableAuthorizationServer\npublic class AuthorizationServerConfig2 extends AuthorizationServerConfigurerAdapter {\n\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Autowired\n    private AuthenticationManager authenticationManagerBean;\n\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n        endpoints.authenticationManager(authenticationManagerBean) //使用密码模式需要配置\n                .allowedTokenEndpointRequestMethods(HttpMethod.GET,HttpMethod.POST); //支持GET,POST请求\n    }\n\n    @Override\n    public void configure(AuthorizationServerSecurityConfigurer security) throws Exception {\n        //允许表单认证\n        security.allowFormAuthenticationForClients();\n    }\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n\n        /**\n         *授权码模式\n         *http://localhost:8080/oauth/authorize?response_type=code&client_id=client&redirect_uri=http://www.baidu.com&scope=all\n         *http://localhost:8080/oauth/authorize?response_type=code&client_id=client\n         *\n         * password模式\n         *  http://localhost:8080/oauth/token?username=fox&password=123456&grant_type=password&client_id=client&client_secret=123123&scope=all\n         *\n         *  客户端模式\n         *  http://localhost:8080/oauth/token?grant_type=client_credentials&scope=all&client_id=client&client_secret=123123\n         */\n        clients.inMemory()\n                //配置client_id\n                .withClient("client")\n                //配置client-secret\n                .secret(passwordEncoder.encode("123123"))\n                //配置访问token的有效期\n                .accessTokenValiditySeconds(3600)\n                //配置刷新token的有效期\n                .refreshTokenValiditySeconds(864000)\n                //配置redirect_uri，用于授权成功后跳转\n                .redirectUris("http://www.baidu.com")\n                //配置申请的权限范围\n                .scopes("all")\n                /**\n                 * 配置grant_type，表示授权类型\n                 * authorization_code: 授权码\n                 * password： 密码\n                 * client_credentials: 客户端\n                 */\n                .authorizedGrantTypes("authorization_code","password","client_credentials");\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br")])]),n("p",[n("strong",[s._v("获取令牌")])]),s._v(" "),n("p",[s._v("通过浏览器测试，需要配置支持get请求和表单验证")]),s._v(" "),n("p",[s._v("http://localhost:8080/oauth/token?username=fox&password=123456&grant_type=password&client_id=client&client_secret=123123&scope=all")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164845079.png",alt:"image-20220623164845079"}})]),s._v(" "),n("p",[s._v("通过Postman测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164855831.png",alt:"image-20220623164855831"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164902450.png",alt:"image-20220623164902450"}})]),s._v(" "),n("p",[n("strong",[s._v("访问资源")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164920794.png",alt:"image-20220623164920794"}})]),s._v(" "),n("p",[n("strong",[s._v("3.6 客户端模式")])]),s._v(" "),n("p",[n("strong",[s._v("获取令牌")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623164948561.png",alt:"image-20220623164948561"}})]),s._v(" "),n("p",[n("strong",[s._v("3.7 更新令牌")])]),s._v(" "),n("p",[s._v("使用oauth2时，如果令牌失效了，可以使用刷新令牌通过refresh_token的授权模式再次获取access_token。只需修改认证服务器的配置，添加refresh_token的授权模式即可。")]),s._v(" "),n("p",[s._v("修改授权服务器配置，增加refresh_token配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Autowired\nprivate UserService userService;\n@Override\npublic void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n    endpoints.authenticationManager(authenticationManagerBean) //使用密码模式需要配置\n        // .tokenStore(tokenStore)  //指定token存储到redis\n        .reuseRefreshTokens(false)  //refresh_token是否重复使用\n        .userDetailsService(userService) //刷新令牌授权包含对用户信息的检查\n        .allowedTokenEndpointRequestMethods(HttpMethod.GET,HttpMethod.POST); //支持GET,POST请求\n}\n\n @Override\npublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n\n    /**\n         *授权码模式\n         *http://localhost:8080/oauth/authorize?response_type=code&client_id=client&redirect_uri=http://www.baidu.com&scope=all\n         *http://localhost:8080/oauth/authorize?response_type=code&client_id=client\n         *\n         * password模式\n         *  http://localhost:8080/oauth/token?username=fox&password=123456&grant_type=password&client_id=client&client_secret=123123&scope=all\n         *\n         *  客户端模式\n         *  http://localhost:8080/oauth/token?grant_type=client_credentials&scope=all&client_id=client&client_secret=123123\n         */\n    clients.inMemory()\n        //配置client_id\n        .withClient("client")\n        //配置client-secret\n        .secret(passwordEncoder.encode("123123"))\n        //配置访问token的有效期\n        .accessTokenValiditySeconds(3600)\n        //配置刷新token的有效期\n        .refreshTokenValiditySeconds(864000)\n        //配置redirect_uri，用于授权成功后跳转\n        .redirectUris("http://www.baidu.com")\n        //配置申请的权限范围\n        .scopes("all")\n        /**\n                 * 配置grant_type，表示授权类型\n                 * authorization_code: 授权码\n                 * password： 密码\n                 * client_credentials: 客户端\n                 * refresh_token: 更新令牌\n                 */\n        .authorizedGrantTypes("authorization_code","password","client_credentials","refresh_token");\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("通过密码模式测试")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623165010842.png",alt:"image-20220623165010842"}})]),s._v(" "),n("p",[s._v("http://localhost:8080/oauth/token?grant_type=refresh_token&client_id=client&client_secret=123123&refresh_token=dc03bdc2-ca3b-4690-9265-d31a21896d02")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/image-20220623165024275.png",alt:"image-20220623165024275"}})]),s._v(" "),n("p",[n("strong",[s._v("3.8 基于redis存储Token")])]),s._v(" "),n("p",[s._v("引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-pool2</artifactId>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("修改application.yaml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  redis:\n    host: 127.0.0.1\n    database: 0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("编写redis配置类")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Configuration\npublic class RedisConfig {\n    @Autowired\n    private RedisConnectionFactory redisConnectionFactory;\n    @Bean\n    public TokenStore tokenStore(){\n        return new RedisTokenStore(redisConnectionFactory);\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("在授权服务器配置中指定令牌的存储策略为Redis")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Autowired\nprivate TokenStore tokenStore;\n\n@Override\npublic void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n    endpoints.authenticationManager(authenticationManagerBean) //使用密码模式需要配置\n        .tokenStore(tokenStore)  //指定token存储到redis\n        .reuseRefreshTokens(false)  //refresh_token是否重复使用\n        .userDetailsService(userService) //刷新令牌授权包含对用户信息的检查\n        .allowedTokenEndpointRequestMethods(HttpMethod.GET,HttpMethod.POST); //支持GET,POST请求\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"图片附录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图片附录"}},[s._v("#")]),s._v(" 图片附录")]),s._v(" "),n("h3",{attrs:{id:"oauth2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#oauth2"}},[s._v("#")]),s._v(" OAuth2")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://gitee.com/nylg/picture/raw/master/springboot/OAuth2.jpg",alt:"OAuth2"}})])])}),[],!1,null,null,null);n.default=a.exports}}]);